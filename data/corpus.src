public void process echo <STRING> Map String String options env getOptions String key options keySet echo <STRING> key <STRING> options get key TypeDeclaration typeDecl env getSpecifiedTypeDeclarations typeDecl accept getDeclarationScanner ClassVisitor NO_OP
public void testAssertRaised true false fail <STRING> AssertionError asserto
public void execute BuildException fileset null fileset getDir getProject null BuildException <STRING> Enumeration e nestedTasks elements e hasMoreElements Task nestedTask Task e nextElement nestedTask perform nestedEcho reconfigure nestedEcho perform
public void testNullPointer IOException CBZip2InputStream cb CBZip2InputStream ByteArrayInputStream byte <INT> fail <STRING> IOException e
public void testLongRoundTripping IOException TarEntry original TarEntry LONG_NAME assertTrue <STRING> LONG_NAME length <INT> assertEquals <STRING> LONG_NAME original getName ByteArrayOutputStream buff ByteArrayOutputStream TarOutputStream tos TarOutputStream buff tos setLongFileMode TarOutputStream LONGFILE_GNU tos putNextEntry original tos closeEntry tos close TarInputStream tis TarInputStream ByteArrayInputStream buff toByteArray TarEntry tripped tis getNextEntry assertEquals <STRING> LONG_NAME tripped getName assertNull <STRING> tis getNextEntry tis close
public void testModes AsiExtraField a AsiExtraField a setMode <INT> assertEquals <STRING> <INT> a getMode a setDirectory true assertEquals <STRING> <INT> a getMode a setLinkedFile <STRING> assertEquals <STRING> <INT> a getMode
public void testContent AsiExtraField a AsiExtraField a setMode <INT> a setUserId <INT> a setGroupId <INT> byte b a getLocalFileDataData byte expect byte <INT> <INT> <INT> byte <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> assertEquals <STRING> expect length b length int i <INT> i expect length i assertEquals <STRING> i expect i b i a setLinkedFile <STRING> expect byte <INT> byte <INT> <INT> byte <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> byte <CHAR> byte <CHAR> byte <CHAR> byte <CHAR> b a getLocalFileDataData assertEquals <STRING> expect length b length int i <INT> i expect length i assertEquals <STRING> i expect i b i
public void testReparse Exception byte data byte <INT> <INT> <INT> byte <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> AsiExtraField a AsiExtraField a parseFromLocalFileData data <INT> data length assertEquals <STRING> data length a getLocalFileDataLength getValue assertTrue <STRING> a isLink assertTrue <STRING> a isDirectory assertEquals <STRING> FILE_FLAG <INT> a getMode assertEquals <STRING> <INT> a getUserId assertEquals <STRING> <INT> a getGroupId data byte <INT> byte <INT> <INT> byte <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> byte <CHAR> byte <CHAR> byte <CHAR> byte <CHAR> a AsiExtraField a parseFromLocalFileData data <INT> data length assertEquals <STRING> data length a getLocalFileDataLength getValue assertTrue <STRING> a isLink assertTrue <STRING> a isDirectory assertEquals <STRING> LINK_FLAG <INT> a getMode assertEquals <STRING> <INT> a getUserId assertEquals <STRING> <INT> a getGroupId assertEquals <STRING> a getLinkedFile data byte byte <INT> <INT> byte <INT> byte <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> a AsiExtraField a parseFromLocalFileData data <INT> data length assertEquals <STRING> data length a getLocalFileDataLength getValue assertTrue <STRING> a isLink assertTrue <STRING> a isDirectory assertEquals <STRING> DIR_FLAG <INT> a getMode assertEquals <STRING> <INT> a getUserId assertEquals <STRING> <INT> a getGroupId data byte <INT> <INT> <INT> <INT> <INT> byte <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> <INT> a AsiExtraField a parseFromLocalFileData data <INT> data length fail <STRING> Exception e assertEquals <STRING> e getMessage
public void testClone AsiExtraField s1 AsiExtraField s1 setUserId <INT> s1 setGroupId <INT> s1 setLinkedFile <STRING> s1 setMode <INT> s1 setDirectory true AsiExtraField s2 AsiExtraField s1 clone assertNotSame s1 s2 assertEquals s1 getUserId s2 getUserId assertEquals s1 getGroupId s2 getGroupId assertEquals s1 getLinkedFile s2 getLinkedFile assertEquals s1 getMode s2 getMode assertEquals s1 isDirectory s2 isDirectory
public void testToBytes ZipLong zl ZipLong <INT> byte result zl getBytes assertEquals <STRING> <INT> result length assertEquals <STRING> <INT> result <INT> assertEquals <STRING> <INT> result <INT> assertEquals <STRING> <INT> result <INT> assertEquals <STRING> <INT> result <INT>
public void testFromBytes byte val byte <INT> <INT> <INT> <INT> ZipLong zl ZipLong val assertEquals <STRING> <INT> zl getValue
public void testEquals ZipLong zl ZipLong <INT> ZipLong zl2 ZipLong <INT> ZipLong zl3 ZipLong <INT> assertTrue <STRING> zl equals zl assertTrue <STRING> zl equals zl2 assertTrue <STRING> zl equals zl3 assertTrue <STRING> zl2 equals zl assertTrue <STRING> zl equals null assertTrue <STRING> zl equals Integer <INT>
public void testSign ZipLong zl ZipLong byte byte <INT> byte <INT> byte <INT> byte <INT> assertEquals <INT> zl getValue
public void testClone ZipLong s1 ZipLong <INT> ZipLong s2 ZipLong s1 clone assertNotSame s1 s2 assertEquals s1 s2 assertEquals s1 getValue s2 getValue
public void testNioCp1252Encoding IOException byte b bytebyte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> byte <INT> doSimpleEncodingTest <STRING> b
private static final void assertEquals byte expected ByteBuffer actual assertEquals expected length actual limit int i <INT> i expected length i byte a actual get assertEquals expected i a
private void doSimpleEncodingTest String name byte testBytes IOException ZipEncoding enc ZipEncodingHelper getZipEncoding name testBytes null testBytes byte <INT> int i <INT> i <INT> i testBytes i byte i String decoded enc decode testBytes assertEquals true enc canEncode decoded ByteBuffer encoded enc encode decoded assertEquals testBytes encoded assertEquals false enc canEncode UNENC_STRING assertEquals <STRING> getBytes <STRING> enc encode UNENC_STRING assertEquals false enc canEncode BAD_STRING assertEquals BAD_STRING_ENC getBytes <STRING> enc encode BAD_STRING
public void testExtraFields AsiExtraField a AsiExtraField a setDirectory true a setMode <INT> UnrecognizedExtraField u UnrecognizedExtraField u setHeaderId ZipShort <INT> u setLocalFileDataData byte <INT> ZipEntry ze ZipEntry <STRING> ze setExtraFields ZipExtraField a u byte data1 ze getExtra ZipExtraField result ze getExtraFields assertEquals <STRING> <INT> result length assertSame a result <INT> assertSame u result <INT> UnrecognizedExtraField u2 UnrecognizedExtraField u2 setHeaderId ZipShort <INT> u2 setLocalFileDataData byte <INT> ze addExtraField u2 byte data2 ze getExtra result ze getExtraFields assertEquals <STRING> <INT> result length assertSame a result <INT> assertSame u2 result <INT> assertEquals <STRING> data1 length <INT> data2 length UnrecognizedExtraField u3 UnrecognizedExtraField u3 setHeaderId ZipShort <INT> u3 setLocalFileDataData byte <INT> ze addExtraField u3 result ze getExtraFields assertEquals <STRING> <INT> result length ze removeExtraField ZipShort <INT> byte data3 ze getExtra result ze getExtraFields assertEquals <STRING> <INT> result length assertSame a result <INT> assertSame u3 result <INT> assertEquals <STRING> data2 length data3 length ze removeExtraField ZipShort <INT> fail <STRING> java util NoSuchElementException nse
public void testExtraFieldMerging AsiExtraField a AsiExtraField a setDirectory true a setMode <INT> UnrecognizedExtraField u UnrecognizedExtraField u setHeaderId ZipShort <INT> u setLocalFileDataData byte <INT> ZipEntry ze ZipEntry <STRING> ze setExtraFields ZipExtraField a u ze setCentralDirectoryExtra byte <INT> <INT> <INT> <INT> <INT> ZipExtraField result ze getExtraFields assertEquals <STRING> <INT> result length assertSame a result <INT> assertEquals ZipShort <INT> result <INT> getHeaderId assertEquals ZipShort <INT> result <INT> getLocalFileDataLength assertEquals ZipShort <INT> result <INT> getCentralDirectoryLength ze setCentralDirectoryExtra byte <INT> <INT> <INT> <INT> result ze getExtraFields assertEquals <STRING> <INT> result length ze setExtra byte <INT> <INT> <INT> <INT> <INT> result ze getExtraFields assertEquals <STRING> <INT> result length assertSame a result <INT> assertEquals ZipShort <INT> result <INT> getHeaderId assertEquals ZipShort <INT> result <INT> getLocalFileDataLength assertEquals ZipShort <INT> result <INT> getCentralDirectoryLength
public void testAddAsFirstExtraField AsiExtraField a AsiExtraField a setDirectory true a setMode <INT> UnrecognizedExtraField u UnrecognizedExtraField u setHeaderId ZipShort <INT> u setLocalFileDataData byte <INT> ZipEntry ze ZipEntry <STRING> ze setExtraFields ZipExtraField a u byte data1 ze getExtra UnrecognizedExtraField u2 UnrecognizedExtraField u2 setHeaderId ZipShort <INT> u2 setLocalFileDataData byte <INT> ze addAsFirstExtraField u2 byte data2 ze getExtra ZipExtraField result ze getExtraFields assertEquals <STRING> <INT> result length assertSame u2 result <INT> assertSame a result <INT> assertEquals <STRING> data1 length <INT> data2 length UnrecognizedExtraField u3 UnrecognizedExtraField u3 setHeaderId ZipShort <INT> u3 setLocalFileDataData byte <INT> ze addAsFirstExtraField u3 result ze getExtraFields assertEquals <STRING> <INT> result length assertSame u3 result <INT> assertSame u2 result <INT> assertSame a result <INT>
public void testUnixMode ZipEntry ze ZipEntry <STRING> assertEquals <INT> ze getPlatform ze setUnixMode <INT> assertEquals <INT> ze getPlatform assertEquals <INT> ze getExternalAttributes <INT> <INT> assertEquals <INT> ze getExternalAttributes <INT> ze setUnixMode <INT> assertEquals <INT> ze getPlatform assertEquals <INT> ze getExternalAttributes <INT> <INT> assertEquals <INT> ze getExternalAttributes <INT> ze ZipEntry <STRING> assertEquals <INT> ze getPlatform ze setUnixMode <INT> assertEquals <INT> ze getPlatform assertEquals <INT> ze getExternalAttributes <INT> <INT> assertEquals <INT> ze getExternalAttributes <INT> ze setUnixMode <INT> assertEquals <INT> ze getPlatform assertEquals <INT> ze getExternalAttributes <INT> <INT> assertEquals <INT> ze getExternalAttributes <INT>
public void testToBytes ZipShort zs ZipShort <INT> byte result zs getBytes assertEquals <STRING> <INT> result length assertEquals <STRING> <INT> result <INT> assertEquals <STRING> <INT> result <INT>
public void testFromBytes byte val byte <INT> <INT> ZipShort zs ZipShort val assertEquals <STRING> <INT> zs getValue
public void testEquals ZipShort zs ZipShort <INT> ZipShort zs2 ZipShort <INT> ZipShort zs3 ZipShort <INT> assertTrue <STRING> zs equals zs assertTrue <STRING> zs equals zs2 assertTrue <STRING> zs equals zs3 assertTrue <STRING> zs2 equals zs assertTrue <STRING> zs equals null assertTrue <STRING> zs equals Integer <INT>
public void testClone ZipShort s1 ZipShort <INT> ZipShort s2 ZipShort s1 clone assertNotSame s1 s2 assertEquals s1 s2 assertEquals s1 getValue s2 getValue
public void setUp a AsiExtraField a setMode <INT> a setDirectory true dummy UnrecognizedExtraField dummy setHeaderId ZipShort <INT> dummy setLocalFileDataData byte <INT> dummy setCentralDirectoryData byte <INT> aLocal a getLocalFileDataData byte dummyLocal dummy getLocalFileDataData data byte <INT> aLocal length <INT> dummyLocal length System arraycopy a getHeaderId getBytes <INT> data <INT> <INT> System arraycopy a getLocalFileDataLength getBytes <INT> data <INT> <INT> System arraycopy aLocal <INT> data <INT> aLocal length System arraycopy dummy getHeaderId getBytes <INT> data <INT> aLocal length <INT> System arraycopy dummy getLocalFileDataLength getBytes <INT> data <INT> aLocal length <INT> <INT> System arraycopy dummyLocal <INT> data <INT> aLocal length <INT> dummyLocal length
public void testParse Exception ZipExtraField ze ExtraFieldUtils parse data assertEquals <STRING> <INT> ze length assertTrue <STRING> ze <INT> AsiExtraField assertEquals <STRING> <INT> AsiExtraField ze <INT> getMode assertTrue <STRING> ze <INT> UnrecognizedExtraField assertEquals <STRING> <INT> ze <INT> getLocalFileDataLength getValue byte data2 byte data length <INT> System arraycopy data <INT> data2 <INT> data2 length ExtraFieldUtils parse data2 fail <STRING> Exception e assertEquals <STRING> <STRING> <INT> aLocal length <STRING> e getMessage
public void testParseWithRead Exception ZipExtraField ze ExtraFieldUtils parse data true ExtraFieldUtils UnparseableExtraField READ assertEquals <STRING> <INT> ze length assertTrue <STRING> ze <INT> AsiExtraField assertEquals <STRING> <INT> AsiExtraField ze <INT> getMode assertTrue <STRING> ze <INT> UnrecognizedExtraField assertEquals <STRING> <INT> ze <INT> getLocalFileDataLength getValue byte data2 byte data length <INT> System arraycopy data <INT> data2 <INT> data2 length ze ExtraFieldUtils parse data2 true ExtraFieldUtils UnparseableExtraField READ assertEquals <STRING> <INT> ze length assertTrue <STRING> ze <INT> AsiExtraField assertEquals <STRING> <INT> AsiExtraField ze <INT> getMode assertTrue <STRING> ze <INT> UnparseableExtraFieldData assertEquals <STRING> <INT> ze <INT> getLocalFileDataLength getValue int i <INT> i <INT> i assertEquals <STRING> i data2 data length <INT> i ze <INT> getLocalFileDataData i
public void testParseWithSkip Exception ZipExtraField ze ExtraFieldUtils parse data true ExtraFieldUtils UnparseableExtraField SKIP assertEquals <STRING> <INT> ze length assertTrue <STRING> ze <INT> AsiExtraField assertEquals <STRING> <INT> AsiExtraField ze <INT> getMode assertTrue <STRING> ze <INT> UnrecognizedExtraField assertEquals <STRING> <INT> ze <INT> getLocalFileDataLength getValue byte data2 byte data length <INT> System arraycopy data <INT> data2 <INT> data2 length ze ExtraFieldUtils parse data2 true ExtraFieldUtils UnparseableExtraField SKIP assertEquals <STRING> <INT> ze length assertTrue <STRING> ze <INT> AsiExtraField assertEquals <STRING> <INT> AsiExtraField ze <INT> getMode
public void testMerge byte local ExtraFieldUtils mergeLocalFileDataData ZipExtraField a dummy assertEquals <STRING> data length local length int i <INT> i local length i assertEquals <STRING> i data i local i byte dummyCentral dummy getCentralDirectoryData byte data2 byte <INT> aLocal length <INT> dummyCentral length System arraycopy data <INT> data2 <INT> <INT> aLocal length <INT> System arraycopy dummy getCentralDirectoryLength getBytes <INT> data2 <INT> aLocal length <INT> <INT> System arraycopy dummyCentral <INT> data2 <INT> aLocal length <INT> dummyCentral length byte central ExtraFieldUtils mergeCentralDirectoryData ZipExtraField a dummy assertEquals <STRING> data2 length central length int i <INT> i central length i assertEquals <STRING> i data2 i central i
public void testMergeWithUnparseableData Exception ZipExtraField d UnparseableExtraFieldData d parseFromLocalFileData byte <INT> <INT> <INT> <INT> <INT> <INT> byte local ExtraFieldUtils mergeLocalFileDataData ZipExtraField a d assertEquals <STRING> data length <INT> local length int i <INT> i local length i assertEquals <STRING> i data i local i byte dCentral d getCentralDirectoryData byte data2 byte <INT> aLocal length dCentral length System arraycopy data <INT> data2 <INT> <INT> aLocal length <INT> System arraycopy dCentral <INT> data2 <INT> aLocal length dCentral length byte central ExtraFieldUtils mergeCentralDirectoryData ZipExtraField a d assertEquals <STRING> data2 length central length int i <INT> i central length i assertEquals <STRING> i data2 i central i
public void testZipFileReadsUnicodeFields IOException File file File createTempFile <STRING> <STRING> ZipFile zf null createTestFile file US_ASCII false true zf ZipFile file US_ASCII true assertNotNull zf getEntry ASCII_TXT assertNotNull zf getEntry EURO_FOR_DOLLAR_TXT assertNotNull zf getEntry OIL_BARREL_TXT ZipFile closeQuietly zf file exists file delete
private static void testFileRoundtrip String encoding boolean withEFS boolean withExplicitUnicodeExtra IOException File file File createTempFile encoding <STRING> <STRING> createTestFile file encoding withEFS withExplicitUnicodeExtra testFile file encoding file exists file delete
private static void createTestFile File file String encoding boolean withEFS boolean withExplicitUnicodeExtra UnsupportedEncodingException IOException ZipEncoding zipEncoding ZipEncodingHelper getZipEncoding encoding ZipOutputStream zos null zos ZipOutputStream file zos setEncoding encoding zos setUseLanguageEncodingFlag withEFS zos setCreateUnicodeExtraFields withExplicitUnicodeExtra ZipOutputStream UnicodeExtraFieldPolicy NEVER ZipOutputStream UnicodeExtraFieldPolicy ALWAYS ZipEntry ze ZipEntry OIL_BARREL_TXT withExplicitUnicodeExtra zipEncoding canEncode ze getName ByteBuffer en zipEncoding encode ze getName ze addExtraField UnicodePathExtraField ze getName en array en arrayOffset en limit zos putNextEntry ze zos write <STRING> getBytes <STRING> zos closeEntry ze ZipEntry EURO_FOR_DOLLAR_TXT withExplicitUnicodeExtra zipEncoding canEncode ze getName ByteBuffer en zipEncoding encode ze getName ze addExtraField UnicodePathExtraField ze getName en array en arrayOffset en limit zos putNextEntry ze zos write <STRING> getBytes <STRING> zos closeEntry ze ZipEntry ASCII_TXT withExplicitUnicodeExtra zipEncoding canEncode ze getName ByteBuffer en zipEncoding encode ze getName ze addExtraField UnicodePathExtraField ze getName en array en arrayOffset en limit zos putNextEntry ze zos write <STRING> getBytes <STRING> zos closeEntry zos null zos close IOException e
private static void testFile File file String encoding IOException ZipFile zf null zf ZipFile file encoding false Enumeration e zf getEntries e hasMoreElements ZipEntry ze ZipEntry e nextElement ze getName endsWith <STRING> assertUnicodeName ze OIL_BARREL_TXT encoding ze getName endsWith <STRING> assertUnicodeName ze EURO_FOR_DOLLAR_TXT encoding ze getName equals ASCII_TXT AssertionError <STRING> ze getName <STRING> ZipFile closeQuietly zf
private static void assertUnicodeName ZipEntry ze String expectedName String encoding IOException expectedName equals ze getName UnicodePathExtraField ucpf findUniCodePath ze assertNotNull ucpf ZipEncoding enc ZipEncodingHelper getZipEncoding encoding ByteBuffer ne enc encode ze getName CRC32 crc CRC32 crc update ne array ne arrayOffset ne limit assertEquals crc getValue ucpf getNameCRC32 assertEquals expectedName String ucpf getUnicodeName UTF_8
protected void setUp Exception time Date Calendar cal Calendar getInstance cal setTime time int year cal get Calendar YEAR int month cal get Calendar MONTH <INT> long value year <INT> <INT> month <INT> cal get Calendar DAY_OF_MONTH <INT> cal get Calendar HOUR_OF_DAY <INT> cal get Calendar MINUTE <INT> cal get Calendar SECOND <INT> byte result byte <INT> result <INT> byte value <INT> result <INT> byte value <INT> <INT> result <INT> byte value <INT> <INT> result <INT> byte value <INT> <INT> zl ZipLong result
public void testAPIExample ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient to <STRING> testMailClient cc <STRING> testMailClient cc <STRING> testMailClient bcc <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> int icounter <INT> icounter expectedResult length icounter icounter result length expectedResult charAt icounter result charAt icounter System out println <STRING> icounter <STRING> expectedResult charAt icounter <STRING> result charAt icounter expectedResult length result length System out println <STRING> expectedResult substring result length expectedResult length result length System out println <STRING> result substring expectedResult length assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testToOnly ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient to <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testCcOnly ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient cc <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testBccOnly ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient bcc <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testNoSubject ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient to <STRING> testMailClient setMessage <STRING> <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testEmptyBody ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient to <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> assertEquals expectedResult length result length assertEquals expectedResult result testMailClient isFailed fail testMailClient getFailMessage
public void testAsciiCharset ServerThread testMailServer ServerThread Thread server Thread testMailServer server start ClientThread testMailClient ClientThread testMailClient from <STRING> testMailClient to <STRING> testMailClient setSubject <STRING> testMailClient setMessage <STRING> Thread client Thread testMailClient client start server join <INT> <INT> client join <INT> <INT> InterruptedException ie fail <STRING> ie String result testMailServer getResult String expectedResult <STRING> <STRING> local <STRING> <STRING> local <STRING> local <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> ByteArrayOutputStream baos1 ByteArrayOutputStream ByteArrayOutputStream baos2 ByteArrayOutputStream PrintStream bos1 PrintStream baos1 true PrintStream bos2 PrintStream baos2 true bos1 print expectedResult bos2 print result assertEquals <STRING> <STRING> expectedResult length result length assertEquals <STRING> baos1 toString baos2 toString testMailClient isFailed fail testMailClient getFailMessage
public void test1 DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String <STRING>
public void test2 DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void test3 DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING> <STRING>
public void testFullPathMatchesCaseSensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String
public void testFullPathMatchesCaseInsensitive DirectoryScanner ds DirectoryScanner ds setCaseSensitive false ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String <STRING> String
public void test2ButCaseInsensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testAllowSymlinks supportsSymlinks return getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String <STRING> String <STRING>
public void testProhibitSymlinks supportsSymlinks return getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setFollowSymlinks false ds scan compareFiles ds String String
public void testOrderOfIncludePatternsIrrelevant String expectedFiles <STRING> <STRING> String expectedDirectories <STRING> <STRING> DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds expectedFiles expectedDirectories ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds expectedFiles expectedDirectories
public void testPatternsDifferInCaseScanningSensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testPatternsDifferInCaseScanningInsensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testFullpathDiffersInCaseScanningSensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> String
public void testFullpathDiffersInCaseScanningInsensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> String
public void testParentDiffersInCaseScanningSensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testParentDiffersInCaseScanningInsensitive DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testSetFollowLinks IOException supportsSymlinks File linkFile File System getProperty <STRING> <STRING> System err println <STRING> linkFile exists String command String <STRING> <STRING> <STRING> linkFile getAbsolutePath Runtime getRuntime exec command Thread sleep <INT> IOException ioe fail <STRING> ioe InterruptedException ie File dir File System getProperty <STRING> <STRING> System err println <STRING> linkFile exists System err println <STRING> SymbolicLinkUtils getSymbolicLinkUtils isSymbolicLink dir <STRING> DirectoryScanner ds DirectoryScanner ds setFollowSymlinks true ds setBasedir dir ds setExcludes String <STRING> ds scan boolean haveZipPackage false boolean haveTaskdefsPackage false String included ds getIncludedDirectories int i <INT> i included length i included i equals <STRING> haveZipPackage true included i equals <STRING> File separator <STRING> haveTaskdefsPackage true assertTrue <STRING> haveZipPackage assertTrue <STRING> haveTaskdefsPackage ds DirectoryScanner ds setFollowSymlinks false ds setBasedir dir ds setExcludes String <STRING> ds scan haveZipPackage false haveTaskdefsPackage false included ds getIncludedDirectories int i <INT> i included length i included i equals <STRING> haveZipPackage true included i equals <STRING> File separator <STRING> haveTaskdefsPackage true assertTrue <STRING> haveZipPackage assertTrue <STRING> haveTaskdefsPackage System err println <STRING> linkFile exists linkFile delete RuntimeException <STRING> linkFile System err println <STRING> linkFile exists
public void testExcludeOneFile DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String <STRING> String
public void testExcludeHasPrecedence DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String String
public void testAlternateIncludeExclude DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String String <STRING>
public void testAlternateExcludeInclude DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String
public void testChildrenOfExcludedDirectory getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds setFollowSymlinks false ds scan compareFiles ds String <STRING> String <STRING> <STRING> ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds setFollowSymlinks false ds scan compareFiles ds String <STRING> <STRING> <STRING> String <STRING> <STRING> <STRING> <STRING>
public void testIsExcludedDirectoryScanned String shareclassloader getProject getProperty <STRING> shareclassloader null shareclassloader null shareclassloader indexOf <STRING> <INT> System out println <STRING> <STRING> return getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds setFollowSymlinks false ds scan Set set ds getScannedDirs assertFalse <STRING> set isEmpty String s <STRING> replace <CHAR> File separatorChar assertFalse <STRING> s set contains s
public void testAbsolute1 getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner String tmpdir getProject getBaseDir getAbsolutePath replace File separatorChar <CHAR> <STRING> ds setIncludes String tmpdir <STRING> ds scan compareFiles ds String tmpdir <STRING> tmpdir <STRING> tmpdir <STRING> String tmpdir <STRING> tmpdir <STRING> tmpdir <STRING> tmpdir <STRING>
public void testAbsolute2 getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner ds setIncludes String <STRING> <STRING> ds scan String mt String <INT> compareFiles ds mt mt
public void testAbsolute3 getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner String tmpdir getProject getBaseDir getAbsolutePath replace File separatorChar <CHAR> <STRING> ds setIncludes String tmpdir <STRING> ds setExcludes String <STRING> <STRING> ds scan compareFiles ds String tmpdir <STRING> tmpdir <STRING> String tmpdir <STRING> tmpdir <STRING> tmpdir <STRING>
public void testAbsolute4 getProject executeTarget <STRING> DirectoryScanner ds DirectoryScanner String tmpdir getProject getBaseDir getAbsolutePath replace File separatorChar <CHAR> <STRING> ds setIncludes String tmpdir <STRING> tmpdir <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String tmpdir <STRING> tmpdir <STRING> String tmpdir <STRING>
public void testAbsolute5 Os isFamily <STRING> Os isFamily <STRING> return DirectoryScanner ds DirectoryScanner String pattern File File separator getAbsolutePath toUpperCase <STRING> ds setIncludes String pattern ds scan assertTrue <STRING> ds getIncludedFilesCount ds getIncludedDirsCount <INT>
private void compareFiles DirectoryScanner ds String expectedFiles String expectedDirectories String includedFiles ds getIncludedFiles String includedDirectories ds getIncludedDirectories assertEquals <STRING> expectedFiles length includedFiles length assertEquals <STRING> expectedDirectories length includedDirectories length TreeSet files TreeSet int counter <INT> counter includedFiles length counter files add includedFiles counter replace File separatorChar <CHAR> TreeSet directories TreeSet int counter <INT> counter includedDirectories length counter directories add includedDirectories counter replace File separatorChar <CHAR> String currentfile Iterator i files iterator int counter <INT> i hasNext currentfile String i next assertEquals expectedFiles counter currentfile counter String currentdirectory Iterator dirit directories iterator counter <INT> dirit hasNext currentdirectory String dirit next assertEquals expectedDirectories counter currentdirectory counter
public void testRecursiveExcludes Exception DirectoryScanner ds DirectoryScanner ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds scan List dirs Arrays asList ds getExcludedDirectories assertEquals <INT> dirs size assertTrue <STRING> dirs contains <STRING> replace <CHAR> File separatorChar assertTrue <STRING> dirs contains <STRING> replace <CHAR> File separatorChar List files Arrays asList ds getExcludedFiles assertEquals <INT> files size assertTrue <STRING> files contains <STRING> replace <CHAR> File separatorChar assertTrue <STRING> files contains <STRING> replace <CHAR> File separatorChar
public void testContentsExcluded DirectoryScanner ds DirectoryScanner ds setBasedir File <STRING> ds setIncludes String <STRING> ds addDefaultExcludes ds ensureNonPatternSetsReady File f File <STRING> TokenizedPath p TokenizedPath f getAbsolutePath assertTrue ds contentsExcluded p
public void testJarWithManifestInDirWithSpace String mainjarstring getProject getProperty <STRING> String extjarstring getProject getProperty <STRING> Path myPath Path getProject myPath setLocation File mainjarstring getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath String path loader getClasspath assertEquals mainjarstring File pathSeparator extjarstring path
public void testJarWithManifestInNonAsciiDir String mainjarstring getProject getProperty <STRING> String extjarstring getProject getProperty <STRING> Path myPath Path getProject myPath setLocation File mainjarstring getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath String path loader getClasspath assertEquals mainjarstring File pathSeparator extjarstring path
public void testCleanup BuildException Path path Path p <STRING> loader p createClassLoader path loader findClass <STRING> fail <STRING> ClassNotFoundException e loader cleanup loader findClass <STRING> fail <STRING> ClassNotFoundException e NullPointerException e fail <STRING> p fireBuildFinished null loader findClass <STRING> fail <STRING> ClassNotFoundException e NullPointerException e fail <STRING>
public void testGetPackage Exception executeTarget <STRING> Path myPath Path getProject myPath setLocation File getProject getProperty <STRING> <STRING> getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath assertNotNull <STRING> loader findClass <STRING> assertNotNull <STRING> GetPackageWrapper loader getPackage <STRING>
public void testCodeSource Exception executeTarget <STRING> Path myPath Path getProject myPath setLocation File getProject getProperty <STRING> <STRING> getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath Class foo loader findClass <STRING> String codeSourceLocation foo getProtectionDomain getCodeSource getLocation toString assertTrue codeSourceLocation <STRING> codeSourceLocation endsWith <STRING>
public void testSignedJar Exception executeTarget <STRING> File jar File getProject getProperty <STRING> <STRING> Path myPath Path getProject myPath setLocation jar getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath Class foo loader findClass <STRING> assertNotNull <STRING> foo assertNotNull <STRING> foo getProtectionDomain getCodeSource getCertificates assertNotNull <STRING> foo getSigners
public void testInvalidZipException Exception executeTarget <STRING> File jar File getProject getProperty <STRING> <STRING> Path myPath Path getProject myPath setLocation jar getProject setUserProperty <STRING> <STRING> loader getProject createClassLoader myPath PrintStream sysErr System err StringBuffer errBuffer StringBuffer PrintStream err PrintStream BuildFileTest AntOutputStream errBuffer System setErr err loader getResource <STRING> String log getLog int startMessage log indexOf <STRING> assertTrue startMessage <INT> assertTrue log indexOf <STRING> startMessage <INT> log errBuffer toString startMessage log indexOf <STRING> assertTrue startMessage <INT> assertTrue log indexOf <STRING> startMessage <INT> System setErr sysErr
private void assertResolved String uri String expectedResult String result boolean enabled enabled expectedResult null expectedResult length <INT> assertEquals <STRING> uri <STRING> expectedResult <STRING> result <STRING> expectedResult result
private String assertResolves String path String asuri File path toURI toASCIIString String fullpath System getProperty <STRING> File separator path String result resolveTo asuri fullpath fullpath result substring result lastIndexOf File separatorChar <INT>
public void testFileFromRemoteShare Throwable String resolved Locator fromJarURI SHARED_JAR_URI File f File resolved String path f getAbsolutePath windows assertEquals <INT> path indexOf <STRING>
public void testHttpURI Exception String url <STRING> Locator fromURI url IllegalArgumentException e String message e getMessage assertTrue message message indexOf Locator ERROR_NOT_FILE_URI <INT> assertTrue message message indexOf url <INT>
public void testInternationalURI Exception String result assertResolves <STRING> char umlauted result charAt <INT> assertEquals <STRING> Integer toHexString umlauted <STRING> umlauted <STRING> <INT> umlauted
public void testReplaceRegex IOException hasRegex <STRING> return String contents getFileString <STRING> <STRING> assertStringContains contents <STRING> assertStringContains contents <STRING> assertStringContains contents <STRING> assertStringContains contents <STRING> assertStringContains contents <STRING> assertStringNotContains contents <STRING>
private boolean hasScript String test executeTarget <STRING> Throwable ex System out println test <STRING> false true
private boolean hasRegex String test executeTarget <STRING> expectFileContains <STRING> <STRING> Throwable ex System out println test <STRING> ex false true
private void assertStringContains String string String contains assertTrue <STRING> string <STRING> contains <STRING> string indexOf contains <INT>
private void assertStringNotContains String string String contains assertTrue <STRING> string <STRING> contains <STRING> string indexOf contains <INT>
private String getFileString String filename IOException Reader r null r FileReader FILE_UTILS resolveFile getProject getBaseDir filename FileUtils readFully r FileUtils close r
private void expectFileContains String name String contains IOException String content getFileString name assertTrue <STRING> name <STRING> contains <STRING> content content indexOf contains <INT>
public void testLineContains IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue FILE_UTILS contentEquals expected result
public void testEscapeUnicode IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue FILE_UTILS contentEquals expected result
public void testFilterReaderNoArgs IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
protected void doTest String target String expectedStart String expectedEnd executeTarget target String resultContent read <STRING> target substring <INT> <STRING> assertTrue <STRING> resultContent startsWith expectedStart assertTrue <STRING> resultContent endsWith expectedEnd
protected String read String filename String content null File file FILE_UTILS resolveFile getProject getBaseDir filename java io FileReader rdr java io FileReader file content FileUtils readFully rdr rdr close rdr null Exception e e printStackTrace content
public void testReplaceTokens IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue FILE_UTILS contentEquals expected result
public void testReplaceTokensPropertyFile IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProjectDir <STRING> File result FILE_UTILS resolveFile getProjectDir <STRING> assertTrue FILE_UTILS contentEquals expected result
public void testHead IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testHeadLines IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testHeadSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testHeadLinesSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testFilterReaderHeadLinesSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testTail IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testTailLines IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testTailSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testTailLinesSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testFilterReaderTailLinesSkip IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
public void testHeadTail IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue <STRING> FILE_UTILS contentEquals expected result
private String getFileString String filename IOException Reader r null r FileReader FILE_UTILS resolveFile getProject getBaseDir filename FileUtils readFully r FileUtils close r
private void expectFileContains String name String contains IOException String content getFileString name assertTrue <STRING> name <STRING> contains <STRING> content content indexOf contains <INT>
public void testStripJavaComments IOException executeTarget <STRING> File expected FILE_UTILS resolveFile getProject getBaseDir <STRING> File result FILE_UTILS resolveFile getProject getBaseDir <STRING> assertTrue FILE_UTILS contentEquals expected result
public void testThrowableMessage Exception BuildException be BuildException <STRING> Location <STRING> <INT> <INT> assertEquals <STRING> StringUtils LINE_SEP msg be false be ProjectHelper addLocationToBuildException be Location <STRING> <INT> <INT> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP msg be false be ProjectHelper addLocationToBuildException be Location <STRING> <INT> <INT> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP msg be false Exception x Exception <STRING> public void printStackTrace PrintWriter w w println <STRING> w println <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP msg x false be BuildException x Location <STRING> <INT> <INT> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP msg be false be ProjectHelper addLocationToBuildException be Location <STRING> <INT> <INT> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP msg be false
public void testFindResources Exception String buildTestcases System getProperty <STRING> assertNotNull <STRING> buildTestcases assertTrue <STRING> buildTestcases File buildTestcases isDirectory Path path Path p buildTestcases <STRING> ClassLoader parent ParentLoader ClassLoader acl AntClassLoader parent p path true URL urlFromPath URL FILE_UTILS toURI buildTestcases <STRING> TEST_RESOURCE URL urlFromParent URL <STRING> TEST_RESOURCE assertEquals <STRING> Arrays asList URL urlFromParent urlFromPath enum2List acl getResources TEST_RESOURCE acl AntClassLoader parent p path false assertEquals <STRING> Arrays asList URL urlFromPath urlFromParent enum2List acl getResources TEST_RESOURCE
public void testFindIsolateResources Exception String buildTestcases System getProperty <STRING> assertNotNull <STRING> buildTestcases assertTrue <STRING> buildTestcases File buildTestcases isDirectory Path path Path p buildTestcases <STRING> ClassLoader parent ParentLoader URL urlFromPath URL FILE_UTILS toURI buildTestcases <STRING> TEST_RESOURCE AntClassLoader acl AntClassLoader parent p path false acl setIsolated true assertEquals <STRING> Arrays asList URL urlFromPath enum2List acl getResources TEST_RESOURCE
public void testGetResources IOException AntClassLoader acl AntClassLoader5 EmptyLoader null Path null true assertNull acl getResource <STRING> assertFalse acl getResources <STRING> hasMoreElements acl AntClassLoader5 null null Path null true assertNotNull acl getResource <STRING> assertTrue acl getResources <STRING> hasMoreElements
public void testGetResourcesUsingFactory IOException AntClassLoader acl AntClassLoader newAntClassLoader EmptyLoader null Path null true assertNull acl getResource <STRING> assertFalse acl getResources <STRING> hasMoreElements
public void messageLogged final BuildEvent actual actual getPriority Project MSG_DEBUG return assertTrue <STRING> actual getMessage buffer isEmpty assertEquals <STRING> project actual getProject BuildEvent expected BuildEvent buffer elementAt <INT> buffer removeElementAt <INT> assertEquals <STRING> expected getMessage actual getMessage assertEquals <STRING> expected getPriority actual getPriority
public void addBuildEvent final String message final int priority final BuildEvent be BuildEvent project be setMessage message priority buffer addElement be
public void testPropertyExpansion assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> project setProperty <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING> assertExpandsTo <STRING> <STRING>
public void testFind Exception ProjectHelperRepository repo ProjectHelperRepository getInstance repo registerProjectHelper SomeHelper Resource r FileResource File <STRING> ProjectHelper helper repo getProjectHelperForBuildFile r assertTrue helper ProjectHelper2 helper repo getProjectHelperForAntlib r assertTrue helper ProjectHelper2 r FileResource File <STRING> helper repo getProjectHelperForBuildFile r assertTrue helper SomeHelper helper repo getProjectHelperForAntlib r assertTrue helper SomeHelper r StringResource <STRING> helper repo getProjectHelperForBuildFile r assertTrue helper ProjectHelper2 helper repo getProjectHelperForAntlib r assertTrue helper ProjectHelper2 r StringResource <STRING> helper repo getProjectHelperForBuildFile r assertTrue helper ProjectHelper2 helper repo getProjectHelperForAntlib r assertTrue helper ProjectHelper2
public void setUp p Project p setBasedir projectBasedir ih IntrospectionHelper getHelper getClass
public void testAddText BuildException ih addText p this <STRING> ih addText p this <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih IntrospectionHelper getHelper String ih addText p <STRING> <STRING> fail <STRING> BuildException be
public void testGetAddTextMethod Method m ih getAddTextMethod assertMethod m <STRING> String <STRING> <STRING> ih IntrospectionHelper getHelper String m ih getAddTextMethod BuildException e
public void testSupportsCharacters assertTrue <STRING> ih supportsCharacters ih IntrospectionHelper getHelper String assertTrue <STRING> ih supportsCharacters
public void testElementCreators BuildException ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be assertEquals String ih getElementType <STRING> assertEquals <STRING> ih createElement p this <STRING> ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be ih getElementType <STRING> fail <STRING> BuildException be assertEquals StringBuffer ih getElementType <STRING> assertEquals <STRING> ih createElement p this <STRING> toString ih createElement p this <STRING> fail <STRING> BuildException be assertTrue be getCause NullPointerException ih createElement p this <STRING> fail <STRING> BuildException be assertTrue be getCause NullPointerException
public void testGetNestedElements Map elemMap getExpectedNestedElements Enumeration e ih getNestedElements e hasMoreElements String name String e nextElement Class expect Class elemMap get name assertNotNull <STRING> name <STRING> expect assertEquals <STRING> name expect ih getElementType name elemMap remove name assertTrue <STRING> elemMap isEmpty
public void testGetNestedElementMap Map elemMap getExpectedNestedElements Map actualMap ih getNestedElementMap Iterator i actualMap entrySet iterator i hasNext Map Entry entry Map Entry i next String elemName String entry getKey Class elemClass Class elemMap get elemName assertNotNull <STRING> elemName <STRING> elemClass assertEquals <STRING> elemName elemClass entry getValue elemMap remove elemName assertTrue <STRING> elemMap isEmpty actualMap clear UnsupportedOperationException e
private void assertElemMethod String elemName String methodName Class returnType Class methodArg Method m ih getElementMethod elemName assertEquals <STRING> methodName m getName Class expectedReturnType returnType null Void TYPE returnType assertEquals <STRING> expectedReturnType m getReturnType Class args m getParameterTypes methodArg null assertEquals <STRING> <INT> args length assertEquals <STRING> methodArg args <INT> assertEquals <STRING> <INT> args length
public void testAttributeSetters BuildException ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail projectBasedir <STRING> projectBasedir <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause ClassNotFoundException ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError ih setAttribute p this <STRING> <STRING> ih setAttribute p this <STRING> <STRING> fail <STRING> BuildException be assertTrue be getCause AssertionFailedError
private Map getExpectedAttributes Map attrMap Hashtable attrMap put <STRING> String attrMap put <STRING> Integer TYPE attrMap put <STRING> Integer attrMap put <STRING> File attrMap put <STRING> Boolean TYPE attrMap put <STRING> Boolean attrMap put <STRING> Class attrMap put <STRING> StringBuffer attrMap put <STRING> Character TYPE attrMap put <STRING> Character attrMap put <STRING> Byte TYPE attrMap put <STRING> Short TYPE attrMap put <STRING> Double TYPE attrMap put <STRING> String attrMap
public void testGetAttributes Map attrMap getExpectedAttributes Enumeration e ih getAttributes e hasMoreElements String name String e nextElement Class expect Class attrMap get name assertNotNull <STRING> name <STRING> expect assertEquals <STRING> name expect ih getAttributeType name attrMap remove name attrMap remove <STRING> assertTrue <STRING> attrMap isEmpty
public void testGetAttributeMap Map attrMap getExpectedAttributes Map actualMap ih getAttributeMap Iterator i actualMap entrySet iterator i hasNext Map Entry entry Map Entry i next String attrName String entry getKey Class attrClass Class attrMap get attrName assertNotNull <STRING> attrName <STRING> attrClass assertEquals <STRING> attrName attrClass entry getValue attrMap remove attrName attrMap remove <STRING> assertTrue <STRING> attrMap isEmpty actualMap clear UnsupportedOperationException e
public void testGetAttributeMethod assertAttrMethod <STRING> <STRING> String <STRING> <STRING> assertAttrMethod <STRING> <STRING> Integer TYPE Integer <INT> Integer <INT> assertAttrMethod <STRING> <STRING> Integer Integer <INT> Integer <INT> assertAttrMethod <STRING> <STRING> File File projectBasedir <INT> File <STRING> assertAttrMethod <STRING> <STRING> Boolean TYPE Boolean FALSE Boolean TRUE assertAttrMethod <STRING> <STRING> Boolean Boolean FALSE Boolean TRUE assertAttrMethod <STRING> <STRING> Class Project Map assertAttrMethod <STRING> <STRING> StringBuffer StringBuffer <STRING> StringBuffer <STRING> assertAttrMethod <STRING> <STRING> Character TYPE Character <CHAR> Character <CHAR> assertAttrMethod <STRING> <STRING> Character Character <CHAR> Character <CHAR> assertAttrMethod <STRING> <STRING> Byte TYPE Byte byte <INT> Byte byte <INT> assertAttrMethod <STRING> <STRING> Short TYPE Short short <INT> Short short <INT> assertAttrMethod <STRING> <STRING> Double TYPE Double <INT> Double short <INT> assertAttrMethod <STRING> null null null null fail <STRING> BuildException e
public void setTen File f String path f getAbsolutePath Os isFamily <STRING> Os isFamily <STRING> assertEquals projectBasedir <STRING> path Os isFamily <STRING> assertEquals projectBasedir <STRING> path toLowerCase Locale US assertEquals <STRING> projectBasedir <STRING> path toLowerCase Locale US substring <INT>
public void setNineteen double d double diff d <INT> assertTrue <STRING> d diff <INT> diff <INT>
public void testGetExtensionPoints List extensions ih getExtensionPoints final int adders <INT> assertEquals <STRING> adders extensions size assertExtMethod extensions get adders <INT> <STRING> Hashtable makeTable <STRING> <STRING> makeTable <STRING> <STRING> assertExtMethod extensions get adders <INT> <STRING> Map HashMap makeTable <STRING> <STRING>
private void assertMethod Method m String methodName Class methodArg Object arg Object badArg assertEquals <STRING> methodName m getName assertEquals <STRING> Void TYPE m getReturnType Class args m getParameterTypes assertEquals <STRING> <INT> args length assertEquals <STRING> methodArg args <INT> m invoke this Object arg IllegalAccessException e BuildException e InvocationTargetException e BuildException e m invoke this Object badArg fail <STRING> IllegalAccessException e BuildException e InvocationTargetException e Throwable t e getTargetException assertTrue t junit framework AssertionFailedError
public void testClone CloneNotSupportedException Project expectedProject Project Location expectedLocation Location <STRING> String expectedDescription <STRING> ProjectComponent pc ProjectComponent pc setProject expectedProject pc setLocation expectedLocation pc setDescription expectedDescription ProjectComponent cloned ProjectComponent pc clone assertNotSame pc cloned assertSame cloned getProject expectedProject assertSame cloned getLocation expectedLocation assertSame cloned getDescription expectedDescription
public void testPropertyResolution Exception FileUtils fu FileUtils getFileUtils File props fu createTempFile <STRING> <STRING> null true true File build fu createTempFile <STRING> <STRING> null true true File log fu createTempFile <STRING> <STRING> null true true FileWriter fw null FileReader fr null fw FileWriter props fw write <STRING> fw close fw FileWriter build fw write <STRING> fw close fw null Main m NoExitMain m startAnt String <STRING> props getAbsolutePath <STRING> build getAbsolutePath <STRING> log getAbsolutePath null null String l FileUtils safeReadFully fr FileReader log assertTrue <STRING> l l indexOf <STRING> <INT> FileUtils close fw FileUtils close fr
public void testSubBuild IOException executeTarget <STRING> assertTrue FILE_UTILS contentEquals project resolveFile REC_IN <STRING> project resolveFile REC_DIR <STRING> true assertTrue FILE_UTILS contentEquals project resolveFile REC_IN <STRING> project resolveFile REC_DIR <STRING> true
public void tearDown r1 null r1 close IOException e r2 null r2 close IOException e executeTarget <STRING>
private void testNoRecreate String secondTarget executeTarget <STRING> File jarFile File getProjectDir tempJar long jarModifiedDate jarFile lastModified Thread sleep <INT> InterruptedException e executeTarget secondTarget assertEquals <STRING> secondTarget jarModifiedDate jarFile lastModified
private void testRecreate String firstTarget String secondTarget executeTarget firstTarget long sleeptime <INT> FILE_UTILS getFileTimestampGranularity Thread sleep sleeptime InterruptedException e File jarFile File getProjectDir tempJar long jarModifiedDate jarFile lastModified executeTarget secondTarget jarFile File getProjectDir tempJar assertTrue <STRING> secondTarget jarModifiedDate jarFile lastModified
public void testManifestStaysIntact IOException ManifestException executeTarget <STRING> r1 FileReader getProject resolveFile tempDir <STRING> r2 FileReader getProject resolveFile tempDir <STRING> Manifest mf1 Manifest r1 Manifest mf2 Manifest r2 assertEquals mf1 mf2
public void testUpdateIfOnlyManifestHasChanged executeTarget <STRING> File jarXml getProject resolveFile tempDir <STRING> assertTrue jarXml exists
public void testNoDuplicateIndex IOException ZipFile archive null executeTarget <STRING> archive ZipFile getProject resolveFile tempJar Enumeration e archive entries int numberOfIndexLists <INT> e hasMoreElements ZipEntry ze ZipEntry e nextElement ze getName equals <STRING> numberOfIndexLists assertEquals <INT> numberOfIndexLists archive null archive close
public void testRootFilesInIndex IOException ZipFile archive null executeTarget <STRING> archive ZipFile getProject resolveFile tempJar ZipEntry ze archive getEntry <STRING> InputStream is archive getInputStream ze BufferedReader r BufferedReader InputStreamReader is <STRING> boolean foundSub false boolean foundSubFoo false boolean foundFoo false String line r readLine line null line equals <STRING> foundFoo true line equals <STRING> foundSub true line equals <STRING> foundSubFoo true line r readLine assertTrue foundSub assertTrue foundSubFoo assertTrue foundFoo archive null archive close
public void testManifestOnlyJar expectLogContaining <STRING> <STRING> File manifestFile getProject resolveFile tempDir <STRING> File separator <STRING> assertTrue manifestFile exists
public void testNoVersionInfoIgnore executeTarget <STRING> assertTrue getFullLog indexOf <STRING> <INT> assertTrue getFullLog indexOf <STRING> <INT> assertTrue getFullLog indexOf <STRING> <INT>
public void testNoVersionInfoWarn executeTarget <STRING> assertTrue getLog indexOf <STRING> <INT> assertTrue getLog indexOf <STRING> <INT> assertTrue getLog indexOf <STRING> <INT>
public void testNoVersionInfoNoStrict executeTarget <STRING> assertFalse getLog indexOf <STRING> <INT> assertFalse getLog indexOf <STRING> <INT> assertFalse getLog indexOf <STRING> <INT>
public void testHasVersionInfo executeTarget <STRING> assertFalse getLog indexOf <STRING> <INT> assertFalse getLog indexOf <STRING> <INT> assertFalse getLog indexOf <STRING> <INT>
public void testThreadCount Project p getProject p setUserProperty <STRING> DIRECT_MESSAGE p setUserProperty <STRING> DELAYED_MESSAGE expectOutputAndError <STRING> <STRING> <STRING> String log getLog int pos <INT> pos <INT> pos countThreads log pos
static int countThreads String s int start int firstPipe s indexOf <CHAR> start int beginSlash s indexOf <CHAR> firstPipe int lastPipe s indexOf <CHAR> beginSlash firstPipe <INT> beginSlash <INT> lastPipe <INT> <INT> int max Integer parseInt s substring firstPipe <INT> beginSlash int current <INT> int pos beginSlash <INT> pos lastPipe s charAt pos <CHAR> current break <CHAR> current break default AssertionFailedError <STRING> s charAt pos <STRING> pos current max AssertionFailedError <STRING> current <STRING> max lastPipe
public void testDemux Project p getProject p addTaskDefinition <STRING> DemuxOutputTask PrintStream out System out PrintStream err System err System setOut PrintStream DemuxOutputStream p false System setErr PrintStream DemuxOutputStream p true p executeTarget <STRING> System setOut out System setErr err
public void test1 String expected <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> project executeTarget <STRING> assertEquals <STRING> expected DirectoryScanner getDefaultExcludes
public void test2 String expected <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> project executeTarget <STRING> assertEquals <STRING> expected DirectoryScanner getDefaultExcludes
public void test3 String expected <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> <STRING> project executeTarget <STRING> assertEquals <STRING> expected DirectoryScanner getDefaultExcludes
private void assertEquals String message String expected String actual assertEquals message <STRING> expected length actual length int counter <INT> counter expected length counter boolean found false int i <INT> found i actual length i found expected counter equals actual i assertTrue message <STRING> expected counter <STRING> found
public void testUnnamedNesting configureProject <STRING> Project MSG_WARN String log getLog assertTrue <STRING> log log length <INT>
public void testSerial configureProject <STRING> assertLogContaining <STRING> String fullLog getFullLog String substring <STRING> assertTrue <STRING> substring <STRING> fullLog <STRING> fullLog indexOf substring <INT>
public void testImportInTargetNoEffect configureProject <STRING> expectPropertyUnset <STRING> <STRING> assertTrue null getProject getReference <STRING>
public void testImportSameTargets configureProject <STRING> BuildException ex String message ex getMessage message indexOf <STRING> <INT> assertTrue <STRING> message <STRING> false return assertTrue <STRING> false
public void testImportError configureProject <STRING> BuildException ex Location lo ex getLocation assertTrue <STRING> lo null assertTrue <STRING> lo getFileName indexOf <STRING> <INT> assertTrue <STRING> ex getMessage indexOf <STRING> <INT> return assertTrue <STRING> false
public void testSymlinkedImports Exception String ln <STRING> File ln exists ln <STRING> File ln exists return String symlink <STRING> File symlinkFile File System getProperty <STRING> symlink Runtime getRuntime exec String ln <STRING> <STRING> symlinkFile getAbsolutePath waitFor <INT> IOException <STRING> ln <STRING> symlink <STRING> configureProject <STRING> assertPropertyEquals <STRING> File System getProperty <STRING> <STRING> getAbsolutePath assertPropertyEquals <STRING> File System getProperty <STRING> <STRING> getAbsolutePath symlinkFile delete
private String getFilteredFile String testNumber String filteredFile String line null File f File getProjectDir filteredFile f exists fail <STRING> testNumber <STRING> BufferedReader in null in BufferedReader FileReader f FileNotFoundException fnfe fail <STRING> testNumber <STRING> f toString <STRING> line in readLine in close IOException ioe fail <STRING> testNumber <STRING> ioe f delete line
private void expectNameAddress3 EmailAddress e assertTrue <STRING> e getName <STRING> e getName null assertEquals <STRING> e getAddress
public void testPrintStreamDoesNotGetClosed Message ms Message Project p Project ms setProject p ms addText <STRING> FileOutputStream fis null fis FileOutputStream f ms print PrintStream fis fis write <INT> IOException ioe fail <STRING> FileUtils close fis
public void test5 executeTarget <STRING> java io File f java io File getProjectDir <STRING> f exists f isDirectory fail <STRING>
public ScpTest String testname testname System getProperty <STRING> null tempDir File System getProperty <STRING>
public void testSingleFileUploadAndDownload IOException assertNotNull <STRING> tempDir File uploadFile createTemporaryFile Scp scpTask createTask scpTask setFile uploadFile getPath scpTask setTodir sshHostUri scpTask execute File testFile File tempDir getPath File separator <STRING> addCleanup testFile assertTrue <STRING> testFile exists scpTask createTask scpTask setFile sshHostUri <STRING> uploadFile getName scpTask setTodir testFile getPath scpTask execute assertTrue <STRING> testFile exists compareFiles uploadFile testFile
public void testMultiUploadAndDownload IOException assertNotNull <STRING> tempDir List uploadList ArrayList int i <INT> i <INT> i uploadList add createTemporaryFile Scp scp createTask FilenameSelector selector FilenameSelector selector setName <STRING> FileSet fileset FileSet fileset setDir tempDir fileset addFilename selector scp addFileset fileset scp setTodir sshHostUri scp execute File multi File tempDir <STRING> multi mkdir addCleanup multi Scp scp2 createTask scp2 setFile sshHostUri <STRING> scp2 setTodir multi getPath scp2 execute FilesMatch match FilesMatch Iterator i uploadList iterator i hasNext File f File i next match setFile1 f File f2 File multi f getName match setFile2 f2 assertTrue <STRING> f getPath <STRING> f2 getPath <STRING> match eval
private void compareFiles File src File dest FilesMatch match FilesMatch match setFile1 src match setFile2 dest assertTrue <STRING> match eval
private Scp createTask Scp scp Scp Project p Project p init scp setProject p knownHosts null scp setKnownhosts knownHosts scp setTrust true scp setPort port scp
public FTPTest String name name
public void setUp configureProject <STRING> getProject executeTarget <STRING> tmpDir getProject getProperty <STRING> ftp FTPClient ftpFileSep getProject getProperty <STRING> myFTPTask setSeparator ftpFileSep myFTPTask setProject getProject remoteTmpDir myFTPTask resolveFile tmpDir String remoteHost getProject getProperty <STRING> int port Integer parseInt getProject getProperty <STRING> String remoteUser getProject getProperty <STRING> String password getProject getProperty <STRING> ftp connect remoteHost port Exception ex connectionSucceeded false loginSuceeded false System out println <STRING> remoteHost <STRING> port connectionSucceeded ftp login remoteUser password IOException ioe loginSuceeded false System out println <STRING> remoteHost <STRING> remoteUser
private boolean changeRemoteDir String remoteDir boolean result true ftp cwd remoteDir Exception ex System out println <STRING> remoteTmpDir result false result
public void test1 loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String <STRING>
public void test2 loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void test3 loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testFullPathMatchesCaseSensitive loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String
public void testFullPathMatchesCaseInsensitive loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setCaseSensitive false ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String <STRING> String
public void test2ButCaseInsensitive loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void test2bisButCaseInsensitive loginSuceeded changeRemoteDir remoteTmpDir FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> String <STRING>
public void testGetWithSelector expectLogContaining <STRING> <STRING> FileSet fsDestination FileSet getProject getReference <STRING> DirectoryScanner dsDestination fsDestination getDirectoryScanner getProject dsDestination scan String sortedDestinationDirectories dsDestination getIncludedDirectories String sortedDestinationFiles dsDestination getIncludedFiles int counter <INT> counter sortedDestinationDirectories length counter sortedDestinationDirectories counter sortedDestinationDirectories counter replace File separatorChar <CHAR> int counter <INT> counter sortedDestinationFiles length counter sortedDestinationFiles counter sortedDestinationFiles counter replace File separatorChar <CHAR> FileSet fsSource FileSet getProject getReference <STRING> DirectoryScanner dsSource fsSource getDirectoryScanner getProject dsSource scan compareFiles dsSource sortedDestinationFiles sortedDestinationDirectories
public void testGetFollowSymlinksTrue supportsSymlinks return loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FileSet fsDestination FileSet getProject getReference <STRING> DirectoryScanner dsDestination fsDestination getDirectoryScanner getProject dsDestination scan compareFiles dsDestination String <STRING> String <STRING> <STRING> <STRING>
public void testGetFollowSymlinksFalse supportsSymlinks return loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FileSet fsDestination FileSet getProject getReference <STRING> DirectoryScanner dsDestination fsDestination getDirectoryScanner getProject dsDestination scan compareFiles dsDestination String String
public void testAllowSymlinks supportsSymlinks return loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setFollowSymlinks true ds scan compareFiles ds String <STRING> String <STRING>
public void testProhibitSymlinks supportsSymlinks return loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setFollowSymlinks false ds scan compareFiles ds String String
public void testFileSymlink supportsSymlinks return loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setFollowSymlinks true ds scan compareFiles ds String <STRING> String <STRING>
public void testOrderOfIncludePatternsIrrelevant loginSuceeded return changeRemoteDir remoteTmpDir return String expectedFiles <STRING> <STRING> String expectedDirectories <STRING> <STRING> FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds expectedFiles expectedDirectories ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds expectedFiles expectedDirectories
public void testPatternsDifferInCaseScanningSensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testPatternsDifferInCaseScanningInsensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testFullpathDiffersInCaseScanningSensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> String
public void testFullpathDiffersInCaseScanningInsensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> String
public void testParentDiffersInCaseScanningSensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testParentDiffersInCaseScanningInsensitive loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setCaseSensitive false ds scan compareFiles ds String <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testExcludeOneFile loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String <STRING> String
public void testExcludeHasPrecedence loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String String
public void testAlternateIncludeExclude loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setIncludes String <STRING> <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String String <STRING>
public void testAlternateExcludeInclude loginSuceeded return changeRemoteDir remoteTmpDir return FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> <STRING> ds setIncludes String <STRING> ds scan compareFiles ds String String
public void testChildrenOfExcludedDirectory loginSuceeded return changeRemoteDir remoteTmpDir return getProject executeTarget <STRING> FTP FTPDirectoryScanner ds myFTPTask newScanner ftp ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String <STRING> String <STRING> ds myFTPTask newScanner ftp changeRemoteDir remoteTmpDir return ds setBasedir File getProject getBaseDir <STRING> ds setExcludes String <STRING> ds scan compareFiles ds String <STRING> <STRING> <STRING> String <STRING> <STRING> <STRING>
public void testTimezonePut CountLogListener log CountLogListener <STRING> getProject executeTarget <STRING> getProject addBuildListener log getProject executeTarget <STRING> assertEquals <INT> log getCount
public void testTimezoneGet CountLogListener log CountLogListener <STRING> getProject executeTarget <STRING> getProject addBuildListener log getProject executeTarget <STRING> assertEquals <INT> log getCount
public void testConfigurationLang int expectedCounts <INT> <INT> <INT> <INT> <INT> <INT> <INT> performConfigTest <STRING> expectedCounts performConfigTest <STRING> expectedCounts fail <STRING> Exception bx assertTrue bx BuildException
private void performConfigTest String target int expectedCounts String messages String <STRING> <STRING> <STRING> <STRING> getProject getProperty <STRING> <STRING> <STRING> <STRING> LogCounter counter LogCounter int i <INT> i messages length i counter addLogMessageToSearch messages i getProject addBuildListener counter getProject executeTarget target int i <INT> i messages length i assertEquals <STRING> target <STRING> i expectedCounts i counter getMatchCount messages i
private void compareFiles DirectoryScanner ds String expectedFiles String expectedDirectories String includedFiles ds getIncludedFiles String includedDirectories ds getIncludedDirectories assertEquals <STRING> expectedFiles length includedFiles length assertEquals <STRING> expectedDirectories length includedDirectories length int counter <INT> counter includedFiles length counter includedFiles counter includedFiles counter replace File separatorChar <CHAR> Arrays sort includedFiles int counter <INT> counter includedDirectories length counter includedDirectories counter includedDirectories counter replace File separatorChar <CHAR> Arrays sort includedDirectories int counter <INT> counter includedFiles length counter assertEquals expectedFiles counter includedFiles counter int counter <INT> counter includedDirectories length counter assertEquals expectedDirectories counter includedDirectories counter counter
public void testGetWithSelectorRetryableRandom getProject addTaskDefinition <STRING> randomFailureFTP getProject setProperty <STRING> <STRING> getProject executeTarget <STRING> BuildException bx fail <STRING>
private void performCommandTest String target int expectedCounts String messages String <STRING> <STRING> LogCounter counter LogCounter int i <INT> i messages length i counter addLogMessageToSearch messages i getProject addBuildListener counter getProject executeTarget target int i <INT> i messages length i assertEquals <STRING> target <STRING> i expectedCounts i counter getMatchCount messages i
public void testXmlSchemaGood BuildException executeTarget <STRING> BuildException e e getMessage endsWith <STRING> e getMessage endsWith <STRING> System err println <STRING> e
public void testXmlSchemaBad executeTarget <STRING> fail <STRING> expectBuildExceptionContaining <STRING> <STRING> <STRING> BuildException e e getMessage endsWith <STRING> e getMessage endsWith <STRING> System err println <STRING> assertTrue e getMessage indexOf <STRING> <INT>
public void testListChildNodes SAXException IOException DocumentBuilder db JAXPUtils getDocumentBuilder InputStream is this getClass getClassLoader getResourceAsStream <STRING> Document doc db parse is NodeList nl DOMUtil listChildNodes doc getDocumentElement FooNodeFilter true assertEquals <STRING> <INT> nl getLength
public void testStackTraceLineBreaks Exception expectReportWithText <STRING> null FileReader r null r FileReader File System getProperty <STRING> <STRING> String report FileUtils readFully r assertTrue <STRING> report indexOf <STRING> <INT> FileUtils close r
public void testSpecialSignsInSrcPath Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testSpecialSignsInHtmlPath Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testWithStyleFromDir Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testNoFrames Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testWithStyleFromDirAndXslImport Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testWithStyleFromClasspath Exception executeTarget <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void testWithParams Exception expectLogContaining <STRING> <STRING> File reportFile File System getProperty <STRING> <STRING> assertTrue <STRING> reportFile exists assertTrue <STRING> reportFile canRead assertTrue <STRING> reportFile length <INT> URL reportUrl URL FileUtils getFileUtils toURI reportFile getAbsolutePath InputStream reportStream reportUrl openStream assertTrue <STRING> reportStream available <INT>
public void endTestSuite JUnitTest suite BuildException out null out write grafitto out flush IOException ioex BuildException <STRING> ioex out System out out System err out close IOException e
public void testInvalidMethod TestRunner runner createRunnerForTestMethod InvalidMethodTestCase <STRING> runner run String error runner getFormatter getError assertTrue error runner getRetCode JUnitTestRunner SUCCESS
public void testInvalidSuite TestRunner runner createRunner InvalidSuiteTestCase runner run String error runner getFormatter getError assertEquals error JUnitTestRunner ERRORS runner getRetCode assertTrue error error indexOf <STRING> <INT>
public void testNoTestCase TestRunner runner createRunner NoTestCase runner run int ret runner getRetCode ret JUnitTestRunner FAILURES ret JUnitTestRunner ERRORS fail <STRING> ret <STRING>
public void testInvalidTestCase TestRunner runner createRunner InvalidTestCase runner run int ret runner getRetCode ret JUnitTestRunner FAILURES ret JUnitTestRunner ERRORS fail <STRING> ret <STRING>
protected TestRunner createRunnerForTestMethod Class clazz String method TestRunner JUnitTest clazz getName String method true true true
public void testFailureRecorder JavaEnvUtils isAtLeastJavaVersion JavaEnvUtils JAVA_1_5 Class forName <STRING> System err println <STRING> <STRING> return ClassNotFoundException e File testDir File getProjectDir <STRING> File collectorFile File getProjectDir <STRING> assertFalse <STRING> testDir getAbsolutePath <STRING> testDir exists assertFalse <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists executeTarget <STRING> assertTrue <STRING> testDir getAbsolutePath <STRING> testDir exists assertTrue <STRING> File testDir <STRING> exists assertFalse <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists executeTarget <STRING> assertTrue <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> executeTarget <STRING> assertTrue <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists assertOutputNotContaining <STRING> <STRING> assertOutputNotContaining <STRING> <STRING> assertOutputNotContaining <STRING> <STRING> assertOutputNotContaining <STRING> <STRING> assertOutputNotContaining <STRING> <STRING> assertOutputNotContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> executeTarget <STRING> executeTarget <STRING> assertTrue <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> executeTarget <STRING> assertTrue <STRING> collectorFile getAbsolutePath <STRING> collectorFile exists assertOutputContaining <STRING> <STRING> assertOutputContaining <STRING> <STRING> BuildException be be printStackTrace System err println <STRING> getLog System err println <STRING> getOutput System err println <STRING> getError fail <STRING> be getMessage
private void assertResultFileExists String classNameFragment String ext assertTrue <STRING> classNameFragment <STRING> ext <STRING> getProject resolveFile <STRING> <STRING> classNameFragment <STRING> ext exists
private void assertNoPrint String result String where assertTrue where <STRING> result <STRING> result indexOf <STRING> <INT>
private void assertOutput IOException FileReader inner FileReader getProject resolveFile <STRING> BufferedReader reader BufferedReader inner String line reader readLine assertEquals <STRING> line line reader readLine assertNotNull line assertTrue line startsWith <STRING> line reader readLine assertEquals <STRING> line assertPrint reader readLine <STRING> <STRING> assertPrint reader readLine <STRING> <STRING> assertPrint reader readLine <STRING> <STRING> line reader readLine assertEquals <STRING> line line reader readLine assertEquals <STRING> line assertPrint reader readLine <STRING> <STRING> assertPrint reader readLine <STRING> <STRING> assertPrint reader readLine <STRING> <STRING> line reader readLine assertEquals <STRING> line line reader readLine assertEquals <STRING> line line reader readLine assertNotNull line assertTrue line startsWith <STRING> inner close
private void assertPrint String line String from String to String search from <STRING> to assertEquals search line
public void testBuildfile IOException configureProject DIR <STRING> getProject getProperty <STRING> null executeTarget <STRING> File f getProject resolveFile REPORT FileReader reader null reader FileReader f String content FileUtils readFully reader assertTrue content indexOf <STRING> <STRING> <INT> reader null reader close f delete
public void testParseTestMethodNamesList JUnitTest parseTestMethodNamesList null fail <STRING> IllegalArgumentException ex assertEquals String <INT> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <INT> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <INT> JUnitTest parseTestMethodNamesList <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> JUnitTest parseTestMethodNamesList <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> checkParseCausesIAE <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING> assertEquals String <STRING> <STRING> JUnitTest parseTestMethodNamesList <STRING>
private static void checkParseCausesIAE String param JUnitTest parseTestMethodNamesList param fail <STRING> param <CHAR> IllegalArgumentException ex
private static void assertEquals String message String expected String actual expected null actual null return expected length actual length ComparisonFailure message expected toString actual toString int i <INT> i expected length i assertEquals expected i actual i
public void testGetFileFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> SRC_FILE <STRING> <STRING> <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> SOS_PASSWORD <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> <STRING> project getBaseDir getAbsolutePath File separator LOCAL_PATH SOSGet sosGet SOSGet sosGet setProject project sosGet setVssServerPath VSS_SERVER_PATH sosGet setSosServerPath SOS_SERVER_PATH sosGet setProjectPath VSS_PROJECT_PATH sosGet setFile SRC_FILE sosGet setUsername SOS_USERNAME sosGet setPassword SOS_PASSWORD sosGet setVersion VERSION sosGet setLocalPath Path project LOCAL_PATH sosGet setNoCache true sosGet setNoCompress true sosGet setVerbose true sosGet setRecursive true commandline sosGet buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testGetProjectFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> <STRING> SRC_LABEL <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> <STRING> <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> SOS_HOME <STRING> project getBaseDir getAbsolutePath SOSGet sosGet SOSGet sosGet setProject project sosGet setVssServerPath VSS_SERVER_PATH sosGet setSosServerPath SOS_SERVER_PATH sosGet setProjectPath DS_VSS_PROJECT_PATH sosGet setLabel SRC_LABEL sosGet setUsername SOS_USERNAME sosGet setSosHome SOS_HOME sosGet setNoCache true sosGet setNoCompress false sosGet setVerbose false sosGet setRecursive true commandline sosGet buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckinFileFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> SRC_FILE <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> SOS_PASSWORD <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> <STRING> project getBaseDir getAbsolutePath File separator LOCAL_PATH <STRING> SRC_COMMENT SOSCheckin sosCheckin SOSCheckin sosCheckin setProject project sosCheckin setVssServerPath VSS_SERVER_PATH sosCheckin setSosServerPath SOS_SERVER_PATH sosCheckin setProjectPath VSS_PROJECT_PATH sosCheckin setFile SRC_FILE sosCheckin setComment SRC_COMMENT sosCheckin setUsername SOS_USERNAME sosCheckin setPassword SOS_PASSWORD sosCheckin setLocalPath Path project LOCAL_PATH sosCheckin setNoCache true sosCheckin setNoCompress true sosCheckin setVerbose true sosCheckin setRecursive true commandline sosCheckin buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckinProjectFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> <STRING> <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> SOS_HOME <STRING> project getBaseDir getAbsolutePath <STRING> SRC_COMMENT SOSCheckin sosCheckin SOSCheckin sosCheckin setProject project sosCheckin setVssServerPath VSS_SERVER_PATH sosCheckin setSosServerPath SOS_SERVER_PATH sosCheckin setProjectPath DS_VSS_PROJECT_PATH sosCheckin setComment SRC_COMMENT sosCheckin setUsername SOS_USERNAME sosCheckin setSosHome SOS_HOME sosCheckin setNoCache true sosCheckin setNoCompress false sosCheckin setVerbose false sosCheckin setRecursive true commandline sosCheckin buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckoutFileFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> SRC_FILE <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> SOS_PASSWORD <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> <STRING> project getBaseDir getAbsolutePath File separator LOCAL_PATH SOSCheckout sosCheckout SOSCheckout sosCheckout setProject project sosCheckout setVssServerPath VSS_SERVER_PATH sosCheckout setSosServerPath SOS_SERVER_PATH sosCheckout setProjectPath DS_VSS_PROJECT_PATH sosCheckout setFile SRC_FILE sosCheckout setUsername SOS_USERNAME sosCheckout setPassword SOS_PASSWORD sosCheckout setLocalPath Path project LOCAL_PATH sosCheckout setNoCache true sosCheckout setNoCompress true sosCheckout setVerbose true sosCheckout setRecursive true commandline sosCheckout buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckoutProjectFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> <STRING> <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> <STRING> <STRING> SOS_HOME <STRING> project getBaseDir getAbsolutePath SOSCheckout sosCheckout SOSCheckout sosCheckout setProject project sosCheckout setVssServerPath VSS_SERVER_PATH sosCheckout setSosServerPath SOS_SERVER_PATH sosCheckout setProjectPath VSS_PROJECT_PATH sosCheckout setUsername SOS_USERNAME sosCheckout setSosHome SOS_HOME sosCheckout setNoCache true sosCheckout setNoCompress false sosCheckout setVerbose false sosCheckout setRecursive true commandline sosCheckout buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testLabelFlags String sTestCmdLine <STRING> <STRING> <STRING> <STRING> SOS_SERVER_PATH <STRING> SOS_USERNAME <STRING> <STRING> <STRING> VSS_SERVER_PATH <STRING> DS_VSS_PROJECT_PATH <STRING> SRC_LABEL <STRING> <STRING> SRC_COMMENT SOSLabel sosLabel SOSLabel sosLabel setVssServerPath VSS_SERVER_PATH sosLabel setSosServerPath SOS_SERVER_PATH sosLabel setProjectPath DS_VSS_PROJECT_PATH sosLabel setUsername SOS_USERNAME sosLabel setSosHome SOS_HOME sosLabel setComment SRC_COMMENT sosLabel setLabel SRC_LABEL sosLabel setNoCache true sosLabel setNoCompress false sosLabel setVerbose true commandline sosLabel buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
private void checkCommandLines String sTestCmdLine String sGeneratedCmdLine int length sTestCmdLine length int i <INT> i length i assertEquals <STRING> String valueOf i sTestCmdLine i sGeneratedCmdLine i ArrayIndexOutOfBoundsException aioob fail <STRING> sTestCmdLine i sGeneratedCmdLine length sTestCmdLine length fail <STRING>
public void testXalan2Redirect Exception Class clazz null clazz getClass getClassLoader loadClass <STRING> Exception exc clazz null System out println <STRING> return File xsl getFile <STRING> liaison setStylesheet xsl File out File <STRING> File in getFile <STRING> liaison addParam <STRING> <STRING> liaison transform in out out delete
public void testMultipleTransform Exception File xsl getFile <STRING> liaison setStylesheet xsl liaison addParam <STRING> <STRING> File in getFile <STRING> int i <INT> i <INT> i File out File <STRING> i <STRING> liaison transform in out Exception e BuildException <STRING> i e out delete
public void testSystemId File file null File separatorChar <CHAR> file File <STRING> file File <STRING> String systemid JAXPUtils getSystemId file assertTrue <STRING> systemid startsWith <STRING> assertTrue <STRING> systemid startsWith <STRING>
public void testGetCommandLine String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_GET DS_VSS_PROJECT_PATH MSVSS FLAG_OVERRIDE_WORKING_DIR project getBaseDir getAbsolutePath File separator LOCAL_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_RECURSION MSVSS FLAG_VERSION VERSION MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD FLAG_FILETIME_UPDATED FLAG_SKIP_WRITABLE MSVSSGET vssGet MSVSSGET vssGet setProject project vssGet setRecursive true vssGet setLocalpath Path project LOCAL_PATH vssGet setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssGet setVersion VERSION vssGet setQuiet false vssGet setDate DATE vssGet setLabel SRC_LABEL vssGet setVsspath VSS_PROJECT_PATH MSVSS CurrentModUpdated cmu MSVSS CurrentModUpdated cmu setValue TIME_UPDATED vssGet setFileTimeStamp cmu MSVSS WritableFiles wf MSVSS WritableFiles wf setValue WRITABLE_SKIP vssGet setWritableFiles wf commandline vssGet buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testLabelCommandLine1 String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_LABEL DS_VSS_PROJECT_PATH MSVSS FLAG_COMMENT SRC_COMMENT MSVSS FLAG_AUTORESPONSE_YES MSVSS FLAG_LABEL SRC_LABEL MSVSS FLAG_VERSION VERSION MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD MSVSSLABEL vssLabel MSVSSLABEL vssLabel setProject project vssLabel setComment SRC_COMMENT vssLabel setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssLabel setVersion VERSION vssLabel setAutoresponse <STRING> vssLabel setLabel SRC_LABEL vssLabel setVsspath VSS_PROJECT_PATH commandline vssLabel buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testLabelCommandLine2 String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_LABEL DS_VSS_PROJECT_PATH MSVSS FLAG_COMMENT SRC_COMMENT MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_LABEL LONG_LABEL MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD MSVSSLABEL vssLabel MSVSSLABEL vssLabel setProject project vssLabel setComment SRC_COMMENT vssLabel setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssLabel setLabel LONG_LABEL <STRING> vssLabel setVsspath VSS_PROJECT_PATH commandline vssLabel buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testHistoryCommandLine1 String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_HISTORY DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_VERSION_LABEL LONG_LABEL MSVSS VALUE_FROMLABEL SRC_LABEL MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD MSVSS FLAG_OUTPUT project getBaseDir getAbsolutePath File separator OUTPUT MSVSSHISTORY vssHistory MSVSSHISTORY vssHistory setProject project vssHistory setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssHistory setFromLabel SRC_LABEL vssHistory setToLabel LONG_LABEL <STRING> vssHistory setVsspath VSS_PROJECT_PATH vssHistory setRecursive false vssHistory setOutput File project getBaseDir getAbsolutePath OUTPUT commandline vssHistory buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testHistoryCommandLine2 String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_HISTORY DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_VERSION_DATE DATE MSVSS VALUE_FROMDATE DATE2 MSVSS FLAG_RECURSION MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD MSVSSHISTORY vssHistory MSVSSHISTORY vssHistory setProject project vssHistory setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssHistory setFromDate DATE2 vssHistory setToDate DATE vssHistory setVsspath VSS_PROJECT_PATH vssHistory setRecursive true commandline vssHistory buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testHistoryCommandLine3 Tstamp tstamp Tstamp Location location Location <STRING> tstamp setLocation location tstamp setProject project Tstamp CustomFormat format tstamp createFormat format setProperty <STRING> format setPattern <STRING> format setTimezone <STRING> Date date Calendar getInstance getTime format execute project date location String today project getProperty <STRING> SimpleDateFormat sdf SimpleDateFormat <STRING> sdf setTimeZone TimeZone getTimeZone <STRING> String expected sdf format date MSVSSHISTORY vssHistory MSVSSHISTORY vssHistory setProject project vssHistory setLogin VSS_USERNAME vssHistory setToDate today vssHistory setVsspath VSS_PROJECT_PATH String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_HISTORY DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_VERSION_DATE expected MSVSS FLAG_LOGIN VSS_USERNAME commandline vssHistory buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckinCommandLine String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_CHECKIN DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_NO MSVSS FLAG_WRITABLE MSVSS FLAG_LOGIN VSS_USERNAME MSVSS FLAG_COMMENT SRC_COMMENT MSVSSCHECKIN vssCheckin MSVSSCHECKIN vssCheckin setProject project vssCheckin setComment SRC_COMMENT vssCheckin setLogin VSS_USERNAME vssCheckin setAutoresponse <STRING> vssCheckin setVsspath VSS_PROJECT_PATH vssCheckin setWritable true commandline vssCheckin buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCheckoutCommandLine String sTestCmdLine SS_DIR File separator MSVSS SS_EXE MSVSS COMMAND_CHECKOUT DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_RECURSION MSVSS FLAG_VERSION_DATE DATE MSVSS FLAG_LOGIN VSS_USERNAME FLAG_FILETIME_MODIFIED FLAG_NO_GET MSVSSCHECKOUT vssCheckout MSVSSCHECKOUT vssCheckout setProject project vssCheckout setLogin VSS_USERNAME vssCheckout setVsspath DS_VSS_PROJECT_PATH vssCheckout setRecursive true vssCheckout setDate DATE vssCheckout setLabel SRC_LABEL vssCheckout setSsdir SS_DIR MSVSS CurrentModUpdated cmu MSVSS CurrentModUpdated cmu setValue TIME_MODIFIED vssCheckout setFileTimeStamp cmu vssCheckout setGetLocalCopy false commandline vssCheckout buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testAddCommandLine String sTestCmdLine SS_DIR File separator MSVSS SS_EXE MSVSS COMMAND_ADD project getBaseDir getAbsolutePath File separator LOCAL_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_RECURSION MSVSS FLAG_LOGIN VSS_USERNAME <STRING> VSS_PASSWORD MSVSS FLAG_COMMENT <STRING> MSVSSADD vssAdd MSVSSADD vssAdd setProject project vssAdd setLogin VSS_USERNAME <STRING> VSS_PASSWORD vssAdd setVsspath DS_VSS_PROJECT_PATH vssAdd setRecursive true vssAdd setSsdir SS_DIR vssAdd setWritable false vssAdd setLocalpath Path project LOCAL_PATH commandline vssAdd buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCpCommandLine String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_CP DS_VSS_PROJECT_PATH MSVSS FLAG_AUTORESPONSE_DEF MSVSS FLAG_LOGIN VSS_USERNAME MSVSSCP vssCp MSVSSCP vssCp setProject project vssCp setLogin VSS_USERNAME vssCp setVsspath DS_VSS_PROJECT_PATH commandline vssCp buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
public void testCreateCommandLine String sTestCmdLine MSVSS SS_EXE MSVSS COMMAND_CREATE DS_VSS_PROJECT_PATH MSVSS FLAG_COMMENT SRC_COMMENT MSVSS FLAG_AUTORESPONSE_NO MSVSS FLAG_QUIET MSVSS FLAG_LOGIN VSS_USERNAME MSVSSCREATE vssCreate MSVSSCREATE vssCreate setProject project vssCreate setComment SRC_COMMENT vssCreate setLogin VSS_USERNAME vssCreate setVsspath DS_VSS_PROJECT_PATH vssCreate setFailOnError true vssCreate setAutoresponse <STRING> vssCreate setQuiet true commandline vssCreate buildCmdLine checkCommandLines sTestCmdLine commandline getCommandline
private void checkCommandLines String sTestCmdLine String sGeneratedCmdLine int testLength sTestCmdLine length int genLength sGeneratedCmdLine length int genIndex <INT> int testIndex <INT> testIndex testLength sGeneratedCmdLine genIndex <STRING> genIndex continue assertEquals <STRING> testIndex sTestCmdLine testIndex sGeneratedCmdLine genIndex testIndex genIndex ArrayIndexOutOfBoundsException aioob fail <STRING> sTestCmdLine testIndex int cnt <INT> int i <INT> i genLength i sGeneratedCmdLine i <STRING> cnt genLength cnt sTestCmdLine length fail <STRING>
public void testShouldThrowExceptionWhenRpmFails Exception Rpm rpm MyRpm rpm setProject org apache tools ant Project rpm setFailOnError true rpm execute fail <STRING> BuildException ex assertTrue ex getMessage indexOf <STRING> <INT>
public void testSimple executeTarget <STRING> Project p getProject FileSet fileset FileSet p getReference <STRING> File baseDir fileset getDir p String log getLog assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> log indexOf <STRING> baseDir getAbsolutePath <INT>
public void testNestedByClassName executeTarget <STRING> Project p getProject FileSet fileset FileSet p getReference <STRING> File baseDir fileset getDir p String log getLog assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> log indexOf <STRING> baseDir getAbsolutePath <INT>
public void testDoubleDef executeTarget <STRING> String log getLog assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> log indexOf <STRING> <INT>
public void testExample1 executeTarget <STRING> int index getLog indexOf <STRING> assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT> index getLog indexOf <STRING> index assertTrue index <INT>
private boolean compareFiles String name1 String name2 File file1 File System getProperty <STRING> name1 File file2 File System getProperty <STRING> name2 file1 exists file2 exists System out println <STRING> name1 <STRING> name2 false file1 length file2 length System out println <STRING> name1 <STRING> file1 length <STRING> name2 <STRING> file2 length <STRING> false byte buffer1 byte BUF_SIZE byte buffer2 byte BUF_SIZE FileInputStream fis1 FileInputStream file1 FileInputStream fis2 FileInputStream file2 int index <INT> int read <INT> read fis1 read buffer1 <INT> fis2 read buffer2 int i <INT> i read i index buffer1 i buffer2 i System out println <STRING> name1 <STRING> name2 <STRING> index false true IOException e System out println <STRING> name1 <STRING> name2 false
public void testSubstitute Perl5Util util Perl5Util String tosubstitute <STRING> String input P4Change backslash <STRING> String output util substitute <STRING> input <STRING> tosubstitute assertEquals <STRING> output
public void testSingle supportsSymlinks executeTarget <STRING> p getProject assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING>
public void testDelete supportsSymlinks executeTarget <STRING> p getProject String linkDeleted p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> linkDeleted null fail linkDeleted
public void testRecord supportsSymlinks executeTarget <STRING> p getProject assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> String dir3rec p getProperty <STRING> dir3rec null fail dir3rec
public void testRecreate supportsSymlinks executeTarget <STRING> p getProject String link1Rem p getProperty <STRING> String link2Rem p getProperty <STRING> String link3Rem p getProperty <STRING> String dirlinkRem p getProperty <STRING> link1Rem null fail link1Rem link2Rem null fail link2Rem link3Rem null fail link3Rem dirlinkRem null fail dirlinkRem assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> assertNotNull <STRING> p getProperty <STRING> String doubleRecreate p getProperty <STRING> doubleRecreate null fail doubleRecreate assertNotNull <STRING> p getProperty <STRING>
public void testSymbolicLinkUtilsMethods Exception supportsSymlinks executeTarget <STRING> SymbolicLinkUtils su SymbolicLinkUtils getSymbolicLinkUtils java io File f getProject resolveFile <STRING> assertTrue f exists assertFalse f isDirectory assertTrue f isFile assertFalse su isSymbolicLink f getAbsolutePath assertFalse su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertTrue f exists assertTrue f isDirectory assertFalse f isFile assertFalse su isSymbolicLink f getAbsolutePath assertFalse su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertFalse f exists assertFalse f isDirectory assertFalse f isFile assertFalse su isSymbolicLink f getAbsolutePath assertFalse su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertFalse f exists assertFalse f isDirectory assertFalse f isFile assertFalse su isSymbolicLink f getAbsolutePath assertFalse su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertTrue f exists assertFalse f isDirectory assertTrue f isFile assertTrue su isSymbolicLink f getAbsolutePath assertTrue su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertTrue f exists assertTrue f isDirectory assertFalse f isFile assertTrue su isSymbolicLink f getAbsolutePath assertTrue su isSymbolicLink f getParentFile f getName assertFalse su isDanglingSymbolicLink f getAbsolutePath assertFalse su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertFalse f exists assertFalse f isDirectory assertFalse f isFile assertTrue su isSymbolicLink f getAbsolutePath false assertTrue su isSymbolicLink f getParentFile f getName false assertTrue su isDanglingSymbolicLink f getAbsolutePath assertTrue su isDanglingSymbolicLink f getParentFile f getName f getProject resolveFile <STRING> assertFalse f exists assertFalse f isDirectory assertFalse f isFile assertTrue su isSymbolicLink f getAbsolutePath false assertTrue su isSymbolicLink f getParentFile f getName false assertTrue su isDanglingSymbolicLink f getAbsolutePath assertTrue su isDanglingSymbolicLink f getParentFile f getName
public void testEchoToGoodFileXml Exception executeTarget <STRING> File f createRelativeFile GOOD_OUTFILE_XML FileReader fr FileReader f BufferedReader br BufferedReader fr String read null read br readLine null read indexOf <STRING> TEST_VALUE <STRING> <INT> return fail <STRING> fr close IOException e
protected Properties loadPropFile String relativeFilename IOException File f createRelativeFile relativeFilename Properties props Properties InputStream in null in BufferedInputStream FileInputStream f props load in in null in close IOException e props
protected void assertGoodFile Exception File f createRelativeFile GOOD_OUTFILE assertTrue <STRING> f getAbsolutePath f exists Properties props loadPropFile GOOD_OUTFILE props list System out assertEquals <STRING> TEST_VALUE props getProperty <STRING>
public void testReplace IOException Properties original Properties FileInputStream propsFile null propsFile FileInputStream File System getProperty <STRING> PROJECT_PATH <STRING> original load propsFile propsFile null propsFile close propsFile null assertEquals <STRING> original get <STRING> executeTarget <STRING> Properties after Properties propsFile FileInputStream File System getProperty <STRING> PROJECT_PATH <STRING> after load propsFile propsFile null propsFile close propsFile null assertNull after get <STRING> assertEquals <STRING> after get <STRING>
public void testDirectoryDateDoesNotChange executeTarget <STRING> File myFile File System getProperty <STRING> PROJECT_PATH <STRING> getProject getProperty <STRING> long timeStampBefore myFile lastModified executeTarget <STRING> long timeStampAfter myFile lastModified assertEquals <STRING> timeStampBefore timeStampAfter
public void testDontAddNewline1 IOException executeTarget <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> PROJECT_PATH <STRING> File System getProperty <STRING> PROJECT_PATH <STRING>
public void testDontAddNewline2 IOException executeTarget <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> PROJECT_PATH <STRING> File System getProperty <STRING> PROJECT_PATH <STRING>
public void testNoPreserveLastModified Exception executeTarget <STRING> String tmpdir project getProperty <STRING> long ts1 File tmpdir <STRING> lastModified Thread sleep <INT> executeTarget <STRING> assertTrue ts1 File tmpdir <STRING> lastModified
public void testPreserveLastModified Exception executeTarget <STRING> String tmpdir project getProperty <STRING> long ts1 File tmpdir <STRING> lastModified Thread sleep <INT> executeTarget <STRING> assertTrue ts1 File tmpdir <STRING> lastModified
public void test10 executeTarget <STRING> File outputDirectory File System getProperty <STRING> TASKDEFS_DIR <STRING> String calcFiles outputDirectory list HTMLFilter assertTrue calcFiles length <INT>
public void testNoRecompile executeTarget <STRING> assertEquals <INT> getFullLog indexOf <STRING> executeTarget <STRING> assertTrue <INT> getFullLog indexOf <STRING>
public void setUp configureProject TASKDEFS_DIR <STRING> baseDir File System getProperty <STRING> TASKDEFS_DIR outDir File baseDir <STRING>
protected void assertJavaFileCreated String filename Exception File file getOutputFile filename assertTrue <STRING> filename <STRING> file exists assertTrue <STRING> filename <STRING> file length <INT>
public void testJasper41 JspMangler mangler Jasper41Mangler assertMapped mangler <STRING> <STRING> assertMapped mangler <STRING> <STRING> assertMapped mangler <STRING> <STRING> assertMapped mangler <STRING> <STRING> char s File separatorChar assertMapped mangler <STRING> s s <STRING> s <STRING> s <STRING> <STRING>
protected void assertMapped JspMangler mangler String filename String classname String mappedname mangler mapJspToJavaName File filename assertTrue filename <STRING> classname <STRING> mappedname classname equals mappedname
public void testSimpleScale expectLogContaining <STRING> <STRING> File f createRelativeFile <STRING> LARGEIMAGE assertTrue <STRING> f getAbsolutePath f exists
public void testOverwriteTrue expectLogContaining <STRING> <STRING> File f createRelativeFile <STRING> LARGEIMAGE long lastModified f lastModified Thread sleep FILE_UTILS getFileTimestampGranularity InterruptedException e expectLogContaining <STRING> <STRING> f createRelativeFile <STRING> LARGEIMAGE long overwrittenLastModified f lastModified assertTrue <STRING> lastModified overwrittenLastModified
public void testOverwriteFalse expectLogContaining <STRING> <STRING> File f createRelativeFile <STRING> LARGEIMAGE long lastModified f lastModified expectLogContaining <STRING> <STRING> f createRelativeFile <STRING> LARGEIMAGE long overwrittenLastModified f lastModified assertTrue <STRING> lastModified overwrittenLastModified
public void testSimpleScaleWithMapper expectLogContaining <STRING> <STRING> File f createRelativeFile <STRING> LARGEIMAGE assertTrue <STRING> f getAbsolutePath f exists
public void off_testFailOnError expectLogContaining <STRING> <STRING> RuntimeException re assertTrue <STRING> <STRING> re toString re toString indexOf <STRING> <INT>
public void testNonExistingFile PropertyFile props PropertyFile props setProject getProject File file File <STRING> props setFile file assertFalse <STRING> file exists props execute assertTrue <STRING> file exists file delete
public void testUpdatesExistingProperties Exception Properties beforeUpdate getTestProperties assertEquals FNAME beforeUpdate getProperty FNAME_KEY assertEquals LNAME beforeUpdate getProperty LNAME_KEY assertEquals EMAIL beforeUpdate getProperty EMAIL_KEY assertEquals null beforeUpdate getProperty PHONE_KEY assertEquals null beforeUpdate getProperty AGE_KEY assertEquals null beforeUpdate getProperty DATE_KEY executeTarget <STRING> Properties afterUpdate getTestProperties assertEquals NEW_FNAME afterUpdate getProperty FNAME_KEY assertEquals NEW_LNAME afterUpdate getProperty LNAME_KEY assertEquals NEW_EMAIL afterUpdate getProperty EMAIL_KEY assertEquals NEW_PHONE afterUpdate getProperty PHONE_KEY assertEquals NEW_AGE afterUpdate getProperty AGE_KEY assertEquals NEW_DATE afterUpdate getProperty DATE_KEY
public void testDeleteProperties Exception Properties beforeUpdate getTestProperties assertEquals <STRING> FNAME_KEY <STRING> FNAME beforeUpdate getProperty FNAME_KEY assertEquals <STRING> LNAME_KEY <STRING> LNAME beforeUpdate getProperty LNAME_KEY executeTarget <STRING> Properties afterUpdate getTestProperties assertEquals <STRING> LNAME_KEY <STRING> LNAME afterUpdate getProperty LNAME_KEY assertNull <STRING> FNAME_KEY <STRING> afterUpdate getProperty FNAME_KEY
public void testExerciseDefaultAndIncrement Exception executeTarget <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING>
private Properties getTestProperties Exception Properties testProps Properties FileInputStream propsFile FileInputStream File System getProperty <STRING> testPropsFilePath testProps load propsFile propsFile close testProps
private void initTestPropFile Exception Properties testProps Properties testProps put FNAME_KEY FNAME testProps put LNAME_KEY LNAME testProps put EMAIL_KEY EMAIL testProps put <STRING> <STRING> FileOutputStream fos FileOutputStream File System getProperty <STRING> testPropsFilePath testProps store fos <STRING> fos close
private void initBuildPropFile Exception Properties buildProps Properties buildProps put testPropertyFileKey testPropertyFile buildProps put FNAME_KEY NEW_FNAME buildProps put LNAME_KEY NEW_LNAME buildProps put EMAIL_KEY NEW_EMAIL buildProps put PHONE_KEY NEW_PHONE buildProps put AGE_KEY NEW_AGE buildProps put DATE_KEY NEW_DATE FileOutputStream fos FileOutputStream File System getProperty <STRING> buildPropsFilePath buildProps store fos null fos close
private void destroyTempFiles File tempFile File System getProperty <STRING> testPropsFilePath tempFile delete tempFile null tempFile File System getProperty <STRING> buildPropsFilePath tempFile delete tempFile null tempFile File System getProperty <STRING> valueDoesNotGetOverwrittenPropsFilePath tempFile delete tempFile null
public void testClosure executeTarget <STRING> Hashtable files getResultFiles assertTrue <STRING> files size <INT> assertTrue <STRING> files containsKey <STRING>
private Hashtable getResultFiles FileSet resultFileSet FileSet project getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner project String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i files
public void testNonPublic executeTarget <STRING> String log getLog assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> <STRING> log indexOf <STRING> <INT>
public static void main String args Project p Project SplashTask t SplashTask t setProject p t execute Thread sleep <INT> InterruptedException e p fireBuildFinished null System err println <STRING> Thread sleep <INT> InterruptedException e System err println <STRING> System exit <INT>
public void testPreservesExtraFields IOException File f File createTempFile <STRING> <STRING> f delete ZipFile zf null Zip testInstance Zip testInstance setDestFile f final ZipResource r ZipResource public String getName <STRING> public boolean isExists true public boolean isDirectory false public long getLastModified <INT> public InputStream getInputStream ByteArrayInputStream byte <INT> public ZipExtraField getExtraFields ZipExtraField JarMarker testInstance add ResourceCollection public boolean isFilesystemOnly false public int size <INT> public Iterator iterator ArrayList l ArrayList l add r l iterator testInstance execute zf ZipFile f ZipEntry ze zf getEntry <STRING> assertNotNull ze assertEquals <INT> ze getExtraFields length assertTrue ze getExtraFields <INT> JarMarker ZipFile closeQuietly zf f exists f delete
public void testGrabFilesAndDirs IOException executeTarget <STRING> String archive getProject resolveFile tempJar getAbsolutePath ArrayList dirs ArrayList ArrayList files ArrayList String expectedDirs String <STRING> <STRING> String expectedFiles String <STRING> Jar grabFilesAndDirs archive dirs files assertEquals expectedDirs length dirs size int i <INT> i expectedDirs length i assertTrue <STRING> expectedDirs i dirs contains expectedDirs i assertEquals expectedFiles length files size int i <INT> i expectedFiles length i assertTrue <STRING> expectedFiles i files contains expectedFiles i
public void testFindJarNameNoClasspath assertEquals <STRING> Jar findJarName <STRING> null assertEquals <STRING> Jar findJarName <STRING> File separatorChar <STRING> null
public void testFindJarNameSimpleMatches assertEquals <STRING> Jar findJarName <STRING> String <STRING> assertEquals <STRING> Jar findJarName <STRING> String <STRING> assertEquals <STRING> Jar findJarName <STRING> File separatorChar <STRING> String <STRING> assertEquals <STRING> Jar findJarName <STRING> File separatorChar <STRING> String <STRING>
public void shutdown done System out println <STRING> run false this done wait InterruptedException ie System out println <STRING>
public void run int i <INT> i <INT> run i System out println Thread currentThread getName Thread sleep <INT> InterruptedException ie this done true notifyAll
public static void main String args TestProcess tp TestProcess Thread tp <STRING> start Runtime getRuntime addShutdownHook tp getShutdownHook
public void test5 executeTarget <STRING> String output getLog boolean hasWarning output indexOf <STRING> <INT> assertTrue <STRING> hasWarning
public void test6 expectBuildExceptionContaining <STRING> <STRING> <STRING> String output getLog boolean hasWarning output indexOf <STRING> <INT> assertTrue <STRING> hasWarning
public void test7 executeTarget <STRING> boolean hasWarning getLog indexOf Manifest ERROR_FROM_FORBIDDEN <INT> assertTrue <STRING> hasWarning
public void testLongLine IOException ManifestException Project p getProject p setUserProperty <STRING> LONG_LINE p setUserProperty <STRING> LONG_68_NAME p setUserProperty <STRING> LONG_70_NAME p setUserProperty <STRING> NOT_LONG_NAME p setUserProperty <STRING> VALUE executeTarget <STRING> Manifest manifest getManifest EXPANDED_MANIFEST Manifest Section mainSection manifest getMainSection String classpath mainSection getAttributeValue <STRING> assertEquals <STRING> LONG_LINE classpath String value mainSection getAttributeValue LONG_68_NAME assertEquals <STRING> VALUE value value mainSection getAttributeValue LONG_70_NAME assertEquals <STRING> VALUE value value mainSection getAttributeValue NOT_LONG_NAME assertEquals <STRING> VALUE value BufferedReader in BufferedReader FileReader EXPANDED_MANIFEST Set set HashSet String read in readLine read null set add read read in readLine assertTrue <STRING> set remove <STRING> assertTrue <STRING> set remove <STRING> assertTrue <STRING> set remove LONG_70_NAME <STRING> assertTrue <STRING> set remove NOT_LONG_NAME <STRING>
public void testOrder1 IOException ManifestException executeTarget <STRING> Manifest manifest getManifest EXPANDED_MANIFEST Enumeration e manifest getSectionNames String section1 String e nextElement String section2 String e nextElement assertEquals <STRING> <STRING> section1 assertEquals <STRING> <STRING> section2 Manifest Section section manifest getSection <STRING> e section getAttributeKeys String attr1Key String e nextElement String attr2Key String e nextElement String attr1 section getAttribute attr1Key getName String attr2 section getAttribute attr2Key getName assertEquals <STRING> <STRING> attr1 assertEquals <STRING> <STRING> attr2
public void testOrder2 IOException ManifestException executeTarget <STRING> Manifest manifest getManifest EXPANDED_MANIFEST Enumeration e manifest getSectionNames String section1 String e nextElement String section2 String e nextElement assertEquals <STRING> <STRING> section1 assertEquals <STRING> <STRING> section2 Manifest Section section manifest getSection <STRING> e section getAttributeKeys String attr1Key String e nextElement String attr2Key String e nextElement String attr1 section getAttribute attr1Key getName String attr2 section getAttribute attr2Key getName assertEquals <STRING> <STRING> attr1 assertEquals <STRING> <STRING> attr2
public void testUpdate IOException ManifestException executeTarget <STRING> Manifest mf getManifest <STRING> assertNotNull mf assertTrue Manifest getDefaultManifest equals mf String mfAsString mf toString assertNotNull mfAsString assertTrue mfAsString startsWith <STRING> assertTrue mfAsString indexOf <STRING> <INT> mf getManifest <STRING> assertNotNull mf mfAsString mf toString assertNotNull mfAsString assertEquals <INT> mfAsString indexOf <STRING> assertTrue mfAsString indexOf <STRING> <INT>
private Manifest getManifest String filename IOException ManifestException FileReader r FileReader File System getProperty <STRING> filename Manifest r r close
protected void assertPropertyContains String property String contains String result getProperty property assertTrue <STRING> contains <STRING> result result null result indexOf contains <INT>
public void testSpawn File logFile FILE_UTILS createTempFile <STRING> <STRING> project getBaseDir false false assertTrue <STRING> logFile exists project setProperty <STRING> logFile getAbsolutePath project setProperty <STRING> Long toString TIME_TO_WAIT project executeTarget <STRING> Thread sleep TIME_TO_WAIT <INT> SECURITY_MARGIN Exception ex System out println <STRING> logFile exists System out println <STRING> <STRING> assertTrue <STRING> logFile exists
public void testReleasedInput Exception PipedOutputStream out PipedOutputStream final PipedInputStream in PipedInputStream out project setInputHandler DefaultInputHandler protected InputStream getInputStream in project setDefaultInputStream in Java java Java java setProject project java setClassname <STRING> java setArgs <STRING> java setFork true java execute Thread inputThread Thread Runnable public void run Input input Input input setProject project input setAddproperty <STRING> input execute inputThread start Thread sleep <INT> out write <STRING> getBytes out flush out write <STRING> getBytes out flush inputThread join <INT> assertEquals <STRING> project getProperty <STRING>
public long getTargetTime File file File System getProperty <STRING> TOUCH_FILE file exists BuildException <STRING> file file lastModified
private void assertTimesNearlyMatch long timestamp long time long range assertTrue <STRING> timestamp <STRING> range <STRING> time Math abs time timestamp range
public void testDriverCaching SQLExec sql createTask getProperties NULL assertTrue SQLExec getLoaderMap containsKey NULL_DRIVER sql execute BuildException e assertTrue e getCause getMessage indexOf <STRING> <INT> assertTrue SQLExec getLoaderMap containsKey NULL_DRIVER assertSame sql getLoader JDBCTask getLoaderMap get NULL_DRIVER ClassLoader loader1 sql getLoader sql createTask getProperties NULL assertTrue JDBCTask getLoaderMap containsKey NULL_DRIVER sql execute BuildException e assertTrue e getCause getMessage indexOf <STRING> <INT> assertTrue JDBCTask getLoaderMap containsKey NULL_DRIVER assertSame sql getLoader JDBCTask getLoaderMap get NULL_DRIVER assertSame loader1 sql getLoader
protected void doMultipleCalls int calls int database boolean caching boolean catchexception Properties props getProperties database int i <INT> i calls i SQLExec sql createTask props sql setCaching caching sql execute BuildException e catchexception e
protected SQLExec createTask Properties props SQLExec sql SQLExec sql setProject Project sql setDriver props getProperty DRIVER sql setUserid props getProperty USER sql setPassword props getProperty PASSWORD sql setUrl props getProperty URL sql createClasspath setLocation File props getProperty PATH sql addText props getProperty SQL sql
protected String findResourcePath String resource resource resource replace <CHAR> <CHAR> <STRING> URL url getClass getClassLoader getResource resource url null null String u url toString u startsWith <STRING> int pling u indexOf <STRING> u substring <STRING> length pling u startsWith <STRING> int tail u indexOf resource u substring <STRING> length tail null
protected Properties getProperties int database Properties props null database ORACLE props getProperties <STRING> <STRING> <STRING> <STRING> break MYSQL props getProperties <STRING> <STRING> <STRING> <STRING> break NULL default props getProperties NULL_DRIVER <STRING> <STRING> <STRING> String path findResourcePath props getProperty DRIVER props put PATH path props put SQL <STRING> props
protected Properties getProperties String driver String user String pwd String url Properties props Properties props put DRIVER driver props put USER user props put PASSWORD pwd props put URL url props
public void testLastDelimiterPositionNormalModeStrict SQLExec s SQLExec assertEquals <INT> s lastDelimiterPosition StringBuffer null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null s setDelimiter <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null
public void testLastDelimiterPositionNormalModeNonStrict SQLExec s SQLExec s setStrictDelimiterMatching false assertEquals <INT> s lastDelimiterPosition StringBuffer null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null s setDelimiter <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> null
public void testLastDelimiterPositionRowModeStrict SQLExec s SQLExec SQLExec DelimiterType t SQLExec DelimiterType t setValue <STRING> s setDelimiterType t assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING> s setDelimiter <STRING> assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING>
public void testLastDelimiterPositionRowModeNonStrict SQLExec s SQLExec SQLExec DelimiterType t SQLExec DelimiterType t setValue <STRING> s setDelimiterType t s setStrictDelimiterMatching false assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition null <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING> s setDelimiter <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING> assertEquals <INT> s lastDelimiterPosition StringBuffer <STRING> <STRING>
public void testRealTest IOException executeTarget <STRING> File originalFile project resolveFile <STRING> File actualFile project resolveFile <STRING> InputStream originalIn BufferedInputStream FileInputStream originalFile assertEquals byte <CHAR> originalIn read assertEquals byte <CHAR> originalIn read InputStream actualIn BufferedInputStream FileInputStream actualFile assertEquals byte <CHAR> actualIn read assertEquals byte <CHAR> actualIn read originalIn CBZip2InputStream originalIn actualIn CBZip2InputStream actualIn true int expected originalIn read int actual actualIn read expected <INT> expected actual fail <STRING> actual <INT> fail <STRING> break originalIn close actualIn close
public void testDateCheck executeTarget <STRING> String log getLog assertTrue <STRING> log <STRING> log endsWith <STRING>
private void testRealTest String target java io IOException executeTarget target assertTrue <STRING> FILE_UTILS contentEquals project resolveFile <STRING> project resolveFile <STRING>
public void testOverride executeTarget <STRING> String log getLog assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> log indexOf <STRING> <INT> assertTrue <STRING> log indexOf <STRING> <INT>
public void test3 executeTarget <STRING> BuildException e assertTrue <STRING> e getMessage indexOf <STRING> <INT> return fail <STRING>
public void test5 String baseDir getProject getProperty <STRING> String uri FILE_UTILS toURI baseDir <STRING> getProject setNewProperty <STRING> uri Exception ex BuildException ex expectLog <STRING> <STRING>
public void testPrefixFailure executeTarget <STRING> BuildException e assertTrue <STRING> e getMessage indexOf <STRING> <INT> return fail <STRING>
public void testCircularReference executeTarget <STRING> BuildException e assertTrue <STRING> e getMessage indexOf <STRING> <INT> return fail <STRING>
public void testXmlProperty Class forName <STRING> executeTarget <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> ClassNotFoundException e
public void tearDown logFile null logFile exists getProject setProperty <STRING> logFile getAbsolutePath executeTarget <STRING>
public void testspawn project executeTarget <STRING> project getProperty <STRING> null return myBuild MonitoredBuild File System getProperty <STRING> BUILD_FILE <STRING> logFile FILE_UTILS createTempFile <STRING> <STRING> project getBaseDir false false assertTrue <STRING> logFile exists myBuild setTimeToWait TIME_TO_WAIT myBuild setLogFile logFile getAbsolutePath myBuild addBuildListener MonitoredBuildListener myBuild start GregorianCalendar startwait GregorianCalendar buildFinished Thread sleep <INT> InterruptedException e System out println <STRING> GregorianCalendar now GregorianCalendar now getTime getTime startwait getTime getTime MAX_BUILD_TIME System out println <STRING> now getTime getTime startwait getTime getTime <STRING> break Thread sleep TIME_TO_WAIT <INT> SECURITY_MARGIN InterruptedException e System out println <STRING> long elapsed myBuild getTimeElapsed assertTrue <STRING> TIME_TO_WAIT <INT> SECURITY_MARGIN elapsed logFile File logFile getAbsolutePath assertTrue <STRING> logFile exists
public void testOldCvsFormat Exception parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> CVSEntry entries parser getEntrySetAsArray assertEquals <STRING> entries <INT> getAuthor Calendar cal Calendar getInstance TimeZone getTimeZone <STRING> Locale US cal set Calendar MILLISECOND <INT> cal set <INT> Calendar JUNE <INT> <INT> <INT> <INT> Date date cal getTime assertEquals date entries <INT> getDate
public void testCvs112Format Exception parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> parser stdout <STRING> CVSEntry entries parser getEntrySetAsArray assertEquals <STRING> entries <INT> getAuthor Calendar cal Calendar getInstance TimeZone getTimeZone <STRING> Locale US cal set Calendar MILLISECOND <INT> cal set <INT> Calendar JUNE <INT> <INT> <INT> <INT> Date date cal getTime assertEquals date entries <INT> getDate
public void testNonUTF8Characters Exception CVSEntry entry CVSEntry Date <STRING> <STRING> entry addFile <STRING> <STRING> entry addFile <STRING> <STRING> CVSEntry entries entry ByteArrayOutputStream output ByteArrayOutputStream PrintWriter pwriter PrintWriter OutputStreamWriter output <STRING> writer printChangeLog pwriter entries XMLReader xmlReader JAXPUtils getXMLReader InputStream input ByteArrayInputStream output toByteArray xmlReader setContentHandler NullContentHandler xmlReader parse InputSource input
private void testProperties String target executeTarget target assertEquals <STRING> getProject getProperty <STRING> assertEquals <STRING> getProject getProperty <STRING> assertEquals <STRING> getProject getProperty <STRING> assertEquals <STRING> getProject getProperty <STRING> assertEquals <STRING> <STRING> getProject getProperty <STRING>
private void doTest String msg boolean keepRoot boolean collapse boolean semantic boolean include boolean localRoot Enumeration iter getFiles File System getProperty <STRING> <STRING> iter hasMoreElements File inputFile File iter nextElement File workingDir localRoot workingDir inputFile getParentFile workingDir FILE_UTILS resolveFile File <STRING> <STRING> File propertyFile getGoldfile inputFile keepRoot collapse semantic include localRoot propertyFile exists continue Project p Project XmlProperty xmlproperty XmlProperty xmlproperty setProject p xmlproperty setFile inputFile xmlproperty setKeeproot keepRoot xmlproperty setCollapseAttributes collapse xmlproperty setSemanticAttributes semantic xmlproperty setIncludeSemanticAttribute include xmlproperty setRootDirectory workingDir p setNewProperty <STRING> <STRING> xmlproperty execute Properties props Properties props load FileInputStream propertyFile ensureProperties msg inputFile workingDir p props ensureReferences msg inputFile p getReferences IOException ex fail ex toString
private static void ensureProperties String msg File inputFile File workingDir Project p Properties properties Hashtable xmlproperties p getProperties Enumeration propertyKeyEnum properties propertyNames propertyKeyEnum hasMoreElements String currentKey propertyKeyEnum nextElement toString String assertMsg msg <STRING> inputFile getName <STRING> currentKey String propertyValue properties getProperty currentKey String xmlValue String xmlproperties get currentKey propertyValue indexOf <STRING> <INT> String id currentKey Object obj p getReferences get id obj null fail assertMsg <STRING> propertyValue propertyValue substring <INT> propertyValue length propertyValue equals <STRING> obj Path fail assertMsg <STRING> obj getClass getName assertEquals assertMsg propertyValue obj toString propertyValue indexOf <STRING> <INT> String fileName propertyValue substring <INT> propertyValue length File f File workingDir fileName propertyValue f getAbsolutePath assertEquals assertMsg propertyValue xmlValue
private static void printProperties Hashtable xmlproperties Enumeration keyEnum xmlproperties keys keyEnum hasMoreElements String currentKey keyEnum nextElement toString System out println currentKey <STRING> xmlproperties get currentKey
private static void ensureReferences String msg File inputFile Hashtable references Enumeration referenceKeyEnum references keys referenceKeyEnum hasMoreElements String currentKey referenceKeyEnum nextElement toString Object currentValue references get currentKey currentValue Path currentValue String currentKey startsWith <STRING> fail msg <STRING> inputFile getName <STRING> currentKey <STRING>
private static File getGoldfile File input boolean keepRoot boolean collapse boolean semantic boolean include boolean localRoot String baseName input getName toLowerCase baseName endsWith <STRING> baseName baseName substring <INT> baseName length <INT> <STRING> File dir input getParentFile getParentFile String goldFileFolder <STRING> keepRoot goldFileFolder <STRING> goldFileFolder <STRING> semantic goldFileFolder <STRING> include goldFileFolder <STRING> collapse goldFileFolder <STRING> goldFileFolder <STRING> File dir goldFileFolder baseName
private static void getFiles final File startingDir Vector collect FileFilter filter FileFilter public boolean accept File file file isDirectory true file getPath indexOf <STRING> <INT> file getPath toLowerCase endsWith <STRING> File files startingDir listFiles filter int i <INT> i files length i File f files i f isDirectory collect addElement f getFiles f collect
public void setUp project Project project init javac Javac javac setProject project
public void testForkedExecutableName assertNull <STRING> javac getJavacExecutable project setProperty <STRING> <STRING> assertNull <STRING> javac getJavacExecutable javac setFork true assertNotNull <STRING> javac getJavacExecutable assertTrue <STRING> javac getJavacExecutable indexOf <STRING> <INT> project setProperty <STRING> <STRING> javac setFork false assertNotNull <STRING> javac getJavacExecutable assertTrue <STRING> javac getJavacExecutable indexOf <STRING> <INT> project setProperty <STRING> <STRING> assertNull <STRING> javac getJavacExecutable String myJavac <STRING> javac setFork true javac setExecutable myJavac assertEquals myJavac javac getJavacExecutable
public void testCompilerArg String args javac getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length Javac ImplementationSpecificArgument arg javac createCompilerArg String ford <STRING> String prefect <STRING> String testArg ford <STRING> prefect arg setValue testArg args javac getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals testArg args <INT> arg setCompiler <STRING> args javac getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length project setProperty <STRING> <STRING> args javac getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length project setProperty <STRING> <STRING> args javac getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals testArg args <INT> arg setLine testArg args javac getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals ford args <INT> assertEquals prefect args <INT>
public void testCompilerArgForForkAndExtJavac Javac ImplementationSpecificArgument arg javac createCompilerArg String ford <STRING> String prefect <STRING> String testArg ford <STRING> prefect arg setValue testArg arg setCompiler <STRING> javac setFork true String args javac getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals testArg args <INT>
public void testCompilerAttribute String compiler javac getCompiler assertNotNull compiler System getProperty <STRING> null assertEquals System getProperty <STRING> compiler assertTrue <STRING> <STRING> equals compiler <STRING> equals compiler <STRING> equals compiler <STRING> equals compiler <STRING> equals compiler <STRING> equals compiler javac setFork true assertNotNull javac getCompiler assertEquals <STRING> javac getCompiler assertEquals compiler javac getCompilerVersion javac Javac javac setProject project project setUserProperty <STRING> <STRING> compiler javac getCompiler assertNotNull compiler assertEquals <STRING> compiler javac setFork true compiler javac getCompiler assertNotNull compiler assertEquals <STRING> compiler javac setFork false javac setCompiler <STRING> compiler javac getCompiler assertNotNull compiler assertEquals <STRING> compiler javac setFork true compiler javac getCompiler assertNotNull compiler assertEquals <STRING> compiler
public void testCompilerAdapter javac setCompiler <STRING> javac setDepend true CompilerAdapter adapter CompilerAdapterFactory getCompiler javac getCompiler javac assertTrue adapter Javac13 javac setFork true adapter CompilerAdapterFactory getCompiler javac getCompiler javac assertTrue adapter JavacExternal
public void testGZip executeTarget <STRING> String log getLog assertTrue <STRING> log <STRING> log startsWith <STRING> assertTrue <STRING> log <STRING> log endsWith <STRING>
public void testDateCheck executeTarget <STRING> String log getLog assertTrue <STRING> log <STRING> log endsWith <STRING>
public void testSimpleCopy executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsPresent d assertTrue getFullLog indexOf <STRING> <INT>
public void testEmptyCopy executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsNotPresent d String c getProject getProperty <STRING> <STRING> assertFileIsNotPresent c assertTrue getFullLog indexOf <STRING> <INT>
public void testEmptyDirCopy executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsNotPresent d String c getProject getProperty <STRING> <STRING> assertFileIsPresent c assertTrue getFullLog indexOf <STRING> <INT>
private void testCopyAndRemove String target executeTarget target String d getProject getProperty <STRING> <STRING> assertFileIsPresent d String f getProject getProperty <STRING> <STRING> assertFileIsNotPresent f assertTrue getFullLog indexOf <STRING> <INT> assertDebuglogContaining <STRING> assertDebuglogContaining <STRING>
public void testCopyAndRemoveEmptyPreserve executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsPresent d String f getProject getProperty <STRING> <STRING> assertFileIsNotPresent f assertTrue getFullLog indexOf <STRING> <INT> assertDebuglogContaining <STRING> assertDebuglogContaining <STRING>
public void testEmptyDirCopyAndRemove executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsNotPresent d String c getProject getProperty <STRING> <STRING> assertFileIsPresent c String f getProject getProperty <STRING> <STRING> assertFileIsNotPresent f assertTrue getFullLog indexOf <STRING> <INT> assertDebuglogContaining <STRING> assertDebuglogContaining <STRING>
public void testCopyNoRemove executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsPresent d String f getProject getProperty <STRING> <STRING> assertFileIsPresent f assertTrue getFullLog indexOf <STRING> <INT>
public void testCopyNoRemoveSelectors executeTarget <STRING> String d getProject getProperty <STRING> <STRING> assertFileIsPresent d String f getProject getProperty <STRING> <STRING> assertFileIsPresent f assertTrue getFullLog indexOf <STRING> <INT>
public void assertFileIsPresent String f assertTrue <STRING> f getProject resolveFile f exists
public void assertFileIsNotPresent String f assertTrue <STRING> f getProject resolveFile f exists
public void testDefaultMapper String target Exception assertTrue FileUtils getFileUtils resolveFile getProject getBaseDir <STRING> exists expectFileContains target <STRING> <STRING>
public void testCustomMapper Exception assertTrue FILE_UTILS resolveFile getProject getBaseDir <STRING> exists expectFileContains <STRING> <STRING> <STRING>
public void testTypedMapper Exception assertTrue FILE_UTILS resolveFile getProject getBaseDir <STRING> exists expectFileContains <STRING> <STRING> <STRING>
private String getFileString String filename IOException Reader r null r FileReader getProject resolveFile filename FileUtils readFully r FileUtils close r
private void assertFileContains String filename String contains IOException String content getFileString filename assertTrue <STRING> filename <STRING> contains <STRING> content content indexOf contains <INT>
public void testPackageAttribute File f getProject resolveFile <STRING> assertTrue <STRING> f exists expectLogContaining <STRING> <STRING> assertTrue <STRING> f exists
public void testTagAttribute File f getProject resolveFile <STRING> assertTrue <STRING> f exists expectLogContaining <STRING> <STRING> assertTrue <STRING> f exists
public void testNoPreserveLastModified Exception executeTarget <STRING> String tmpdir project getProperty <STRING> long ts1 File tmpdir <STRING> lastModified Thread sleep <INT> executeTarget <STRING> assertTrue ts1 File tmpdir <STRING> lastModified
public void testPreserveLastModified Exception executeTarget <STRING> String tmpdir project getProperty <STRING> long ts1 File tmpdir <STRING> lastModified Thread sleep <INT> executeTarget <STRING> assertTrue ts1 File tmpdir <STRING> lastModified
public void assertEqualContent File expect File result AssertionFailedError IOException result exists fail <STRING> result <STRING> InputStream inExpect null InputStream inResult null inExpect BufferedInputStream FileInputStream expect inResult BufferedInputStream FileInputStream result int expectedByte inExpect read expectedByte <INT> assertEquals expectedByte inResult read expectedByte inExpect read assertEquals <STRING> <INT> inResult read inResult null inResult close inExpect null inExpect close
public void testFilterSet IOException executeTarget <STRING> File tmp File getProjectDir <STRING> File check File getProjectDir <STRING> assertTrue tmp exists assertTrue FILE_UTILS contentEquals tmp check
public void testFilterChain IOException executeTarget <STRING> File tmp File getProjectDir <STRING> File check File getProjectDir <STRING> assertTrue tmp exists assertTrue FILE_UTILS contentEquals tmp check
public void testDirectoryRemoval IOException executeTarget <STRING> assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists
public void testDirectoryRetaining IOException executeTarget <STRING> assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists
private void testCompleteDirectoryMove String target IOException executeTarget target assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists
public void testPathElementMove IOException executeTarget <STRING> assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists
public void setUp configureProject <STRING> System getProperties put PropertyFileInputHandler FILE_NAME_KEY getProject resolveFile <STRING> getAbsolutePath getProject setInputHandler PropertyFileInputHandler
private void stdin System setIn FileInputStream getProject resolveFile <STRING> Exception e e RuntimeException RuntimeException e RuntimeException e getMessage
public void test3 File file File getProjectDir tempFile file exists file delete executeTarget <STRING> assertTrue file exists
public void test4 test3 File file File getProjectDir tempFile final long origSize file length executeTarget <STRING> File file2 File getProjectDir tempFile2 final long newSize file2 length assertEquals origSize <INT> newSize
public void test6 String filename <STRING> replace <CHAR> File separatorChar expectLogContaining <STRING> filename <STRING>
public void testPath test3 File file File getProjectDir tempFile final long origSize file length executeTarget <STRING> File file2 File getProjectDir tempFile2 final long newSize file2 length assertEquals origSize newSize
public void testAppend test3 File file File getProjectDir tempFile final long origSize file length executeTarget <STRING> File file2 File getProjectDir tempFile2 final long newSize file2 length assertEquals origSize <INT> newSize
public void testOverwrite executeTarget <STRING> File file2 File getProjectDir tempFile2 long size file2 length assertTrue size <INT>
public void testmultireader executeTarget <STRING> assertTrue getLog indexOf <STRING> <INT> assertTrue getLog indexOf <STRING> <INT>
private String getFileString String filename IOException Reader r null r FileReader getProject resolveFile filename FileUtils readFully r FileUtils close r
private void expectFileContains String target String filename String contains IOException String content getFileString target filename assertTrue <STRING> filename <STRING> contains <STRING> content content indexOf contains <INT>
public void testTranscoding IOException executeTarget <STRING> File f1 getProject resolveFile <STRING> File f2 getProject resolveFile <STRING> assertTrue f1 toString <STRING> f2 toString FILE_UTILS contentEquals f1 f2
public void testZipgroupfileset IOException executeTarget <STRING> ZipFile zipFile ZipFile File getProjectDir <STRING> assertTrue zipFile getEntry <STRING> null assertTrue zipFile getEntry <STRING> null assertTrue zipFile getEntry <STRING> null assertTrue zipFile getEntry <STRING> null assertTrue zipFile getEntry <STRING> null zipFile close
public void testPrefixAddsDir IOException executeTarget <STRING> File archive getProject resolveFile <STRING> zfPrefixAddsDir ZipFile archive ZipEntry ze zfPrefixAddsDir getEntry <STRING> assertNotNull <STRING> ze
public void testFilesOnlyDoesntCauseRecreate InterruptedException executeTarget <STRING> long l getProject resolveFile <STRING> lastModified Thread sleep <INT> executeTarget <STRING> assertEquals l getProject resolveFile <STRING> lastModified
public void testDefaultExcludesAndUpdate ZipException IOException executeTarget <STRING> ZipFile f null f ZipFile getProject resolveFile <STRING> assertNotNull <STRING> f getEntry <STRING> f null f close
public void testTarFileSet IOException executeTarget <STRING> org apache tools zip ZipFile zf null zf org apache tools zip ZipFile getProject resolveFile <STRING> org apache tools zip ZipEntry ze zf getEntry <STRING> assertEquals UnixStat FILE_FLAG <INT> ze getUnixMode zf null zf close
public void testRewriteZeroPermissions IOException executeTarget <STRING> org apache tools zip ZipFile zf null zf org apache tools zip ZipFile getProject resolveFile <STRING> org apache tools zip ZipEntry ze zf getEntry <STRING> assertEquals UnixStat FILE_FLAG <INT> ze getUnixMode zf null zf close
public void testAcceptZeroPermissions IOException executeTarget <STRING> org apache tools zip ZipFile zf null zf org apache tools zip ZipFile getProject resolveFile <STRING> org apache tools zip ZipEntry ze zf getEntry <STRING> assertEquals <INT> ze getUnixMode zf null zf close
public void testForBugzilla34764 IOException executeTarget <STRING> org apache tools zip ZipFile zf null zf org apache tools zip ZipFile getProject resolveFile <STRING> org apache tools zip ZipEntry ze zf getEntry <STRING> assertEquals UnixStat FILE_FLAG <INT> ze getUnixMode zf null zf close
protected void setUp Exception location Location <STRING> project Project tstamp Tstamp tstamp setLocation location tstamp setProject project
public void testTimeZone Exception Tstamp CustomFormat format tstamp createFormat format setProperty <STRING> format setPattern <STRING> format setTimezone <STRING> Date date Calendar getInstance getTime format execute project date location String today project getProperty <STRING> SimpleDateFormat sdf SimpleDateFormat <STRING> sdf setTimeZone TimeZone getTimeZone <STRING> String expected sdf format date assertEquals expected today
public void testWriteOrder Exception Tstamp CustomFormat format tstamp createFormat format setProperty <STRING> format setPattern <STRING> format setTimezone <STRING> Date date Calendar getInstance getTime format execute project date location String today project getProperty <STRING> SimpleDateFormat sdf SimpleDateFormat <STRING> sdf setTimeZone TimeZone getTimeZone <STRING> String expected sdf format date assertEquals expected today
public void testFormatPrefix Exception Tstamp CustomFormat format tstamp createFormat format setProperty <STRING> format setPattern <STRING> format setTimezone <STRING> tstamp setPrefix <STRING> tstamp execute String prop project getProperty <STRING> assertNotNull prop
public void test3 executeTarget <STRING> File file3 File getProjectDir <STRING> assertTrue file3 exists File file3a File getProjectDir <STRING> assertTrue file3a exists File file3b File getProjectDir <STRING> assertTrue file3b exists File file3c File getProjectDir <STRING> assertTrue file3c exists file3 length <INT> fail <STRING> file3c length <INT> fail <STRING> file3b length <INT> fail <STRING> assertTrue file3a lastModified file3 lastModified assertTrue file3c lastModified file3a lastModified
public void testFilterSet IOException executeTarget <STRING> File tmp File getProjectDir <STRING> File check File getProjectDir <STRING> assertTrue tmp exists assertTrue FILE_UTILS contentEquals tmp check
public void testFilterChain IOException executeTarget <STRING> File tmp File getProjectDir <STRING> File check File getProjectDir <STRING> assertTrue tmp exists assertTrue FILE_UTILS contentEquals tmp check
public void testFileResourcePlain executeTarget <STRING> File file1 File getProjectDir getProject getProperty <STRING> <STRING> File file2 File getProjectDir getProject getProperty <STRING> <STRING> File file3 File getProjectDir getProject getProperty <STRING> <STRING> assertTrue file1 exists assertTrue file2 exists assertTrue file3 exists
public void _testFileResourceWithMapper executeTarget <STRING> File file1 File getProjectDir getProject getProperty <STRING> <STRING> File file2 File getProjectDir getProject getProperty <STRING> <STRING> File file3 File getProjectDir getProject getProperty <STRING> <STRING> assertTrue file1 exists assertTrue file2 exists assertTrue file3 exists
public void testFileResourceWithFilter executeTarget <STRING> File file1 File getProjectDir getProject getProperty <STRING> <STRING> assertTrue file1 exists String file1Content FileUtils readFully FileReader file1 assertEquals <STRING> file1Content IOException e
public void testPathAsResource executeTarget <STRING> File file1 File getProjectDir getProject getProperty <STRING> <STRING> File file2 File getProjectDir getProject getProperty <STRING> <STRING> File file3 File getProjectDir getProject getProperty <STRING> <STRING> assertTrue file1 exists assertTrue file2 exists assertTrue file3 exists
public void testZipfileset executeTarget <STRING> File file1 File getProjectDir getProject getProperty <STRING> <STRING> File file2 File getProjectDir getProject getProperty <STRING> <STRING> File file3 File getProjectDir getProject getProperty <STRING> <STRING> assertTrue file1 exists assertTrue file2 exists assertTrue file3 exists
public void testDifferentWindowsDrive Os isFamily <STRING> System out println <STRING> java io File <STRING> getCanonicalPath java io IOException e System out println <STRING> <STRING> return expectBuildExceptionContaining <STRING> <STRING> <STRING> assertPropertyUnset <STRING>
public void test5 executeTarget <STRING> java io File f java io File getProjectDir <STRING> f exists f delete fail <STRING>
private void testLogoExtraction String target java io IOException executeTarget target assertTrue FILE_UTILS contentEquals project resolveFile <STRING> project resolveFile <STRING>
public void testDocumentationClaimsOnCopy executeTarget <STRING> assertFalse getProject resolveFile <STRING> exists assertTrue getProject resolveFile <STRING> exists
public void testgenericantfile File dir1 project resolveFile <STRING> File dir2 project resolveFile <STRING> File dir3 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath dir3 getAbsolutePath
public void testantfile File dir1 project resolveFile <STRING> File dir2 project resolveFile <STRING> File dir3 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath dir3 getAbsolutePath
protected void testBaseDirs String target String dirs SubAntTest BasedirChecker bc SubAntTest BasedirChecker dirs project addBuildListener bc executeTarget target AssertionFailedError ae bc getError ae null ae project removeBuildListener bc
private void test7 String target executeTarget target File f1 File System getProperty <STRING> <STRING> f1 exists f1 isDirectory fail <STRING> File f2 File System getProperty <STRING> <STRING> f2 exists f2 isDirectory fail <STRING>
private void test8 String target executeTarget target File f1 File System getProperty <STRING> <STRING> f1 exists fail <STRING>
public void assertEqualContent File expect File result AssertionFailedError IOException result exists fail <STRING> result <STRING> InputStream inExpect null InputStream inResult null inExpect BufferedInputStream FileInputStream expect inResult BufferedInputStream FileInputStream result int expectedByte inExpect read expectedByte <INT> assertEquals expectedByte inResult read expectedByte inExpect read assertEquals <STRING> <INT> inResult read inResult null inResult close inExpect null inExpect close
public InitializeClassTest String name name
public void testAll IOException executeTarget <STRING> PrintStream ps System out PrintStream newps PrintStream FileOutputStream f2 System setOut newps project executeTarget <STRING> System setOut ps newps close assertTrue <STRING> FILE_UTILS contentEquals f1 f2
public void testPassFile Exception executeTarget <STRING> File f File getProjectDir <STRING> assertTrue <STRING> f <STRING> f exists assertEquals JAKARTA_URL EOL readFile f
public void testPassFileDuplicateEntry Exception executeTarget <STRING> File f File getProjectDir <STRING> assertTrue <STRING> f <STRING> f exists assertEquals JAKARTA_URL EOL TIGRIS_URL EOL readFile f
public void testPassFileMultipleEntry Exception executeTarget <STRING> File f File getProjectDir <STRING> assertTrue <STRING> f <STRING> f exists assertEquals JAKARTA_URL EOL XML_URL EOL TIGRIS_URL EOL readFile f
private String readFile File f Exception BufferedReader reader null reader BufferedReader FileReader f StringBuffer buf StringBuffer String line null line reader readLine null buf append line EOL buf toString reader null reader close
public void testExplicitBasedir1 File dir1 getProjectDir File dir2 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath
public void testExplicitBasedir2 File dir1 getProjectDir File dir2 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath
public void testDoNotInheritBasedir File dir1 getProjectDir File dir2 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath
public void testBasedirTripleCall File dir1 getProjectDir File dir2 project resolveFile <STRING> testBaseDirs <STRING> String dir1 getAbsolutePath dir2 getAbsolutePath dir1 getAbsolutePath
protected void testBaseDirs String target String dirs BasedirChecker bc BasedirChecker dirs project addBuildListener bc executeTarget target AssertionFailedError ae bc getError ae null ae project removeBuildListener bc
public void testReferenceInheritance Path p Path systemClasspath p setProject project project addReference <STRING> p project addReference <STRING> p testReference <STRING> String <STRING> <STRING> boolean true true p testReference <STRING> String <STRING> <STRING> boolean true false p testReference <STRING> String <STRING> <STRING> boolean false false null
public void testReferenceNoInheritance Path p Path systemClasspath p setProject project project addReference <STRING> p project addReference <STRING> p testReference <STRING> String <STRING> <STRING> boolean true false p testReference <STRING> String <STRING> <STRING> boolean false true null testReference <STRING> String <STRING> <STRING> boolean true false p testReference <STRING> String <STRING> <STRING> boolean false false null
public void testReferenceRename Path p Path systemClasspath p setProject project project addReference <STRING> p testReference <STRING> String <STRING> <STRING> boolean true false p testReference <STRING> String <STRING> <STRING> boolean false true null testReference <STRING> String <STRING> <STRING> boolean false true p
protected void testReference String target String keys boolean expect Object value ReferenceChecker rc ReferenceChecker keys expect value project addBuildListener rc executeTarget target AssertionFailedError ae rc getError ae null ae project removeBuildListener rc
public void testLogfilePlacement File logFiles File getProject resolveFile <STRING> getProject resolveFile <STRING> getProject resolveFile <STRING> getProject resolveFile <STRING> int i <INT> i logFiles length i assertTrue logFiles i getName <STRING> logFiles i exists executeTarget <STRING> int i <INT> i logFiles length i assertTrue logFiles i getName <STRING> logFiles i exists
public void testInputHandlerInheritance InputHandler ih PropertyFileInputHandler getProject setInputHandler ih InputHandlerChecker ic InputHandlerChecker ih getProject addBuildListener ic executeTarget <STRING> AssertionFailedError ae ic getError ae null ae getProject removeBuildListener ic
public void testRefId Path testPath Path project testPath createPath setPath System getProperty <STRING> PropertyChecker pc PropertyChecker <STRING> String null testPath toString project addBuildListener pc executeTarget <STRING> AssertionFailedError ae pc getError ae null ae project removeBuildListener pc
public void testPropertySet executeTarget <STRING> assertTrue getLog indexOf <STRING> <INT> assertTrue getLog indexOf <STRING> <INT> assertTrue getLog indexOf <STRING> <INT>
public void testMultiplePropertyFileChildren PropertyChecker pcBar PropertyChecker <STRING> String null <STRING> PropertyChecker pcFoo PropertyChecker <STRING> String null <STRING> project addBuildListener pcBar project addBuildListener pcFoo executeTarget <STRING> AssertionFailedError aeBar pcBar getError aeBar null aeBar AssertionFailedError aeFoo pcFoo getError aeFoo null aeFoo project removeBuildListener pcBar project removeBuildListener pcFoo
private Process getProcess long timetorun Exception String cmdArray JavaEnvUtils getJreExecutable <STRING> <STRING> TEST_CLASSPATH TimeProcess getName String valueOf timetorun Runtime getRuntime exec cmdArray
private String getErrorOutput Process p Exception BufferedReader err BufferedReader InputStreamReader p getErrorStream StringBuffer buf StringBuffer String line line err readLine null buf append line buf toString
private int waitForEnd Process p Exception int retcode p waitFor retcode <INT> String err getErrorOutput p err length <INT> System err println <STRING> System err println err retcode
public void testNoTimeOut Exception Process process getProcess TIME_OUT <INT> watchdog start process int retCode waitForEnd process assertTrue <STRING> watchdog killedProcess assertFalse Execute isFailure retCode
public void testTimeOut Exception Process process getProcess TIME_OUT <INT> long now System currentTimeMillis watchdog start process int retCode process waitFor long elapsed System currentTimeMillis now assertTrue <STRING> watchdog killedProcess assertTrue <STRING> elapsed <STRING> TIME_OUT_TEST <STRING> elapsed TIME_OUT_TEST assertTrue <STRING> elapsed <STRING> TIME_OUT <INT> <STRING> elapsed TIME_OUT <INT>
public void testFailed Exception Process process getProcess <INT> watchdog start process int retCode process waitFor assertTrue <STRING> watchdog killedProcess assertTrue <STRING> retCode retCode <INT>
public void testManualStop Exception final Process process getProcess TIME_OUT <INT> watchdog start process Thread thread Thread public void run process waitFor InterruptedException e fail <STRING> thread start thread join TIME_OUT <INT> watchdog stop thread join assertEquals <INT> process exitValue assertTrue <STRING> watchdog killedProcess
public void testLogBlankEcho Project p Project p init EchoTestLogger logger EchoTestLogger p addBuildListener logger Echo echo Echo echo setProject p echo setTaskName <STRING> echo execute assertEquals <STRING> logger lastLoggedMessage
public void testDirsetPathWithoutPackagenames Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testFilesetPath Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testNestedFilesetPath Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testFilelistPath Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testNestedFilelistPath Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testPathelementLocationPath Exception executeTarget <STRING> BuildException e fail <STRING> e
public void testSimple executeTarget <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING> assertEquals <STRING> project getProperty <STRING>
protected void setUp ej ExecuteJava ej setTimeout Long TIME_OUT project Project project setBasedir <STRING> project setProperty MagicNames ANT_HOME System getProperty MagicNames ANT_HOME cp Path project getTestClassPath ej setClasspath cp
private Commandline getCommandline int timetorun Exception Commandline cmd Commandline cmd setExecutable TimeProcess getName cmd createArgument setValue String valueOf timetorun cmd
public void testNoTimeOut Exception Commandline cmd getCommandline TIME_OUT <INT> ej setJavaCommand cmd ej execute project assertTrue <STRING> ej killedProcess
public void testTimeOut Exception Commandline cmd getCommandline TIME_OUT <INT> ej setJavaCommand cmd long now System currentTimeMillis ej execute project long elapsed System currentTimeMillis now assertTrue <STRING> ej killedProcess assertTrue <STRING> elapsed <STRING> TIME_OUT_TEST <STRING> elapsed TIME_OUT_TEST assertTrue <STRING> elapsed <STRING> TIME_OUT <INT> <STRING> elapsed TIME_OUT <INT>
public void testNoTimeOutForked Exception Commandline cmd getCommandline TIME_OUT <INT> ej setJavaCommand cmd ej fork cp assertTrue <STRING> ej killedProcess
public void testTimeOutForked Exception Commandline cmd getCommandline TIME_OUT <INT> ej setJavaCommand cmd long now System currentTimeMillis ej fork cp long elapsed System currentTimeMillis now assertTrue <STRING> ej killedProcess assertTrue <STRING> elapsed <STRING> TIME_OUT_TEST <STRING> elapsed TIME_OUT_TEST assertTrue <STRING> elapsed <STRING> TIME_OUT <INT> <STRING> elapsed TIME_OUT <INT>
public static void main String args Exception int time Integer parseInt args <INT> time <INT> IllegalArgumentException <STRING> time Thread sleep time
public void test4 Os isFamily <STRING> Os isFamily <STRING> return executeTarget <STRING> String filesep System getProperty <STRING> String expected filesep <STRING> filesep <STRING> String checkprop project getProperty <STRING> checkprop equals expected fail <STRING>
public void testSigFile executeTarget <STRING> SignJarChild sj SignJarChild sj setAlias <STRING> sj setKeystore <STRING> sj setStorepass <STRING> File jar File getProject getProperty <STRING> sj setJar jar assertFalse <STRING> sj isSigned sj setSigfile <STRING> assertTrue <STRING> sj isSigned
public void testInvalidChars executeTarget <STRING> SignJarChild sj SignJarChild sj setAlias <STRING> sj setKeystore <STRING> sj setStorepass <STRING> File jar File getProject getProperty <STRING> sj setJar jar assertTrue sj isSigned
public void testSignUnnormalizedJar Exception executeTarget <STRING> File testJar File getProject getProperty <STRING> File testJarParent testJar getParentFile File f File testJarParent <STRING> testJarParent getName <STRING> testJar getName assertFalse testJar equals f assertEquals testJar getCanonicalPath f getCanonicalPath SignJar s SignJar s setProject getProject s setJar f s setAlias <STRING> s setStorepass <STRING> s setKeystore <STRING> s execute
public void testBackTraceOff executeTarget <STRING> BuildException ex ex getMessage indexOf <STRING> <INT> fail <STRING> ex getMessage
public void testProcessDestroyer ProcessDestroyer processDestroyer ProcessDestroyer Process process Runtime getRuntime exec <STRING> System getProperty <STRING> <STRING> getClass getName assertFalse <STRING> processDestroyer isAddedAsShutdownHook processDestroyer add process assertTrue <STRING> processDestroyer isAddedAsShutdownHook process destroy processDestroyer remove process assertFalse <STRING> processDestroyer isAddedAsShutdownHook IOException e e printStackTrace
private void assertFileMissing String message String filename assertTrue message getProject resolveFile filename exists
public void testTrim Equals eq Equals eq setArg1 <STRING> eq setArg2 <STRING> assertTrue eq eval eq setTrim true assertTrue eq eval eq setArg2 <STRING> assertTrue eq eval
public void testCaseSensitive Equals eq Equals eq setArg1 <STRING> eq setArg2 <STRING> assertTrue eq eval eq setCasesensitive false assertTrue eq eval
public void testCaseSensitive Contains con Contains con setString <STRING> con setSubstring <STRING> assertTrue con eval con setCasesensitive false assertTrue con eval
private void testRealTest String target java io IOException executeTarget target assertTrue FILE_UTILS contentEquals project resolveFile <STRING> project resolveFile <STRING>
public void execute Random generator Random randomOutValue <STRING> generator nextInt randomErrValue <STRING> generator nextInt System out println randomOutValue System err println randomErrValue outputReceived BuildException <STRING> errorReceived BuildException <STRING>
protected void handleOutput String line line line trim line length <INT> line equals randomOutValue String message <STRING> line <STRING> randomOutValue <STRING> BuildException message outputReceived true
protected void handleErrorOutput String line line line trim line length <INT> line equals randomErrValue String message <STRING> line <STRING> randomErrValue <STRING> BuildException message errorReceived true
public void test1 Timer timer Timer executeTarget <STRING> timer stop TRACE System out println <STRING> timer time assertTrue timer time <INT>
public void test2 Timer timer Timer executeTarget <STRING> timer stop TRACE System out println <STRING> timer time assertTrue timer time <INT>
public void test3 Timer timer Timer executeTarget <STRING> timer stop TRACE System out println <STRING> timer time assertTrue timer time <INT> ERROR_RANGE
public void test4 Timer timer Timer executeTarget <STRING> timer stop TRACE System out println <STRING> timer time assertTrue timer time <INT> ERROR_RANGE timer time <INT>
public void test6 Timer timer Timer executeTarget <STRING> timer stop TRACE System out println <STRING> timer time assertTrue timer time <INT>
public void setUp project Project project init rmic Rmic rmic setProject project
public void testCompilerArg String args rmic getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length Rmic ImplementationSpecificArgument arg rmic createCompilerArg String ford <STRING> String prefect <STRING> String testArg ford <STRING> prefect arg setValue testArg args rmic getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals testArg args <INT> arg setCompiler <STRING> args rmic getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length project setProperty <STRING> <STRING> args rmic getCurrentCompilerArgs assertNotNull args assertEquals <STRING> <INT> args length project setProperty <STRING> <STRING> args rmic getCurrentCompilerArgs assertEquals <STRING> <INT> args length assertEquals testArg args <INT>
public void testCompilerAttribute String compiler rmic getCompiler assertNotNull compiler assertEquals <STRING> compiler compiler <STRING> project setNewProperty <STRING> <STRING> compiler rmic getCompiler assertNotNull compiler assertEquals <STRING> compiler rmic setCompiler <STRING> compiler rmic getCompiler assertNotNull compiler assertEquals <STRING> compiler
public void testNested4 String specificMessage <STRING> <STRING> char c <CHAR> <CHAR> <CHAR> StringBuffer target StringBuffer <STRING> int i <INT> i c length i target setCharAt target length <INT> c i expectSpecificBuildException target toString <STRING> specificMessage
public void testNested7 String specificMessage <STRING> char c <CHAR> <CHAR> StringBuffer target StringBuffer <STRING> int i <INT> i c length i target setCharAt target length <INT> c i expectSpecificBuildException target toString <STRING> specificMessage
public void test3 executeTarget <STRING> java io File f java io File getProjectDir <STRING> f exists f isDirectory fail <STRING> f delete
public void testMapping PackageNameMapper mapper PackageNameMapper mapper setFrom <STRING> mapper setTo <STRING> String file fixupPath <STRING> String result mapper mapFileName file <INT> assertEquals <STRING> result
public void testVectorEquals assertTrue CollectionUtils equals null Vector assertTrue CollectionUtils equals Vector null assertTrue CollectionUtils equals Vector Vector Vector v1 Vector Stack s2 Stack v1 addElement <STRING> s2 push <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1 v1 addElement <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1 s2 push <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1 s2 push <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1 v1 addElement <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1 v1 addElement <STRING> s2 push <STRING> assertTrue CollectionUtils equals v1 s2 assertTrue CollectionUtils equals s2 v1
public void testDictionaryEquals assertTrue CollectionUtils equals null Hashtable assertTrue CollectionUtils equals Hashtable null assertTrue CollectionUtils equals Hashtable Properties Hashtable h1 Hashtable Properties p2 Properties h1 put <STRING> <STRING> p2 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 h1 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 p2 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 p2 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 h1 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 h1 put <STRING> <STRING> p2 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 p2 put <STRING> <STRING> h1 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1 h1 put <STRING> <STRING> p2 put <STRING> <STRING> assertTrue CollectionUtils equals h1 p2 assertTrue CollectionUtils equals p2 h1
public void tearDown IOException los close f delete
public void testNoFileWithoutWrite IOException los close assertTrue f <STRING> f exists
public void testOpen IOException los open los close assertTrue f <STRING> f exists
public void testSingleByte IOException los write <INT> los close assertTrue f <STRING> f exists
public void testByteArray IOException los write byte <INT> los close assertTrue f <STRING> f exists
public void testPrecedenceRules FacadeTaskHelper fth FacadeTaskHelper <STRING> assertEquals <STRING> fth getImplementation fth setMagicValue <STRING> assertEquals <STRING> fth getImplementation fth FacadeTaskHelper <STRING> <STRING> assertEquals <STRING> fth getImplementation fth FacadeTaskHelper <STRING> null assertEquals <STRING> fth getImplementation fth FacadeTaskHelper <STRING> fth setMagicValue <STRING> fth setImplementation <STRING> assertEquals <STRING> fth getImplementation
public void testHasBeenSet FacadeTaskHelper fth FacadeTaskHelper <STRING> assertTrue <STRING> fth hasBeenSet fth setMagicValue null assertTrue <STRING> fth hasBeenSet fth setMagicValue <STRING> assertTrue <STRING> fth hasBeenSet fth setMagicValue null assertTrue fth hasBeenSet fth setImplementation <STRING> assertTrue <STRING> fth hasBeenSet
public void testDependsOnImplementation ImplementationSpecificArgument ia ImplementationSpecificArgument ia setLine <STRING> String parts ia getParts assertNotNull parts assertEquals <INT> parts length assertEquals <STRING> parts <INT> assertEquals <STRING> parts <INT> parts ia getParts null assertNotNull parts assertEquals <INT> parts length assertEquals <STRING> parts <INT> assertEquals <STRING> parts <INT> ia setImplementation <STRING> parts ia getParts null assertNotNull parts assertEquals <INT> parts length parts ia getParts <STRING> assertNotNull parts assertEquals <INT> parts length assertEquals <STRING> parts <INT> assertEquals <STRING> parts <INT>
public void tearDown removeThis null removeThis exists removeThis delete removeThis deleteOnExit
public void testSetLastModified IOException removeThis File <STRING> FileOutputStream fos FileOutputStream removeThis fos write byte <INT> fos close long modTime removeThis lastModified assertTrue modTime <INT> Thread sleep <INT> InterruptedException ie fail ie getMessage FILE_UTILS setFileLastModified removeThis <INT> long secondModTime removeThis lastModified assertTrue secondModTime modTime final int millisperday <INT> <INT> <INT> FILE_UTILS setFileLastModified removeThis secondModTime millisperday long thirdModTime removeThis lastModified assertTrue thirdModTime secondModTime
public void testResolveFile Os isFamily <STRING> Os isFamily <STRING> assertEquals File separator FILE_UTILS resolveFile null <STRING> getPath assertEquals File separator FILE_UTILS resolveFile null <STRING> getPath assertEqualsIgnoreDriveCase localize File separator FILE_UTILS resolveFile null <STRING> getPath assertEqualsIgnoreDriveCase localize File separator FILE_UTILS resolveFile null <STRING> getPath String driveSpec <STRING> assertEquals driveSpec <STRING> FILE_UTILS resolveFile null driveSpec <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS resolveFile null driveSpec <STRING> getPath String driveSpecLower <STRING> assertEquals driveSpecLower <STRING> FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals driveSpecLower <STRING> FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS resolveFile null driveSpec <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS resolveFile null driveSpec <STRING> getPath Os isFamily <STRING> String driveSpec <STRING> assertEquals driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath assertEquals driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath String driveSpecLower <STRING> assertEquals driveSpec FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals driveSpec FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath assertEquals driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath Os isFamily <STRING> String driveSpec <STRING> String udir System getProperty <STRING> assertEquals udir File separator driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath assertEquals udir File separator driveSpec FILE_UTILS resolveFile null driveSpec <STRING> getPath String driveSpecLower <STRING> assertEquals udir File separator driveSpecLower FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals udir File separator driveSpecLower FILE_UTILS resolveFile null driveSpecLower <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING> getPath assertEquals <STRING> File localize <STRING> FILE_UTILS resolveFile File localize <STRING> <STRING>
public void testNormalize Os isFamily <STRING> Os isFamily <STRING> assertEquals File separator FILE_UTILS normalize <STRING> getPath assertEquals File separator FILE_UTILS normalize <STRING> getPath FILE_UTILS normalize <STRING> getPath fail <STRING> Exception e FILE_UTILS normalize <STRING> getPath fail <STRING> Exception e Os isFamily <STRING> String driveSpec <STRING> FILE_UTILS normalize driveSpec getPath fail driveSpec <STRING> Exception e assertEquals driveSpec <STRING> FILE_UTILS normalize driveSpec <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS normalize driveSpec <STRING> getPath String driveSpecLower <STRING> assertEquals driveSpecLower <STRING> FILE_UTILS normalize driveSpecLower <STRING> getPath assertEquals driveSpecLower <STRING> FILE_UTILS normalize driveSpecLower <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS normalize driveSpec <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS normalize driveSpec <STRING> getPath Os isFamily <STRING> String driveSpec <STRING> assertEquals driveSpec FILE_UTILS normalize driveSpec getPath assertEquals driveSpec FILE_UTILS normalize driveSpec <STRING> getPath assertEquals driveSpec FILE_UTILS normalize driveSpec <STRING> getPath String driveSpecLower <STRING> assertEquals driveSpec FILE_UTILS normalize driveSpecLower getPath assertEquals driveSpec FILE_UTILS normalize driveSpecLower <STRING> getPath assertEquals driveSpec FILE_UTILS normalize driveSpecLower <STRING> getPath assertEquals driveSpec <STRING> FILE_UTILS normalize driveSpecLower <STRING> getPath assertEquals driveSpec FILE_UTILS normalize driveSpec <STRING> getPath assertEquals driveSpec FILE_UTILS normalize driveSpec <STRING> getPath String driveSpec <STRING> assertEquals driveSpec FILE_UTILS normalize driveSpec getPath fail <STRING> BuildException e assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath assertEquals localize <STRING> FILE_UTILS normalize localize <STRING> getPath FILE_UTILS normalize <STRING> fail <STRING> BuildException e assertEquals <STRING> File localize <STRING> FILE_UTILS normalize localize <STRING>
public void testNullArgs FILE_UTILS normalize null fail <STRING> NullPointerException npe File f FILE_UTILS resolveFile null <STRING> assertEquals f File <STRING> getAbsoluteFile
public void testCreateTempFile File tmp1 FILE_UTILS createTempFile <STRING> <STRING> null false true String tmploc System getProperty <STRING> String name tmp1 getName assertTrue <STRING> name startsWith <STRING> assertTrue <STRING> name endsWith <STRING> assertTrue <STRING> tmp1 exists assertEquals File tmploc tmp1 getName getAbsolutePath tmp1 getAbsolutePath tmp1 delete File dir2 File tmploc <STRING> dir2 mkdir removeThis dir2 File tmp2 FILE_UTILS createTempFile <STRING> <STRING> dir2 true true String name2 tmp2 getName assertTrue <STRING> name2 startsWith <STRING> assertTrue <STRING> name2 endsWith <STRING> assertTrue <STRING> tmp2 exists assertEquals File dir2 tmp2 getName getAbsolutePath tmp2 getAbsolutePath tmp2 delete dir2 delete File parent File File <STRING> getAbsolutePath tmp1 FILE_UTILS createTempFile <STRING> <STRING> parent false assertTrue <STRING> tmp1 exists name tmp1 getName assertTrue <STRING> name startsWith <STRING> assertTrue <STRING> name endsWith <STRING> assertEquals <STRING> parent getAbsolutePath tmp1 getParent tmp2 FILE_UTILS createTempFile <STRING> <STRING> parent false assertTrue <STRING> tmp1 getAbsolutePath equals tmp2 getAbsolutePath File tmp3 FILE_UTILS createTempFile <STRING> <STRING> null false tmploc System getProperty <STRING> assertEquals File tmploc tmp3 getName getAbsolutePath tmp3 getAbsolutePath
public void testContentEquals IOException assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> <STRING> File System getProperty <STRING> <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> <STRING> File System getProperty <STRING> <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> <STRING> File System getProperty <STRING> <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> <STRING> File System getProperty <STRING> <STRING> assertTrue <STRING> FILE_UTILS contentEquals File System getProperty <STRING> <STRING> File System getProperty <STRING> <STRING>
public void testCreateNewFile IOException removeThis File <STRING> assertTrue removeThis exists FILE_UTILS createNewFile removeThis assertTrue removeThis exists
public void testRemoveLeadingPath assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> Os isFamily <STRING> Os isFamily <STRING> assertEquals FILE_UTILS normalize <STRING> getAbsolutePath FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals FILE_UTILS normalize <STRING> getAbsolutePath FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals <STRING> FILE_UTILS removeLeadingPath File <STRING> File <STRING> String expected <STRING> replace <CHAR> File separatorChar replace <CHAR> File separatorChar assertEquals expected FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals expected FILE_UTILS removeLeadingPath File <STRING> File <STRING> assertEquals expected FILE_UTILS removeLeadingPath File <STRING> File <STRING>
public void testToURI String dosRoot null Os isFamily <STRING> Os isFamily <STRING> dosRoot System getProperty <STRING> substring <INT> <INT> replace File separatorChar <CHAR> dosRoot <STRING> Os isFamily <STRING> assertEquals <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> Os isFamily <STRING> assertEquals <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> File pathSeparatorChar <CHAR> assertEquals <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> assertTrue <STRING> FILE_UTILS toURI <STRING> startsWith <STRING> assertTrue FILE_UTILS toURI <STRING> endsWith <STRING> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> File pathSeparatorChar <CHAR> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> assertTrue <STRING> FILE_UTILS toURI <STRING> startsWith <STRING> assertTrue FILE_UTILS toURI <STRING> endsWith <STRING> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING> assertEquals <STRING> dosRoot <STRING> removeExtraneousAuthority FILE_UTILS toURI <STRING>
private static String removeExtraneousAuthority String uri String prefix <STRING> uri startsWith prefix <STRING> uri substring prefix length uri
public void testFromURI String dosRoot null Os isFamily <STRING> Os isFamily <STRING> dosRoot System getProperty <STRING> substring <INT> <INT> dosRoot <STRING> Os isFamily <STRING> assertEqualsIgnoreDriveCase <STRING> FILE_UTILS fromURI <STRING> Os isFamily <STRING> assertEqualsIgnoreDriveCase <STRING> FILE_UTILS fromURI <STRING> assertEqualsIgnoreDriveCase dosRoot File separator <STRING> FILE_UTILS fromURI <STRING> assertEquals <STRING> File separator <STRING> FILE_UTILS fromURI <STRING> assertEquals dosRoot File separator <STRING> FILE_UTILS fromURI <STRING> assertEquals dosRoot File separator <STRING> FILE_UTILS fromURI <STRING>
public void testModificationTests long firstTime System currentTimeMillis long secondTime firstTime <INT> assertTrue <STRING> FILE_UTILS isUpToDate firstTime secondTime assertFalse <STRING> FILE_UTILS isUpToDate secondTime firstTime assertTrue <STRING> FILE_UTILS isUpToDate firstTime <INT>
public void testHasErrorInCase File tempFolder File System getProperty <STRING> File wellcased FILE_UTILS createTempFile <STRING> <STRING> tempFolder true true String s wellcased getName toUpperCase File wrongcased File tempFolder s Os isFamily <STRING> Os isFamily <STRING> Os isFamily <STRING> assertTrue FILE_UTILS hasErrorInCase wrongcased assertFalse FILE_UTILS hasErrorInCase wellcased assertFalse FILE_UTILS hasErrorInCase wrongcased assertFalse FILE_UTILS hasErrorInCase wellcased
private String localize String path path root path substring <INT> path replace <CHAR> File separatorChar replace <CHAR> File separatorChar
private void assertEqualsIgnoreDriveCase String s1 String s2 Os isFamily <STRING> Os isFamily <STRING> s1 length <INT> s2 length <INT> StringBuffer sb1 StringBuffer s1 StringBuffer sb2 StringBuffer s2 sb1 setCharAt <INT> Character toUpperCase s1 charAt <INT> sb2 setCharAt <INT> Character toUpperCase s2 charAt <INT> assertEquals sb1 toString sb2 toString assertEquals s1 s2
public void testAdd assertTrue v add O assertFalse v add O assertEquals <INT> v size
public void testAdd2 v add <INT> O v add <INT> O assertEquals <INT> v size
public void testAddElement v addElement O v addElement O assertEquals <INT> v size
public void testAddAll assertTrue v addAll Arrays asList Object O O assertEquals <INT> v size
public void testAddAll2 assertTrue v addAll <INT> Arrays asList Object O O assertEquals <INT> v size
public void testClone v add O Object o v clone assertTrue o VectorSet VectorSet vs VectorSet o assertEquals <INT> vs size assertTrue vs contains O
public void testContains assertFalse v contains O v add O assertTrue v contains O assertFalse v contains null
public void testContainsAll assertFalse v containsAll Arrays asList Object O O v add O assertTrue v containsAll Arrays asList Object O O assertFalse v containsAll Arrays asList Object O null
public void testInsertElementAt v insertElementAt O <INT> v insertElementAt O <INT> assertEquals <INT> v size
public void testRemoveIndex v add O assertSame O v remove <INT> assertEquals <INT> v size v remove <INT> fail <STRING> ArrayIndexOutOfBoundsException e
public void testRemoveObject v add O assertTrue v remove O assertEquals <INT> v size assertFalse v remove O
public void testRemoveAtEndWhenSizeEqualsCapacity v VectorSet <INT> <INT> Object a Object v add a Object b Object v add b v add O assertEquals <INT> v size assertEquals <INT> v capacity assertTrue v remove O assertEquals <INT> v size assertFalse v remove O assertSame a v elementAt <INT> assertSame b v elementAt <INT>
public void testRemoveAtFrontWhenSizeEqualsCapacity v VectorSet <INT> <INT> v add O Object a Object v add a Object b Object v add b assertEquals <INT> v size assertEquals <INT> v capacity assertTrue v remove O assertEquals <INT> v size assertFalse v remove O assertSame a v elementAt <INT> assertSame b v elementAt <INT>
public void testRemoveInMiddleWhenSizeEqualsCapacity v VectorSet <INT> <INT> Object a Object v add a v add O Object b Object v add b assertEquals <INT> v size assertEquals <INT> v capacity assertTrue v remove O assertEquals <INT> v size assertFalse v remove O assertSame a v elementAt <INT> assertSame b v elementAt <INT>
public void testRemoveAll v add O assertTrue v removeAll Arrays asList Object O O assertEquals <INT> v size assertFalse v removeAll Arrays asList Object O O
public void testRemoveElement v add O assertTrue v removeElement O assertEquals <INT> v size assertFalse v removeElement O
public void testRemoveElementAt v add O v removeElementAt <INT> assertEquals <INT> v size v removeElementAt <INT> fail <STRING> ArrayIndexOutOfBoundsException e
public void testRemoveRange Object a Object Object b Object Object c Object v addAll Arrays asList Object O a b c v removeRange <INT> <INT> assertEquals <INT> v size assertTrue v contains O assertTrue v contains c
public void testRetainAll Object a Object Object b Object Object c Object v addAll Arrays asList Object O a b c assertEquals <INT> v indexOf O v retainAll Arrays asList Object c O assertEquals <INT> v size assertTrue v contains O assertTrue v contains c assertEquals <INT> v indexOf O
public void testSet v add O Object a Object assertSame O v set <INT> a assertSame a v get <INT> assertEquals <INT> v size
public void testSetElementAt v add O Object a Object v setElementAt a <INT> assertSame a v get <INT> assertEquals <INT> v size
public void testNoPatternAtAll GlobPatternMapper m GlobPatternMapper m setFrom <STRING> m setTo <STRING> assertNull <STRING> m mapFileName <STRING> String result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT>
public void testPostfixOnly GlobPatternMapper m GlobPatternMapper m setFrom <STRING> m setTo <STRING> assertNull <STRING> m mapFileName <STRING> String result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT> m setTo <STRING> result m mapFileName <STRING> assertEquals <STRING> result <INT>
public void testPrefixOnly GlobPatternMapper m GlobPatternMapper m setFrom <STRING> m setTo <STRING> assertNull <STRING> m mapFileName <STRING> String result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT> m setTo <STRING> result m mapFileName <STRING> assertEquals <STRING> result <INT>
public void testPreAndPostfix GlobPatternMapper m GlobPatternMapper m setFrom <STRING> m setTo <STRING> assertNull <STRING> m mapFileName <STRING> String result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT> result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT> result m mapFileName <STRING> assertNotNull <STRING> result assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT>
public void testClear h put K1 V1 h clear assertTrue h isEmpty
public void testClone h put K1 V1 Hashtable h2 Hashtable h clone assertTrue h2 LinkedHashtable assertTrue h2 containsKey K1
public void testContainsAndPut h put K1 V1 assertTrue h contains K1 assertTrue h containsKey K1 assertTrue h containsValue V1 assertFalse h containsKey K2
public void testGet assertNull h get K1 h put K1 V1 assertSame V1 h get K1
public void testIsEmpty assertTrue h isEmpty h put K1 V1 assertFalse h isEmpty
public void testPutReturnValue assertNull h put K1 V1 assertSame V1 h put K1 V2
public void testPutAll LinkedHashtable h2 LinkedHashtable h put K1 V1 h2 putAll h assertTrue h2 containsKey K1
public void testRemove h put K1 V1 assertSame V1 h remove K1 assertTrue h isEmpty assertNull h remove K1
public void testSize assertEquals <INT> h size h put K1 V1 assertEquals <INT> h size
public void testEntrySet multiSetup Iterator i h entrySet iterator assertTrue i hasNext Map Entry e Map Entry i next assertSame K1 e getKey assertSame V1 e getValue assertTrue i hasNext e Map Entry i next assertSame K2 e getKey assertSame V2 e getValue assertFalse i hasNext
private static void assertKeys Iterator i assertTrue i hasNext assertSame K1 i next assertTrue i hasNext assertSame K2 i next assertFalse i hasNext
private static void assertValues Iterator i assertTrue i hasNext assertSame V1 i next assertTrue i hasNext assertSame V2 i next assertFalse i hasNext
public void testIsReference assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING> assertTrue <STRING> w isReference <STRING>
public void testEncode assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING> assertEquals <STRING> w encode <STRING>
public void testEncodeAttributeValue assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING> assertEquals <STRING> w encodeAttributeValue <STRING>
public void testAttributeWithWhitespace IOException Document d DOMUtils newDocument Element root d createElement <STRING> root setAttribute <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP sw toString
public void testIsLegalCharacter assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR> assertTrue <STRING> w isLegalCharacter <CHAR>
public void testCDATAEndEncoding assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING> assertEquals <STRING> w encodedata <STRING>
public void testNoAdditionalWhiteSpaceForText IOException Document d DOMUtils newDocument Element root d createElement <STRING> DOMUtils appendTextElement root <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP sw toString
public void testNoAdditionalWhiteSpaceForCDATA IOException Document d DOMUtils newDocument Element root d createElement <STRING> DOMUtils appendCDATAElement root <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP sw toString
public void testNoAdditionalWhiteSpaceForEmptyElement IOException Document d DOMUtils newDocument Element root d createElement <STRING> DOMUtils createChildElement root <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP sw toString
public void testNoNSPrefixByDefault IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> root setAttributeNS <STRING> <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP sw toString
public void testNSOnElement IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> root setAttributeNS <STRING> <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter false DOMElementWriter XmlNamespacePolicy ONLY_QUALIFY_ELEMENTS w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP sw toString
public void testNSPrefixOnAttribute IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> root setAttributeNS <STRING> <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter false DOMElementWriter XmlNamespacePolicy QUALIFY_ALL w write root sw <INT> <STRING> assertEquals <STRING> <STRING> StringUtils LINE_SEP sw toString
public void testNSPrefixOnAttributeEvenWithoutElement IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> root setAttributeNS <STRING> <STRING> <STRING> StringWriter sw StringWriter DOMElementWriter w DOMElementWriter false DOMElementWriter XmlNamespacePolicy false true w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP sw toString
public void testNSGetsReused IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> Element child d createElementNS <STRING> <STRING> root appendChild child StringWriter sw StringWriter DOMElementWriter w DOMElementWriter false DOMElementWriter XmlNamespacePolicy ONLY_QUALIFY_ELEMENTS w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP sw toString
public void testNSGoesOutOfScope IOException Document d DOMUtils newDocument Element root d createElementNS <STRING> <STRING> Element child d createElementNS <STRING> <STRING> root appendChild child Element child2 d createElementNS <STRING> <STRING> root appendChild child2 Element grandChild d createElementNS <STRING> <STRING> child2 appendChild grandChild Element child3 d createElementNS <STRING> <STRING> root appendChild child3 StringWriter sw StringWriter DOMElementWriter w DOMElementWriter false DOMElementWriter XmlNamespacePolicy ONLY_QUALIFY_ELEMENTS w write root sw <INT> <STRING> assertEquals <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP <STRING> StringUtils LINE_SEP sw toString
public void testSimpleAbc16 Exception byte bytes byte <INT> int pos <INT> ReaderInputStream r ReaderInputStream StringReader <STRING> <STRING> int i <INT> true i int res r read res <INT> break bytes pos byte res bytes <STRING> getBytes <STRING> String n String bytes <INT> bytes length <STRING> System out println n
public void testReadZero Exception ReaderInputStream r ReaderInputStream StringReader <STRING> byte bytes byte <INT> r read bytes <INT> <INT> int readin r read bytes <INT> <INT> assertEquals <STRING> getBytes length readin
public void testPreample Exception byte bytes <STRING> getBytes <STRING> System out println <STRING> bytes length
private void compareBytes String s String encoding Exception byte expected s getBytes encoding ReaderInputStream r ReaderInputStream StringReader s encoding int i <INT> i expected length i int expect expected i <INT> int read r read expect read fail <STRING> i <STRING> expect <STRING> read <STRING> s <STRING> encoding r read <INT> fail <STRING> s <STRING> encoding
public void testGetSystemId File file null File separatorChar <CHAR> file File <STRING> file File <STRING> String systemid JAXPUtils getSystemId file assertTrue <STRING> systemid startsWith <STRING> assertTrue <STRING> systemid startsWith <STRING>
public void testOnlyOneInstance Enumeration enumeration String list <STRING> ClassLoader c ClasspathUtils getUniqueClassLoaderForPath p Path null false enumeration c getResources <STRING> IOException e BuildException <STRING> int count <INT> enumeration hasMoreElements list list <STRING> enumeration nextElement count assertTrue <STRING> count <STRING> list count <INT>
public void testGetExecutableNetware Os isName <STRING> assertEquals <STRING> JavaEnvUtils getJreExecutable <STRING> assertEquals <STRING> JavaEnvUtils getJdkExecutable <STRING> assertEquals <STRING> JavaEnvUtils getJreExecutable <STRING> assertEquals <STRING> JavaEnvUtils getJdkExecutable <STRING>
public void testGetExecutableWindows Os isFamily <STRING> String javaHome FILE_UTILS normalize System getProperty <STRING> getAbsolutePath String j JavaEnvUtils getJreExecutable <STRING> assertTrue j endsWith <STRING> assertTrue j <STRING> File j isAbsolute assertTrue j <STRING> j startsWith javaHome AssertionFailedError e assertEquals <STRING> j j JavaEnvUtils getJdkExecutable <STRING> assertTrue j endsWith <STRING> assertTrue j <STRING> File j isAbsolute String javaHomeParent FILE_UTILS normalize javaHome <STRING> getAbsolutePath assertTrue j <STRING> j startsWith javaHomeParent assertTrue j <STRING> j startsWith javaHome AssertionFailedError e assertEquals <STRING> j assertEquals <STRING> JavaEnvUtils getJreExecutable <STRING> assertEquals <STRING> JavaEnvUtils getJdkExecutable <STRING>
public void testGetExecutableMostPlatforms Os isName <STRING> Os isFamily <STRING> String javaHome FILE_UTILS normalize System getProperty <STRING> getAbsolutePath String extension Os isFamily <STRING> <STRING> <STRING> String j JavaEnvUtils getJreExecutable <STRING> extension equals <STRING> assertTrue j endsWith extension assertTrue j <STRING> File j isAbsolute assertTrue j <STRING> j startsWith javaHome j JavaEnvUtils getJdkExecutable <STRING> extension equals <STRING> assertTrue j endsWith extension assertTrue j <STRING> File j isAbsolute String javaHomeParent FILE_UTILS normalize javaHome <STRING> getAbsolutePath assertTrue j <STRING> j startsWith javaHomeParent Os isFamily <STRING> assertTrue j <STRING> j startsWith javaHome assertTrue j <STRING> j startsWith javaHome assertEquals <STRING> extension JavaEnvUtils getJreExecutable <STRING> assertEquals <STRING> extension JavaEnvUtils getJdkExecutable <STRING>
public ResourceUtilsTest String name name taskINeedForLogging setProject Project
public void testNoDuplicates Resource r Resource <STRING> true <INT> false Resource toNew ResourceUtils selectOutOfDateSources taskINeedForLogging Resource r this this assertEquals <INT> toNew length
public void testNestedText XMLFragment x XMLFragment getProject getReference <STRING> assertNotNull x Node n x getFragment assertTrue <STRING> n hasAttributes NodeList nl n getChildNodes assertEquals <INT> nl getLength assertEquals Node TEXT_NODE nl item <INT> getNodeType assertEquals <STRING> nl item <INT> getNodeValue
public void testNestedChildren XMLFragment x XMLFragment getProject getReference <STRING> assertNotNull x Node n x getFragment assertTrue <STRING> n hasAttributes NodeList nl n getChildNodes assertEquals <INT> nl getLength assertEquals Node ELEMENT_NODE nl item <INT> getNodeType Element child1 Element nl item <INT> assertEquals <STRING> child1 getTagName assertTrue child1 hasAttributes NodeList nl2 child1 getChildNodes assertEquals <INT> nl2 getLength assertEquals Node TEXT_NODE nl2 item <INT> getNodeType assertEquals <STRING> nl2 item <INT> getNodeValue assertEquals Node ELEMENT_NODE nl item <INT> getNodeType Element child2 Element nl item <INT> assertEquals <STRING> child2 getTagName assertTrue child2 hasAttributes nl2 child2 getChildNodes assertEquals <INT> nl2 getLength assertEquals <STRING> child2 getAttribute <STRING> assertEquals Node ELEMENT_NODE nl item <INT> getNodeType Element child3 Element nl item <INT> assertEquals <STRING> child3 getTagName assertTrue child3 hasAttributes nl2 child3 getChildNodes assertEquals <INT> nl2 getLength assertEquals Node ELEMENT_NODE nl2 item <INT> getNodeType assertEquals <STRING> Element nl2 item <INT> getTagName
public void testMapping UnPackageNameMapper mapper UnPackageNameMapper mapper setFrom <STRING> mapper setTo <STRING> String file <STRING> String result mapper mapFileName file <INT> String expected fixupPath <STRING> assertEquals expected result
public void testSplit final String data <STRING> Vector res StringUtils split data <CHAR> assertEquals <INT> res size assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT>
public void testSplitLines final String data <STRING> Vector res StringUtils lineSplit data assertEquals <INT> res size assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT> assertEquals <STRING> res elementAt <INT>
private StringBuffer getFilledBuffer int size char ch StringBuffer buf StringBuffer size int i <INT> i size i buf append ch buf
public void testParseHumanSizes Exception final long KILOBYTE <INT> final long MEGABYTE KILOBYTE <INT> final long GIGABYTE MEGABYTE <INT> final long TERABYTE GIGABYTE <INT> final long PETABYTE TERABYTE <INT> assertEquals StringUtils parseHumanSizes <STRING> KILOBYTE assertEquals StringUtils parseHumanSizes <STRING> MEGABYTE assertEquals StringUtils parseHumanSizes <STRING> GIGABYTE assertEquals StringUtils parseHumanSizes <STRING> TERABYTE assertEquals StringUtils parseHumanSizes <STRING> PETABYTE assertEquals StringUtils parseHumanSizes <STRING> <INT>
public void testRemoveSuffix String prefix <STRING> String name <STRING> String suffix <STRING> String input prefix name suffix assertEquals <STRING> prefix name StringUtils removeSuffix input suffix assertEquals <STRING> prefix name suffix StringUtils removeSuffix input <STRING>
public void testRemovePrefix String prefix <STRING> String name <STRING> String suffix <STRING> String input prefix name suffix assertEquals <STRING> name suffix StringUtils removePrefix input prefix assertEquals <STRING> prefix name suffix StringUtils removePrefix input <STRING>
private void writeSingleBytes IOException byte b LINE getBytes int i <INT> i b length i stream write b i
public void testPreserve Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp Properties originalProps Properties originalProps load FileInputStream simple Properties tmpProps Properties tmpProps load FileInputStream tmp assertEquals <STRING> originalProps tmpProps String s readFile tmp assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT>
public void testEscaping Exception LayoutPreservingProperties lpf LayoutPreservingProperties lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue s indexOf <STRING> <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT>
public void testOverwrite Exception File unusual File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream unusual LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue s indexOf <STRING> <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT>
public void testStoreWithHeader Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit FileOutputStream fos FileOutputStream tmp lpf store fos <STRING> fos close String s readFile tmp assertTrue <STRING> s startsWith <STRING>
public void testClear Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis lpf clear File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT>
public void testRemove Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis lpf remove <STRING> File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT>
public void testRemoveWithComment Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf LayoutPreservingProperties lpf load fis lpf setRemoveComments true lpf remove <STRING> File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue <STRING> s indexOf <STRING> <INT> assertTrue <STRING> s indexOf <STRING> <INT>
public void testClone Exception File simple File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream simple LayoutPreservingProperties lpf1 LayoutPreservingProperties lpf1 load fis LayoutPreservingProperties lpf2 LayoutPreservingProperties lpf1 clone lpf2 setProperty <STRING> <STRING> lpf2 setProperty <STRING> <STRING> assertEquals <STRING> <INT> lpf1 size assertEquals <STRING> <INT> lpf2 size File tmp1 File createTempFile <STRING> <STRING> tmp1 deleteOnExit lpf1 saveAs tmp1 String s1 readFile tmp1 File tmp2 File createTempFile <STRING> <STRING> tmp2 deleteOnExit lpf2 saveAs tmp2 String s2 readFile tmp2 assertTrue <STRING> s1 indexOf <STRING> <INT> assertTrue <STRING> s1 indexOf <STRING> <INT> assertTrue <STRING> s2 indexOf <STRING> <INT> assertTrue <STRING> s2 indexOf <STRING> <INT>
public void testPreserveEscapeName Exception LayoutPreservingProperties lpf LayoutPreservingProperties File unusual File System getProperty <STRING> <STRING> FileInputStream fis FileInputStream unusual lpf load fis lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> lpf setProperty <STRING> <STRING> File tmp File createTempFile <STRING> <STRING> tmp deleteOnExit lpf saveAs tmp String s readFile tmp assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT> assertTrue s indexOf <STRING> <INT>
private String readFile File f IOException FileInputStream fis FileInputStream f InputStreamReader isr InputStreamReader fis String s FileUtils readFully isr isr close fis close s
public void testBasicSet Project p getProject executeTarget <STRING> FileSet resultFileSet FileSet p getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner p String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i assertEquals <STRING> <STRING> <INT> files size assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING>
public void testSmallSet Project p getProject executeTarget <STRING> FileSet resultFileSet FileSet p getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner p String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i assertEquals <STRING> <STRING> <INT> files size assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING>
public void testComboSet Project p getProject executeTarget <STRING> FileSet resultFileSet FileSet p getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner p String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i assertEquals <STRING> <STRING> <INT> files size assertTrue <STRING> files containsKey <STRING>
public void testMethodParam Project p getProject executeTarget <STRING> FileSet resultFileSet FileSet p getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner p String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i assertEquals <STRING> <STRING> <INT> files size assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING> assertTrue <STRING> files containsKey <STRING>
public void testMethodParamInner Project p getProject executeTarget <STRING> FileSet resultFileSet FileSet p getReference RESULT_FILESET DirectoryScanner scanner resultFileSet getDirectoryScanner p String scannedFiles scanner getIncludedFiles Hashtable files Hashtable int i <INT> i scannedFiles length i files put scannedFiles i scannedFiles i assertEquals <STRING> <STRING> <INT> files size assertTrue <STRING> File separator <STRING> files containsKey <STRING> File separator <STRING> assertTrue <STRING> File separator <STRING> files containsKey <STRING> File separator <STRING> assertTrue <STRING> File separator <STRING> files containsKey <STRING> File separator <STRING> assertTrue <STRING> File separator <STRING> files containsKey <STRING> File separator <STRING>
public void setUp project Project project init project setUserProperty <STRING> basedir getAbsolutePath
public void teststringoutput2 StringResource r StringResource <STRING> testoutput r fail <STRING> ImmutableResourceException e IOException e fail <STRING> e assertEquals <STRING> r getValue
public void testpropertyoutput2 getProject setNewProperty <STRING> <STRING> PropertyResource r PropertyResource getProject <STRING> testoutput r fail <STRING> ImmutableResourceException e IOException e fail <STRING> e assertPropertyEquals <STRING> <STRING>
public void testurloutput File f getProject resolveFile <STRING> FILE_UTILS createNewFile f testoutput URLResource f fail <STRING> UnknownServiceException e IOException e e printStackTrace System err fail <STRING> e f delete f deleteOnExit
public void testzipentryoutput Zip z Zip z setProject getProject Zip WhenEmpty create Zip WhenEmpty create setValue <STRING> z setWhenempty create z setBasedir basedir z setExcludes <STRING> File f getProject resolveFile <STRING> z setDestFile f z execute ZipResource r ZipResource r setZipfile f r setName <STRING> testoutputbe r fail <STRING> UnsupportedOperationException e f delete f deleteOnExit
public void testRecursive String result <STRING> String line <STRING> FilterSet fs FilterSet fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs setBeginToken <STRING> fs setEndToken <STRING> assertEquals result fs replaceTokens line
public void testInfinite String result <STRING> String line <STRING> FilterSet fs FilterSet fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs setBeginToken <STRING> fs setEndToken <STRING> assertEquals result fs replaceTokens line
public void testRecursionDisabled String result <STRING> String line <STRING> FilterSet fs FilterSet fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs addFilter <STRING> <STRING> fs setBeginToken <STRING> fs setEndToken <STRING> fs setRecurse false assertEquals result fs replaceTokens line
public void testNonInfiniteRecursiveMultipleOnSingleLine FilterSet filters FilterSet filters setBeginToken <STRING> filters setEndToken <STRING> filters addFilter <STRING> <STRING> filters addFilter <STRING> <STRING> filters addFilter <STRING> <STRING> filters addFilter <STRING> <STRING> String result <STRING> String line <STRING> assertEquals result filters replaceTokens line
public void testNestedFilterSets executeTarget <STRING> FilterSet fs FilterSet getProject getReference <STRING> Hashtable filters fs getFilterHash assertEquals <INT> filters size assertEquals <STRING> filters get <STRING> fs FilterSet getProject getReference <STRING> filters fs getFilterHash assertEquals <INT> filters size assertEquals <STRING> filters get <STRING> assertEquals <STRING> filters get <STRING> fs FilterSet getProject getReference <STRING> filters fs getFilterHash assertEquals <INT> filters size assertEquals <STRING> filters get <STRING> fs FilterSet getProject getReference <STRING> filters fs getFilterHash assertEquals <INT> filters size assertEquals <STRING> filters get <STRING>
private boolean compareFiles String name1 String name2 File file1 File System getProperty <STRING> name1 File file2 File System getProperty <STRING> name2 file1 exists file2 exists System out println <STRING> name1 <STRING> name2 false file1 length file2 length System out println <STRING> name1 <STRING> file1 length <STRING> name2 <STRING> file2 length <STRING> false byte buffer1 byte BUF_SIZE byte buffer2 byte BUF_SIZE FileInputStream fis1 FileInputStream file1 FileInputStream fis2 FileInputStream file2 int index <INT> int read <INT> read fis1 read buffer1 <INT> fis2 read buffer2 int i <INT> i read i index buffer1 i buffer2 i System out println <STRING> name1 <STRING> name2 <STRING> index false true IOException e System out println <STRING> name1 <STRING> name2 false
public final void testAttributes ZipFileSet f ZipFileSet getInstance f setSrc File <STRING> f setDir File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f ZipFileSet getInstance f setDir File <STRING> f setSrc File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f ZipFileSet getInstance f setSrc File <STRING> f setPrefix <STRING> f setFullpath <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f ZipFileSet getInstance f setSrc File <STRING> f setFullpath <STRING> f setPrefix <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f ZipFileSet getInstance f setRefid Reference getProject <STRING> f setSrc File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> <STRING> be getMessage f ZipFileSet getInstance f setSrc File <STRING> f setPrefix <STRING> f setFileMode <STRING> f setDirMode <STRING> getProject addReference <STRING> f ZipFileSet zid ZipFileSet getInstance zid setRefid Reference getProject <STRING> assertTrue <STRING> zid getSrc getProject equals f getSrc getProject assertTrue <STRING> f getPrefix getProject equals zid getPrefix getProject assertTrue <STRING> f getFileMode getProject zid getFileMode getProject assertTrue <STRING> f getDirMode getProject zid getDirMode getProject
public void testEmptyElementIfIsReference PatternSet p PatternSet p setIncludes <STRING> p setRefid Reference project <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p PatternSet p setRefid Reference project <STRING> p setIncludes <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p PatternSet p setRefid Reference project <STRING> p setIncludesfile File <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p setExcludes <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p setExcludesfile File <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p createInclude fail <STRING> BuildException be assertEquals <STRING> be getMessage p createExclude fail <STRING> BuildException be assertEquals <STRING> be getMessage p createIncludesFile fail <STRING> BuildException be assertEquals <STRING> be getMessage p createExcludesFile fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReferenceCheck PatternSet p PatternSet project addReference <STRING> p p setRefid Reference project <STRING> p getIncludePatterns project fail <STRING> BuildException be assertEquals <STRING> be getMessage p getExcludePatterns project fail <STRING> BuildException be assertEquals <STRING> be getMessage PatternSet p1 PatternSet project addReference <STRING> p1 p1 setRefid Reference project <STRING> PatternSet p2 PatternSet project addReference <STRING> p2 p2 setRefid Reference project <STRING> PatternSet p3 PatternSet project addReference <STRING> p3 p3 setRefid Reference project <STRING> p1 getIncludePatterns project fail <STRING> BuildException be assertEquals <STRING> be getMessage p1 getExcludePatterns project fail <STRING> BuildException be assertEquals <STRING> be getMessage p1 PatternSet project addReference <STRING> p1 p1 setRefid Reference project <STRING> p2 PatternSet project addReference <STRING> p2 p2 setRefid Reference project <STRING> p3 PatternSet project addReference <STRING> p3 p3 setIncludes <STRING> p3 createExclude setName <STRING> String i p1 getIncludePatterns project assertEquals <STRING> <INT> i length assertEquals <STRING> i <INT> i p3 getExcludePatterns project assertEquals <STRING> <INT> i length assertEquals <STRING> i <INT>
public void testNestedPatternset PatternSet p PatternSet p setIncludes <STRING> PatternSet nested PatternSet nested setExcludes <STRING> p addConfiguredPatternset nested String excludes p getExcludePatterns project String includes p getIncludePatterns project assertEquals <STRING> <STRING> includes <INT> assertEquals <STRING> <STRING> excludes <INT>
public void execute input null BuildException <STRING> output null BuildException <STRING> fileNameMapper null BuildException <STRING> String result fileNameMapper mapFileName input String flattened result null flattened NULL_MAPPER_RESULT StringBuffer b StringBuffer int i <INT> i result length i i <INT> b append <STRING> b append result i flattened b toString flattened equals output BuildException failMessage <STRING> <STRING> flattened <STRING> <STRING> output
public void testEmptyElementIfIsReference Mapper m Mapper project m setFrom <STRING> m setRefid Reference project <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage m Mapper project m setRefid Reference project <STRING> m setFrom <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage m Mapper project m setRefid Reference project <STRING> m setTo <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage Mapper MapperType mt Mapper MapperType mt setValue <STRING> m setType mt fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReferenceCheck Mapper m Mapper project project addReference <STRING> m m setRefid Reference project <STRING> m getImplementation fail <STRING> BuildException be assertEquals <STRING> be getMessage Mapper m1 Mapper project project addReference <STRING> m1 m1 setRefid Reference project <STRING> Mapper m2 Mapper project project addReference <STRING> m2 m2 setRefid Reference project <STRING> Mapper m3 Mapper project project addReference <STRING> m3 m3 setRefid Reference project <STRING> m1 getImplementation fail <STRING> BuildException be assertEquals <STRING> be getMessage m1 Mapper project project addReference <STRING> m1 m1 setRefid Reference project <STRING> m2 Mapper project project addReference <STRING> m2 m2 setRefid Reference project <STRING> m3 Mapper project project addReference <STRING> m3 Mapper MapperType mt Mapper MapperType mt setValue <STRING> m3 setType mt m3 setFrom <STRING> m3 setTo <STRING> FileNameMapper fmm m1 getImplementation assertTrue <STRING> fmm GlobPatternMapper String result fmm mapFileName <STRING> assertEquals <STRING> <INT> result length assertEquals <STRING> result <INT>
public void testNested Mapper mapper1 Mapper project Mapper MapperType mt Mapper MapperType mt setValue <STRING> mapper1 setType mt mapper1 setFrom <STRING> mapper1 setTo <STRING> FileNameMapper mapper2 FlatFileNameMapper FileNameMapper mapper3 MergingMapper mapper3 setTo <STRING> Mapper container Mapper project container addConfiguredMapper mapper1 container add mapper2 container add mapper3 FileNameMapper fileNameMapper container getImplementation String targets fileNameMapper mapFileName <STRING> assertNotNull <STRING> targets assertEquals <STRING> <INT> targets length List list Arrays asList targets assertTrue <STRING> list contains <STRING> assertTrue <STRING> list contains <STRING> assertTrue <STRING> list contains <STRING>
public void testChained FileNameMapper mapperAB GlobPatternMapper mapperAB setFrom <STRING> mapperAB setTo <STRING> FileNameMapper mapperBC GlobPatternMapper mapperBC setFrom <STRING> mapperBC setTo <STRING> Mapper mapperCX Mapper project FileNameMapper mapperDEF GlobPatternMapper mapperDEF setFrom <STRING> mapperDEF setTo <STRING> FileNameMapper mapperGHI GlobPatternMapper mapperGHI setFrom <STRING> mapperGHI setTo <STRING> mapperCX add mapperDEF mapperCX add mapperGHI Mapper chained Mapper project chained setClassname ChainedMapper getName chained add mapperAB chained add mapperBC chained addConfiguredMapper mapperCX FileNameMapper fileNameMapper chained getImplementation String targets fileNameMapper mapFileName <STRING> assertNotNull <STRING> targets assertEquals <STRING> <INT> targets length List list Arrays asList targets assertTrue <STRING> list contains <STRING> assertTrue <STRING> list contains <STRING>
public void testCopyTaskWithTwoFilesets TaskdefForCopyTest t TaskdefForCopyTest <STRING> t setUp t test1 t tearDown
public void testFileSetIsNoDirSet DirSet ds DirSet getInstance ds setProject getProject FileSet fs FileSet fs setProject getProject getProject addReference <STRING> fs ds setRefid Reference getProject <STRING> ds getDir getProject fail <STRING> BuildException e assertEquals <STRING> e getMessage ds DirSet getInstance ds setProject getProject getProject addReference <STRING> ds fs setRefid Reference getProject <STRING> fs getDir getProject fail <STRING> BuildException e assertEquals <STRING> e getMessage
public void testToString Exception File tmp File createTempFile <STRING> <STRING> tmp delete File a File tmp <STRING> a mkdirs File b File tmp <STRING> File bc File b <STRING> bc mkdirs FileOutputStream File a <STRING> close FileOutputStream File b <STRING> close FileOutputStream File bc <STRING> close DirSet ds DirSet ds setProject getProject ds setDir tmp ds setIncludes <STRING> assertEquals <STRING> File separator <STRING> ds toString File tmp <STRING> delete File tmp <STRING> delete File tmp <STRING> delete File tmp <STRING> delete File tmp <STRING> delete File tmp <STRING> delete tmp delete
public final void testAttributes TarFileSet f TarFileSet getInstance f setSrc File <STRING> f setDir File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f TarFileSet getInstance f setDir File <STRING> f setSrc File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f TarFileSet getInstance f setSrc File <STRING> f setPrefix <STRING> f setFullpath <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f TarFileSet getInstance f setSrc File <STRING> f setFullpath <STRING> f setPrefix <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> be getMessage f TarFileSet getInstance f setRefid Reference getProject <STRING> f setSrc File <STRING> fail <STRING> f getDataTypeName <STRING> BuildException be assertEquals <STRING> <STRING> be getMessage f TarFileSet getInstance f setSrc File <STRING> f setPrefix <STRING> f setFileMode <STRING> f setDirMode <STRING> getProject addReference <STRING> f TarFileSet zid TarFileSet getInstance zid setRefid Reference getProject <STRING> assertTrue <STRING> zid getSrc getProject equals f getSrc getProject assertTrue <STRING> f getPrefix getProject equals zid getPrefix getProject assertTrue <STRING> f getFileMode getProject zid getFileMode getProject assertTrue <STRING> f getDirMode getProject zid getDirMode getProject
public void setUp perms Permissions Permissions Permission perm Permissions Permission perm setActions <STRING> perm setName <STRING> perm setClass <STRING> perms addConfiguredGrant perm perm Permissions Permission perm setActions <STRING> perm setName <STRING> perm setClass <STRING> perms addConfiguredGrant perm perm Permissions Permission perm setActions <STRING> perm setName <STRING> perm setClass <STRING> perms addConfiguredGrant perm perm Permissions Permission perm setActions <STRING> perm setName <STRING> perm setClass <STRING> perms addConfiguredRevoke perm perm Permissions Permission perm setActions <STRING> perm setName <STRING> perm setClass <STRING> perms addConfiguredRevoke perm
public void testDefaultGranted perms setSecurityManager String s System getProperty <STRING> perms restoreSecurityManager
public void testGranted perms setSecurityManager String s System getProperty <STRING> System setProperty <STRING> s perms restoreSecurityManager
public void testGrantedAndRevoked perms setSecurityManager String s System getProperty <STRING> System setProperty <STRING> s fail <STRING> SecurityException e perms restoreSecurityManager
public void testDefaultRevoked perms setSecurityManager System getProperty <STRING> fail <STRING> SecurityException e perms restoreSecurityManager
public void testOther String ls System getProperty <STRING> perms setSecurityManager String s System setProperty <STRING> ls fail <STRING> SecurityException e perms restoreSecurityManager
public void testExit perms setSecurityManager System out println <STRING> System exit <INT> fail <STRING> ExitException e e getStatus <INT> fail <STRING> System out println <STRING> perms restoreSecurityManager
public void testEmptyElementIfIsReference FileList f FileList f setDir project resolveFile <STRING> f setRefid Reference getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage f FileList f setFiles <STRING> f setRefid Reference getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage f FileList f setRefid Reference getProject <STRING> f setFiles <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage f setDir project resolveFile <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReferenceCheck FileList f FileList project addReference <STRING> f f setRefid Reference getProject <STRING> f getDir project fail <STRING> BuildException be assertEquals <STRING> be getMessage f getFiles project fail <STRING> BuildException be assertEquals <STRING> be getMessage FileList f1 FileList project addReference <STRING> f1 f1 setRefid Reference getProject <STRING> FileList f2 FileList project addReference <STRING> f2 f2 setRefid Reference getProject <STRING> FileList f3 FileList project addReference <STRING> f3 f3 setRefid Reference getProject <STRING> f1 getDir project fail <STRING> BuildException be assertEquals <STRING> be getMessage f1 getFiles project fail <STRING> BuildException be assertEquals <STRING> be getMessage f1 FileList project addReference <STRING> f1 f1 setRefid Reference getProject <STRING> f2 FileList project addReference <STRING> f2 f2 setRefid Reference getProject <STRING> f3 FileList project addReference <STRING> f3 f3 setDir project resolveFile <STRING> File dir f1 getDir project assertEquals <STRING> dir project getBaseDir
public void testValidate TypeSelector s TypeSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> be1 getMessage
public void testSelectionBehaviour TypeSelector s String results TypeSelector FileType directory TypeSelector FileType directory setValue <STRING> TypeSelector FileType file TypeSelector FileType file setValue <STRING> makeBed s TypeSelector getInstance s setType directory results selectionString s assertEquals <STRING> results s TypeSelector getInstance s setType file results selectionString s assertEquals <STRING> results cleanupBed
public void testValidate DependSelector s DependSelector getInstance s createMapper s createMapper fail <STRING> BuildException be1 assertEquals <STRING> be1 getMessage s DependSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be2 assertEquals <STRING> be2 getMessage
public void testSelectionBehaviour DependSelector s String results File subdir Mapper m Mapper MapperType identity Mapper MapperType identity setValue <STRING> Mapper MapperType glob Mapper MapperType glob setValue <STRING> Mapper MapperType merge Mapper MapperType merge setValue <STRING> makeBed s DependSelector getInstance s setTargetdir beddir results selectionString s assertEquals <STRING> results s DependSelector getInstance s setTargetdir beddir m s createMapper m setType identity results selectionString s assertEquals <STRING> results s DependSelector getInstance s setTargetdir beddir m s createMapper m setType merge m setTo <STRING> results selectionString s assertEquals <STRING> results substring <INT> <INT> s DependSelector getInstance s setTargetdir beddir m s createMapper m setType merge m setTo <STRING> results selectionString s assertEquals <STRING> results s DependSelector getInstance subdir File <STRING> s setTargetdir subdir m s createMapper m setType glob m setFrom <STRING> m setTo <STRING> results selectionString s assertEquals <STRING> results s DependSelector getInstance subdir File beddir <STRING> s setTargetdir subdir m s createMapper m setType glob m setFrom <STRING> m setTo <STRING> results selectionString s assertEquals <STRING> results makeMirror s DependSelector getInstance File testdir getProject resolveFile <STRING> s setTargetdir testdir results selectionString s assertEquals <STRING> results s DependSelector getInstance testdir getProject resolveFile <STRING> s setTargetdir testdir m s createMapper m setType glob m setFrom <STRING> m setTo <STRING> results mirrorSelectionString s assertEquals <STRING> results results selectionString s assertEquals <STRING> results cleanupMirror cleanupBed
public void testValidate DateSelector s DateSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> <STRING> be1 getMessage s DateSelector getInstance s setDatetime <STRING> s isSelected basedir filenames <INT> files <INT> fail <STRING> <STRING> BuildException be2 assertEquals <STRING> <STRING> <STRING> be2 getMessage s DateSelector getInstance s setDatetime <STRING> s isSelected basedir filenames <INT> files <INT> fail <STRING> <STRING> BuildException be3 assertEquals <STRING> <STRING> <STRING> be3 getMessage s DateSelector getInstance Parameter param Parameter param setName <STRING> param setValue <STRING> Parameter params Parameter <INT> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be4 assertEquals <STRING> be4 getMessage s DateSelector getInstance param Parameter param setName <STRING> param setValue <STRING> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be5 assertEquals <STRING> be5 getMessage s DateSelector getInstance param Parameter param setName <STRING> param setValue <STRING> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be6 assertEquals <STRING> be6 getMessage
public void testSelectionBehaviour DateSelector s String results DateSelector TimeComparisons before DateSelector TimeComparisons before setValue <STRING> DateSelector TimeComparisons equal DateSelector TimeComparisons equal setValue <STRING> DateSelector TimeComparisons after DateSelector TimeComparisons after setValue <STRING> makeBed s DateSelector getInstance s setDatetime <STRING> s setWhen before results selectionString s assertEquals <STRING> results s DateSelector getInstance s setDatetime <STRING> s setWhen before s setCheckdirs true results selectionString s assertEquals <STRING> results s DateSelector getInstance s setDatetime <STRING> s setWhen after results selectionString s assertEquals <STRING> results s DateSelector getInstance s setDatetime <STRING> s setWhen before results selectionString s assertEquals <STRING> results s DateSelector getInstance s setDatetime <STRING> long milliseconds s getMillis s setWhen equal results selectionString s assertEquals <STRING> results s DateSelector getInstance s setMillis milliseconds s setWhen equal results selectionString s assertEquals <STRING> results s DateSelector getInstance s setDatetime <STRING> s setWhen after results selectionString s assertEquals <STRING> results s DateSelector getInstance Parameter param1 Parameter Parameter param2 Parameter param1 setName <STRING> param1 setValue <STRING> param2 setName <STRING> param2 setValue <STRING> Parameter params param1 param2 s setParameters params results selectionString s assertEquals <STRING> results makeMirror s DateSelector getInstance long testtime mirrorfiles <INT> lastModified s setMillis testtime s setWhen after s setGranularity <INT> results mirrorSelectionString s assertEquals <STRING> results s DateSelector getInstance testtime mirrorfiles <INT> lastModified s setMillis testtime s setWhen before s setGranularity <INT> results mirrorSelectionString s assertEquals <STRING> results cleanupMirror cleanupBed
public void testValidate PresentSelector s PresentSelector getInstance s createMapper s createMapper fail <STRING> BuildException be1 assertEquals <STRING> be1 getMessage s PresentSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be2 assertEquals <STRING> be2 getMessage
public void testSelectionBehaviour PresentSelector s String results Mapper m Mapper MapperType identity Mapper MapperType identity setValue <STRING> Mapper MapperType glob Mapper MapperType glob setValue <STRING> Mapper MapperType merge Mapper MapperType merge setValue <STRING> Mapper MapperType flatten Mapper MapperType flatten setValue <STRING> makeBed s PresentSelector getInstance s setTargetdir beddir results selectionString s assertEquals <STRING> results s PresentSelector getInstance s setTargetdir beddir m s createMapper m setType identity results selectionString s assertEquals <STRING> results s PresentSelector getInstance File subdir File System getProperty <STRING> <STRING> s setTargetdir subdir m s createMapper m setType flatten results selectionString s assertEquals <STRING> results s PresentSelector getInstance s setTargetdir beddir m s createMapper m setType merge m setTo <STRING> results selectionString s assertEquals <STRING> results s PresentSelector getInstance subdir File beddir <STRING> s setTargetdir subdir m s createMapper m setType glob m setFrom <STRING> m setTo <STRING> results selectionString s assertEquals <STRING> results makeMirror s PresentSelector getInstance subdir getProject resolveFile <STRING> s setTargetdir subdir results mirrorSelectionString s assertEquals <STRING> results results selectionString s assertEquals <STRING> results cleanupMirror cleanupBed
public void put Object key Object value log <STRING> key <STRING> value <STRING> saved false
private void log String msg debug System out println this msg
public void testValidate SizeSelector s SizeSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> <STRING> be1 getMessage s SizeSelector getInstance s setValue <INT> s isSelected basedir filenames <INT> files <INT> fail <STRING> <STRING> BuildException be2 assertEquals <STRING> <STRING> be2 getMessage s SizeSelector getInstance Parameter param Parameter param setName <STRING> param setValue <STRING> Parameter params param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be3 assertEquals <STRING> be3 getMessage s SizeSelector getInstance param Parameter param setName <STRING> param setValue <STRING> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be4 assertEquals <STRING> be4 getMessage s SizeSelector getInstance Parameter param1 Parameter Parameter param2 Parameter param1 setName <STRING> param1 setValue <STRING> param2 setName <STRING> param2 setValue <STRING> params Parameter <INT> params <INT> param1 params <INT> param2 s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be5 assertEquals <STRING> be5 getMessage
public void testSelectionBehaviour SizeSelector s String results SizeSelector ByteUnits kilo SizeSelector ByteUnits kilo setValue <STRING> SizeSelector ByteUnits kibi SizeSelector ByteUnits kibi setValue <STRING> SizeSelector ByteUnits tibi SizeSelector ByteUnits tibi setValue <STRING> SizeSelector SizeComparisons less SizeSelector SizeComparisons less setValue <STRING> SizeSelector SizeComparisons equal SizeSelector SizeComparisons equal setValue <STRING> SizeSelector SizeComparisons more SizeSelector SizeComparisons more setValue <STRING> makeBed s SizeSelector getInstance s setValue <INT> s setWhen less results selectionString s assertEquals <STRING> results s SizeSelector getInstance s setValue <INT> s setWhen more results selectionString s assertEquals <STRING> results s SizeSelector getInstance s setValue <INT> s setWhen equal results selectionString s assertEquals <STRING> results s SizeSelector getInstance s setValue <INT> s setWhen more s setUnits kilo results selectionString s assertEquals <STRING> results s SizeSelector getInstance s setValue <INT> s setWhen more s setUnits kibi results selectionString s assertEquals <STRING> results s SizeSelector getInstance s setValue <INT> s setWhen more s setUnits tibi results selectionString s assertEquals <STRING> results s SizeSelector getInstance Parameter param1 Parameter Parameter param2 Parameter Parameter param3 Parameter param1 setName <STRING> param1 setValue <STRING> param2 setName <STRING> param2 setValue <STRING> param3 setName <STRING> param3 setValue <STRING> Parameter params param1 param2 param3 s setParameters params results selectionString s assertEquals <STRING> results cleanupBed
public void testParameterParsingLowerCaseTurkish Locale l Locale getDefault Locale setDefault Locale <STRING> testCaseInsensitiveParameterParsing <STRING> Locale setDefault l
public void testParameterParsingUpperCaseTurkish Locale l Locale getDefault Locale setDefault Locale <STRING> testCaseInsensitiveParameterParsing <STRING> Locale setDefault l
private void testCaseInsensitiveParameterParsing String name SizeSelector s SizeSelector Parameter p Parameter p setName name p setValue <STRING> s setParameters Parameter p fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testValidate ContainsSelector s ContainsSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> be1 getMessage s ContainsSelector getInstance Parameter param Parameter param setName <STRING> param setValue <STRING> Parameter params param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be2 assertEquals <STRING> be2 getMessage
public void testSelectionBehaviour ContainsSelector s String results makeBed s ContainsSelector getInstance s setText <STRING> results selectionString s assertEquals <STRING> results s ContainsSelector getInstance s setText <STRING> results selectionString s assertEquals <STRING> results s ContainsSelector getInstance s setText <STRING> s setCasesensitive true results selectionString s assertEquals <STRING> results s ContainsSelector getInstance s setText <STRING> s setCasesensitive false results selectionString s assertEquals <STRING> results s ContainsSelector getInstance s setText <STRING> s setIgnorewhitespace true results selectionString s assertEquals <STRING> results s ContainsSelector getInstance s setText <STRING> s setIgnorewhitespace true results selectionString s assertEquals <STRING> results cleanupBed
public void testContainsRegexp TaskdefForRegexpTest MyTask TaskdefForRegexpTest <STRING> MyTask setUp MyTask test MyTask tearDown
public void testValidate FilenameSelector s FilenameSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> be1 getMessage s FilenameSelector getInstance Parameter param Parameter param setName <STRING> param setValue <STRING> Parameter params param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be2 assertEquals <STRING> be2 getMessage
public void testSelectionBehaviour FilenameSelector s String results makeBed s FilenameSelector getInstance s setName <STRING> results selectionString s assertEquals <STRING> results s FilenameSelector getInstance s setName <STRING> results selectionString s s FilenameSelector getInstance s setName <STRING> s setNegate true results selectionString s assertEquals <STRING> results s FilenameSelector getInstance s setName <STRING> s setCasesensitive false results selectionString s assertEquals <STRING> results s FilenameSelector getInstance Parameter param1 Parameter param1 setName <STRING> param1 setValue <STRING> Parameter params param1 s setParameters params results selectionString s assertEquals <STRING> results cleanupBed
public void testTokenization TokenizedPattern pat TokenizedPattern DOT_SVN_PATTERN assertEquals <INT> pat depth assertEquals DOT_SVN_PATTERN pat getPattern assertTrue pat containsPattern SelectorUtils DEEP_TREE_MATCH assertTrue pat containsPattern <STRING>
public void testWithoutLastToken assertEquals SelectorUtils DEEP_TREE_MATCH File separatorChar <STRING> File separator TokenizedPattern DOT_SVN_PATTERN withoutLastToken getPattern
public void testMatchPath File f File <STRING> TokenizedPath p TokenizedPath f getAbsolutePath assertTrue TokenizedPattern DOT_SVN_PATTERN matchPath p true assertTrue TokenizedPattern DOT_SVN_PATTERN withoutLastToken matchPath p true
public void testValidateWrongCache String name <STRING> ModifiedSelector CacheName cacheName ModifiedSelector CacheName cacheName setValue name fail <STRING> BuildException be assertEquals name <STRING> be getMessage
public void testValidateWrongAlgorithm String name <STRING> ModifiedSelector AlgorithmName algoName ModifiedSelector AlgorithmName algoName setValue name fail <STRING> BuildException be assertEquals name <STRING> be getMessage
public void testValidateWrongComparator String name <STRING> ModifiedSelector ComparatorName compName ModifiedSelector ComparatorName compName setValue name fail <STRING> BuildException be assertEquals name <STRING> be getMessage
public void testIllegalCustomAlgorithm getAlgoName <STRING> fail <STRING> Exception e assertTrue <STRING> e getClass getName e BuildException assertEquals <STRING> <STRING> e getMessage
public void testNonExistentCustomAlgorithm boolean noExcThrown false getAlgoName <STRING> noExcThrown true Exception e noExcThrown fail <STRING> assertTrue <STRING> e getClass getName e BuildException assertEquals <STRING> <STRING> e getMessage
public void testCustomClasses BFT bft BFT bft setUp bft doTarget <STRING> String fsFullValue bft getProperty <STRING> String fsModValue bft getProperty <STRING> assertNotNull <STRING> fsFullValue assertTrue <STRING> <STRING> equals fsFullValue assertTrue <STRING> fsFullValue indexOf <STRING> <INT> assertNotNull <STRING> fsModValue assertTrue <STRING> <STRING> equals fsModValue bft doTarget <STRING> bft deletePropertiesfile bft tearDown
public void doDelayUpdateTest int kind String kinds <STRING> <STRING> <STRING> MockProject project MockProject File base File <STRING> File file1 File <STRING> File file2 File <STRING> ModifiedSelector sel ModifiedSelector sel setProject project sel setUpdate true sel setDelayUpdate true sel setClassLoader this getClass getClassLoader sel addClasspath testclasses sel setAlgorithmClass <STRING> sel setCacheClass <STRING> sel configure MockCache cache MockCache sel getCache assertFalse <STRING> cache saved sel isSelected base <STRING> file1 assertFalse <STRING> cache saved sel isSelected base <STRING> file2 assertFalse <STRING> cache saved kind <INT> project fireTaskFinished break <INT> project fireTargetFinished break <INT> project fireBuildFinished break assertTrue <STRING> kinds kind <INT> <STRING> cache saved
private String getAlgoName String classname ModifiedSelector sel ModifiedSelector sel addClasspath testclasses sel setAlgorithmClass classname sel validate String s1 sel toString int posStart s1 indexOf <STRING> <INT> int posEnd s1 indexOf <STRING> String algo s1 substring posStart posEnd algo startsWith <STRING> algo algo substring <INT> algo endsWith <STRING> algo algo substring <INT> algo length <INT> algo
public void testPropertyfileCache PropertiesfileCache cache PropertiesfileCache File cachefile File <STRING> cache setCachefile cachefile doTest cache assertFalse <STRING> cachefile exists
public void testCreatePropertiesCacheDirect File cachefile File basedir <STRING> PropertiesfileCache cache PropertiesfileCache cache setCachefile cachefile cache put <STRING> <STRING> cache save assertTrue <STRING> cachefile exists cache delete assertFalse <STRING> cachefile exists
public void testCreatePropertiesCacheViaModifiedSelector File cachefile File basedir <STRING> makeBed ModifiedSelector s ModifiedSelector getSelector s setDelayUpdate false s addParam <STRING> cachefile ModifiedSelector CacheName cacheName ModifiedSelector CacheName cacheName setValue <STRING> s setCache cacheName s setUpdate true selectionString s assertTrue <STRING> cachefile exists cleanupBed cachefile null cachefile delete
public void testCreatePropertiesCacheViaCustomSelector File cachefile FILE_UTILS createTempFile <STRING> <STRING> null false false makeBed ExtendSelector s ExtendSelector s setClassname <STRING> s addParam createParam <STRING> <STRING> s addParam createParam <STRING> cachefile getAbsolutePath s addParam createParam <STRING> <STRING> selectionString s assertTrue <STRING> cachefile exists cleanupBed cachefile null cachefile delete
protected void doTest Cache cache assertTrue <STRING> cache isValid String key1 <STRING> String value1 <STRING> String key2 <STRING> String value2 <STRING> Iterator it1 cache iterator assertFalse <STRING> it1 hasNext cache put key1 value1 cache put key2 value2 assertEquals <STRING> value1 cache get key1 assertEquals <STRING> value2 cache get key2 Iterator it2 cache iterator Object returned it2 next boolean ok key1 equals returned key2 equals returned String msg <STRING> <STRING> key1 equals returned <STRING> key2 equals returned <STRING> returned <STRING> ok assertTrue msg ok cache delete Iterator it3 cache iterator assertFalse <STRING> it3 hasNext
protected void doTest Algorithm algo assertTrue <STRING> algo isValid makeBed int i <INT> i files length i File file files i file isFile String hash1 algo getValue file String hash2 algo getValue file String hash3 algo getValue file String hash4 algo getValue file String hash5 algo getValue File file getAbsolutePath assertNotNull <STRING> file getAbsolutePath hash1 assertNotNull <STRING> file getAbsolutePath hash2 assertNotNull <STRING> file getAbsolutePath hash3 assertNotNull <STRING> file getAbsolutePath hash4 assertNotNull <STRING> file getAbsolutePath hash5 assertEquals <STRING> file getAbsolutePath hash1 hash2 assertEquals <STRING> file getAbsolutePath hash1 hash3 assertEquals <STRING> file getAbsolutePath hash1 hash4 assertEquals <STRING> file getAbsolutePath hash1 hash5 cleanupBed
public void testEqualComparatorViaSelector ModifiedSelector s ModifiedSelector getSelector ModifiedSelector ComparatorName compName ModifiedSelector ComparatorName compName setValue <STRING> s setComparator compName performTests s <STRING> s getCache delete
public void _testRuleComparatorViaSelector ModifiedSelector s ModifiedSelector getSelector ModifiedSelector ComparatorName compName ModifiedSelector ComparatorName compName setValue <STRING> s setComparator compName performTests s <STRING> s getCache delete
protected void doTest Comparator comp Object o1 String <STRING> Object o2 String <STRING> Object o3 String <STRING> assertTrue <STRING> comp compare o1 o2 <INT> assertTrue <STRING> comp compare o1 o3 <INT> assertTrue <STRING> comp compare o2 o3 <INT>
public void testSeldirs ModifiedSelector s ModifiedSelector getSelector makeBed StringBuffer sbTrue StringBuffer StringBuffer sbFalse StringBuffer int i <INT> i filenames length i files i isDirectory sbTrue append <STRING> sbFalse append <STRING> sbTrue append <STRING> sbFalse append <STRING> s setSeldirs true performTests s sbTrue toString s getCache delete s setSeldirs false performTests s sbFalse toString s getCache delete cleanupBed s null s getCache delete
public void testScenario1 BFT bft null ModifiedSelector s null makeBed String results null s ModifiedSelector getSelector performTests s <STRING> performTests s <STRING> String f2name <STRING> String f3name <STRING> String f4name <STRING> bft BFT bft writeProperties <STRING> f2name bft writeProperties <STRING> f3name bft writeProperties <STRING> f4name bft doTarget <STRING> results selectionString s StringBuffer expected StringBuffer int i <INT> i filenames length i String ch <STRING> files i isDirectory ch <STRING> filenames i equalsIgnoreCase f3name ch <STRING> filenames i equalsIgnoreCase f4name ch <STRING> expected append ch assertEquals <STRING> resolve diff expected toString results expected toString results cleanupBed s null s getCache delete bft null bft deletePropertiesfile
public void _testScenario2 ExtendSelector s ExtendSelector BFT bft BFT String cachefile System getProperty <STRING> <STRING> makeBed s setClassname <STRING> s addParam createParam <STRING> cachefile s addParam createParam <STRING> <STRING> s addParam createParam <STRING> <STRING> s addParam createParam <STRING> <STRING> s addParam createParam <STRING> <STRING> s addParam createParam <STRING> <STRING> performTests s <STRING> performTests s <STRING> String f2name <STRING> String f3name <STRING> String f4name <STRING> bft writeProperties <STRING> f2name bft writeProperties <STRING> f3name bft writeProperties <STRING> f4name bft doTarget <STRING> String results selectionString s StringBuffer expected StringBuffer int i <INT> i filenames length i String ch <STRING> files i isDirectory ch <STRING> filenames i equalsIgnoreCase f3name ch <STRING> filenames i equalsIgnoreCase f4name ch <STRING> expected append ch assertEquals <STRING> resolve diff expected toString results expected toString results cleanupBed java io File cachefile delete bft null bft deletePropertiesfile
public void doScenarioTest String target String cachefilename BFT bft BFT bft setUp File cachefile File basedir cachefilename bft doTarget <STRING> bft doTarget target File to1 File basedir <STRING> File to2 File basedir <STRING> File to3 File basedir <STRING> assertTrue <STRING> cachefile exists assertTrue <STRING> to1 list length <INT> assertTrue <STRING> to2 list length <INT> assertTrue <STRING> to3 list length <INT> bft doTarget <STRING> bft deletePropertiesfile bft tearDown cachefile delete
public void testValidate DepthSelector s DepthSelector getInstance s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be1 assertEquals <STRING> <STRING> be1 getMessage s DepthSelector getInstance s setMin <INT> s setMax <INT> s isSelected basedir filenames <INT> files <INT> fail <STRING> <STRING> BuildException be2 assertEquals <STRING> be2 getMessage s DepthSelector getInstance Parameter param Parameter param setName <STRING> param setValue <STRING> Parameter params Parameter <INT> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be3 assertEquals <STRING> be3 getMessage s DepthSelector getInstance param Parameter param setName <STRING> param setValue <STRING> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be4 assertEquals <STRING> be4 getMessage s DepthSelector getInstance param Parameter param setName <STRING> param setValue <STRING> params <INT> param s setParameters params s isSelected basedir filenames <INT> files <INT> fail <STRING> BuildException be5 assertEquals <STRING> be5 getMessage
public void testSelectionBehaviour DepthSelector s String results makeBed s DepthSelector getInstance s setMin <INT> s setMax <INT> results selectionString s assertEquals <STRING> results s DepthSelector getInstance s setMin <INT> results selectionString s assertEquals <STRING> results s DepthSelector getInstance s setMin <INT> results selectionString s assertEquals <STRING> results s DepthSelector getInstance s setMax <INT> results selectionString s assertEquals <STRING> results s DepthSelector getInstance s setMin <INT> s setMax <INT> results selectionString s assertEquals <STRING> results cleanupBed
public void testEmptyCatalog InputSource result catalog resolveEntity <STRING> <STRING> assertNull <STRING> result Exception e fail <STRING> e toString Source result catalog resolve <STRING> null String expected toURLString File project getBaseDir <STRING> String resultStr fileURLPartWithoutLeadingSlashes SAXSource result assertTrue <STRING> expected <STRING> resultStr expected endsWith resultStr Exception e fail <STRING> e toString
private static String fileURLPartWithoutLeadingSlashes SAXSource result MalformedURLException String resultStr URL result getInputSource getSystemId getFile resultStr startsWith <STRING> resultStr resultStr substring <INT> resultStr
public void testNonExistentEntry ResourceLocation dtd ResourceLocation dtd setPublicId <STRING> dtd setLocation <STRING> InputSource result catalog resolveEntity <STRING> <STRING> assertNull <STRING> result Exception e fail <STRING> e toString Source result catalog resolve <STRING> null String expected toURLString File project getBaseDir toURL <STRING> String resultStr fileURLPartWithoutLeadingSlashes SAXSource result assertTrue <STRING> expected <STRING> resultStr expected endsWith resultStr Exception e fail <STRING> e toString
public void testEmptyElementIfIsReference ResourceLocation dtd ResourceLocation dtd setPublicId <STRING> dtd setLocation <STRING> catalog addDTD dtd project addReference <STRING> catalog catalog setRefid Reference project <STRING> fail <STRING> BuildException be assertEquals <STRING> <STRING> be getMessage XMLCatalog catalog2 newCatalog catalog2 setRefid Reference project <STRING> catalog2 addConfiguredXMLCatalog catalog fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReferenceCheck project addReference <STRING> catalog catalog setRefid Reference project <STRING> InputSource result catalog resolveEntity <STRING> <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage Exception e fail <STRING> e toString XMLCatalog catalog1 newCatalog project addReference <STRING> catalog1 XMLCatalog catalog2 newCatalog project addReference <STRING> catalog2 XMLCatalog catalog3 newCatalog project addReference <STRING> catalog3 catalog3 setRefid Reference project <STRING> catalog2 setRefid Reference project <STRING> catalog1 setRefid Reference project <STRING> InputSource result catalog1 resolveEntity <STRING> <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage Exception e fail <STRING> e toString
public void testAbsolutePath ResourceLocation dtd ResourceLocation dtd setPublicId <STRING> String sysid System getProperty <STRING> File separator <STRING> dtd setLocation sysid catalog addDTD dtd File dtdFile project resolveFile sysid InputSource result catalog resolveEntity <STRING> <STRING> assertNotNull result assertEquals toURLString dtdFile result getSystemId Exception e fail <STRING> e toString
public void testSimpleEntry ResourceLocation dtd ResourceLocation dtd setPublicId <STRING> String sysid <STRING> dtd setLocation sysid catalog addDTD dtd File dtdFile project resolveFile sysid InputSource result catalog resolveEntity <STRING> <STRING> assertNotNull result assertEquals toURLString dtdFile result getSystemId Exception e fail <STRING> e toString
public void testEntryReference String publicId <STRING> String sysid <STRING> ResourceLocation dtd ResourceLocation dtd setPublicId publicId dtd setLocation sysid catalog addDTD dtd File dtdFile project resolveFile sysid String uri <STRING> String uriLoc <STRING> ResourceLocation entity ResourceLocation entity setPublicId uri entity setLocation uriLoc catalog addEntity entity File xmlFile project resolveFile uriLoc project addReference <STRING> catalog XMLCatalog catalog1 newCatalog project addReference <STRING> catalog1 XMLCatalog catalog2 newCatalog project addReference <STRING> catalog1 catalog1 setRefid Reference project <STRING> catalog2 setRefid Reference project <STRING> InputSource result catalog2 resolveEntity publicId <STRING> assertNotNull result assertEquals toURLString dtdFile result getSystemId Exception e fail <STRING> e toString Source result catalog resolve uri null assertNotNull result assertEquals toURLString xmlFile result getSystemId Exception e fail <STRING> e toString
public void testNestedCatalog String publicId <STRING> String dtdLoc <STRING> ResourceLocation dtd ResourceLocation dtd setPublicId publicId dtd setLocation dtdLoc catalog addDTD dtd File dtdFile project resolveFile dtdLoc String uri <STRING> String uriLoc <STRING> ResourceLocation entity ResourceLocation entity setPublicId uri entity setLocation uriLoc catalog addEntity entity File xmlFile project resolveFile uriLoc XMLCatalog catalog1 newCatalog catalog1 addConfiguredXMLCatalog catalog InputSource result catalog1 resolveEntity publicId <STRING> assertNotNull result assertEquals toURLString dtdFile result getSystemId Exception e fail <STRING> e toString Source result catalog resolve uri null assertNotNull result assertEquals toURLString xmlFile result getSystemId Exception e fail <STRING> e toString
public void testResolverBase String uri <STRING> String uriLoc <STRING> String base null base toURLString project getBaseDir <STRING> MalformedURLException ex fail ex toString ResourceLocation entity ResourceLocation entity setPublicId uri entity setLocation uriLoc catalog addEntity entity File xmlFile project resolveFile <STRING> uriLoc Source result catalog resolve uri base assertNotNull result assertEquals toURLString xmlFile result getSystemId Exception e fail <STRING> e toString
public void testClasspath String publicId <STRING> String dtdLoc <STRING> String path1 project getBaseDir toString <STRING> ResourceLocation dtd ResourceLocation dtd setPublicId publicId dtd setLocation dtdLoc catalog addDTD dtd File dtdFile project resolveFile <STRING> dtdLoc String uri <STRING> String uriLoc <STRING> String path2 project getBaseDir toString <STRING> ResourceLocation entity ResourceLocation entity setPublicId uri entity setLocation uriLoc catalog addEntity entity File xmlFile project resolveFile <STRING> uriLoc Path aPath Path project path1 aPath append Path project path2 catalog setClasspath aPath InputSource result catalog resolveEntity publicId <STRING> assertNotNull result String resultStr URL result getSystemId getFile assertTrue toURLString dtdFile endsWith resultStr Exception e fail <STRING> e toString Source result catalog resolve uri null assertNotNull result String resultStr URL result getSystemId getFile assertTrue toURLString xmlFile endsWith resultStr Exception e fail <STRING> e toString
public void setUp project Project project setBasedir System getProperty <STRING> project setProperty <STRING> <STRING> cloneVm System getProperty <STRING> cloneVm null System setProperty <STRING> <STRING>
public void testGetCommandline Exception CommandlineJava c CommandlineJava c createArgument setValue <STRING> c setClassname <STRING> c createVmArgument setValue <STRING> String s c getCommandline assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> CommandlineJava c2 CommandlineJava c clone NullPointerException ex fail <STRING> c createClasspath project setLocation project resolveFile <STRING> c createClasspath project setLocation project resolveFile System getProperty MagicNames ANT_HOME <STRING> s c getCommandline assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> assertTrue <STRING> s <INT> indexOf <STRING> java io File pathSeparator <INT> assertTrue <STRING> s <INT> endsWith <STRING> assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT>
public void testJarOption Exception CommandlineJava c CommandlineJava c createArgument setValue <STRING> c setJar <STRING> c createVmArgument setValue <STRING> c createVmArgument setValue <STRING> String s c getCommandline assertEquals <STRING> s <INT> assertEquals <STRING> s <INT> assertEquals <STRING> s <INT> assertEquals <STRING> s <INT> assertEquals <STRING> s <INT>
public void testSysproperties String currentClasspath System getProperty <STRING> assertNotNull currentClasspath assertNull System getProperty <STRING> CommandlineJava c CommandlineJava Environment Variable v Environment Variable v setKey <STRING> v setValue <STRING> c addSysproperty v project setProperty <STRING> <STRING> PropertySet ps PropertySet ps setProject project ps appendName <STRING> c addSyspropertyset ps c setSystemProperties String newClasspath System getProperty <STRING> assertNotNull newClasspath assertEquals currentClasspath newClasspath assertNotNull System getProperty <STRING> assertEquals <STRING> System getProperty <STRING> assertTrue System getProperties containsKey <STRING> assertNotNull System getProperty <STRING> assertEquals <STRING> System getProperty <STRING> c restoreSystemProperties assertNull System getProperty <STRING> assertNull System getProperty <STRING>
public void testAssertions Exception CommandlineJava c CommandlineJava c createArgument setValue <STRING> c setClassname <STRING> c createVmArgument setValue <STRING> Assertions a Assertions a setProject project Assertions EnabledAssertion ea Assertions EnabledAssertion ea setClass <STRING> a addEnable ea c setAssertions a String expected String null <STRING> <STRING> <STRING> <STRING> int i <INT> i <INT> i String s c getCommandline assertEquals expected length s length int j <INT> j expected length j assertEquals expected j s j CommandlineJava c2 CommandlineJava c clone String s c2 getCommandline assertEquals expected length s length int j <INT> j expected length j assertEquals expected j s j
public void testConstructorUnixStyle Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length isUnixStyle assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> String base File File separator getAbsolutePath assertEquals base <STRING> l <INT> assertEquals base <STRING> l <INT>
public void testRelativePathUnixStyle project setBasedir File System getProperty <STRING> <STRING> getAbsolutePath Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length isUnixStyle assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> isNetWare assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING>
public void testConstructorWindowsStyle Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length isUnixStyle assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> String base File File separator getAbsolutePath assertEquals base <STRING> l <INT> assertEquals base <STRING> l <INT> p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US
public void testConstructorNetWareStyle Path p Path project <STRING> String l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> p Path project <STRING> l p list isUnixStyle assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> <INT> l length assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> l <INT> toLowerCase Locale US assertEquals <STRING> <INT> l length assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING> assertTrue <STRING> l <INT> endsWith <STRING>
public void testConstructorMixedStyle Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length isUnixStyle assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> String base File File separator getAbsolutePath assertEquals base <STRING> l <INT> assertEquals base <STRING> l <INT> assertEquals base <STRING> l <INT>
public void testSetLocation Path p Path project p setLocation File File separatorChar <STRING> String l p list isUnixStyle assertEquals <INT> l length assertEquals <STRING> l <INT> isNetWare assertEquals <INT> l length assertEquals <STRING> l <INT> assertEquals <INT> l length assertEquals <STRING> l <INT> substring <INT>
public void testAppending Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length p setLocation File <STRING> l p list assertEquals <STRING> <INT> l length p setPath <STRING> l p list assertEquals <STRING> <INT> l length p append Path project <STRING> l p list assertEquals <STRING> <INT> l length p createPath setLocation File <STRING> l p list assertEquals <STRING> <INT> l length
public void testEmpyPath Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length p setPath <STRING> l p list assertEquals <STRING> <INT> l length p append Path project l p list assertEquals <STRING> <INT> l length p createPath l p list assertEquals <STRING> <INT> l length
public void testUnique Path p Path project <STRING> String l p list assertEquals <STRING> <INT> l length String base File File separator getAbsolutePath p setLocation File base <STRING> l p list assertEquals <STRING> <INT> l length p setPath <STRING> l p list assertEquals <STRING> <INT> l length p append Path project <STRING> l p list assertEquals <STRING> <INT> l length p createPath setPath <STRING> l p list assertEquals <STRING> <INT> l length
public void testEmptyElementIfIsReference Path p Path project <STRING> p setRefid Reference project <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p Path project p setLocation File <STRING> p setRefid Reference project <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage Path another Path project <STRING> project addReference <STRING> another p Path project p setRefid Reference project <STRING> p setLocation File <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p setPath <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage p createPath fail <STRING> BuildException be assertEquals <STRING> be getMessage p createPathElement fail <STRING> BuildException be assertEquals <STRING> be getMessage p addFileset FileSet fail <STRING> BuildException be assertEquals <STRING> be getMessage p addFilelist FileList fail <STRING> BuildException be assertEquals <STRING> be getMessage p addDirset DirSet fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReferenceCheck Path p Path project project addReference <STRING> p p setRefid Reference project <STRING> p list fail <STRING> BuildException be assertEquals <STRING> be getMessage Path p1 Path project project addReference <STRING> p1 Path p2 p1 createPath project addReference <STRING> p2 Path p3 p2 createPath project addReference <STRING> p3 p3 setRefid Reference project <STRING> p1 list fail <STRING> BuildException be assertEquals <STRING> be getMessage p1 Path project project addReference <STRING> p1 p2 p1 createPath project addReference <STRING> p2 p3 p2 createPath project addReference <STRING> p3 p3 setLocation File <STRING> String l p1 list assertEquals <STRING> <INT> l length isUnixStyle assertEquals <STRING> l <INT> isNetWare assertEquals <STRING> l <INT> assertEquals <STRING> l <INT> substring <INT>
public void testFileList Path p Path project FileList f FileList f setProject project f setDir project resolveFile <STRING> f setFiles <STRING> p addFilelist f String l p list assertEquals <INT> l length assertEquals project resolveFile <STRING> getAbsolutePath l <INT>
public void testFileSet Path p Path project FileSet f FileSet f setProject project f setDir project resolveFile <STRING> f setIncludes <STRING> p addFileset f String l p list assertEquals <INT> l length assertEquals project resolveFile <STRING> getAbsolutePath l <INT>
public void testDirSet Path p Path project DirSet d DirSet d setProject project d setDir project resolveFile <STRING> d setIncludes <STRING> p addDirset d String l p list assertEquals <INT> l length assertEquals project resolveFile <STRING> getAbsolutePath l <INT>
public void testRecursion Path p Path project p append p assertEquals <INT> p list length BuildException x String m x toString assertTrue m m indexOf <STRING> <INT>
public void execute propName null value null BuildException <STRING> taskProject setNewProperty propName value toString
public void testTokenizer String s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length int i <INT> i <INT> i assertEquals <STRING> i <INT> s i s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length s Commandline translateCommandline null assertEquals <STRING> <INT> s length s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> assertEquals <STRING> <INT> s length assertEquals <STRING> <STRING> s <INT> s Commandline translateCommandline <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage s Commandline translateCommandline <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testToString assertEquals <STRING> Commandline toString String <INT> assertEquals <STRING> Commandline toString null assertEquals <STRING> Commandline toString String <STRING> <STRING> <STRING> assertEquals <STRING> Commandline toString String <STRING> <STRING> assertEquals <STRING> Commandline toString String <STRING> <STRING> assertEquals <STRING> Commandline toString String <STRING> <STRING>
public void testAwkCommand Commandline c Commandline c setExecutable <STRING> c createArgument setValue <STRING> String s c getCommandline assertNotNull s assertEquals <INT> s length assertEquals <STRING> s <INT> assertEquals <STRING> s <INT>
public void testPrefix Commandline c Commandline Commandline Argument a c createArgument a setValue <STRING> a setPrefix <STRING> String s c getCommandline assertEquals <INT> s length assertEquals <STRING> s <INT>
public void testSuffix Commandline c Commandline Commandline Argument a c createArgument a setValue <STRING> a setSuffix <STRING> String s c getCommandline assertEquals <INT> s length assertEquals <STRING> s <INT>
public void testPrefixSuffixLine Commandline c Commandline Commandline Argument a c createArgument a setLine <STRING> a setPrefix <STRING> a setSuffix <STRING> String s c getCommandline assertEquals <INT> s length assertEquals <STRING> s <INT> assertEquals <STRING> s <INT>
public void testContains EnumeratedAttribute t1 TestNormal int i <INT> i expected length i assertTrue expected i <STRING> t1 containsValue expected i assertTrue expected i toUpperCase <STRING> t1 containsValue expected i toUpperCase assertTrue <STRING> t1 containsValue <STRING> assertTrue <STRING> TestNull containsValue <STRING>
public void testFactory Factory ea Factory EnumeratedAttribute getInstance Factory <STRING> assertEquals <STRING> ea getValue <STRING> EnumeratedAttribute getInstance Factory <STRING> fail <STRING> BuildException be
public void testExceptions EnumeratedAttribute t1 TestNormal int i <INT> i expected length i t1 setValue expected i BuildException be fail <STRING> expected i t1 setValue <STRING> fail <STRING> BuildException be TestNull setValue <STRING> fail <STRING> BuildException be Throwable other fail <STRING> other getMessage
public void testLazyLoading Exception StringResourceCollection collectionTest StringResourceCollection LazyResourceCollectionWrapper lazyCollection LazyResourceCollectionWrapper lazyCollection add collectionTest Iterator it lazyCollection iterator assertOneCreatedIterator collectionTest StringResourceIterator stringResourceIterator StringResourceIterator collectionTest createdIterators get <INT> assertEquals <STRING> <INT> stringResourceIterator cursor StringResource r StringResource it next assertOneCreatedIterator collectionTest assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it next assertOneCreatedIterator collectionTest assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it next assertOneCreatedIterator collectionTest assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor it next fail <STRING> NoSuchElementException e
public void testCaching Exception StringResourceCollection collectionTest StringResourceCollection LazyResourceCollectionWrapper lazyCollection LazyResourceCollectionWrapper lazyCollection add collectionTest assertTrue lazyCollection isCache Iterator it1 lazyCollection iterator assertOneCreatedIterator collectionTest Iterator it2 lazyCollection iterator assertOneCreatedIterator collectionTest StringResourceIterator stringResourceIterator StringResourceIterator collectionTest createdIterators get <INT> assertEquals <STRING> <INT> stringResourceIterator cursor StringResource r StringResource it1 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it2 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it2 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it1 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it2 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor r StringResource it1 next assertEquals <STRING> r getValue assertEquals <STRING> <INT> stringResourceIterator cursor it1 next fail <STRING> NoSuchElementException e it2 next fail <STRING> NoSuchElementException e
public void testEmptyElementWithReference ResourceList rl ResourceList rl setEncoding <STRING> rl setRefid Reference getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage rl ResourceList rl setRefid Reference getProject <STRING> rl setEncoding <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage rl ResourceList rl add FileResource getProject <STRING> rl setRefid Reference getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage rl ResourceList rl setRefid Reference getProject <STRING> rl add FileResource getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage rl ResourceList rl addFilterChain FilterChain rl setRefid Reference getProject <STRING> fail <STRING> BuildException be assertEquals <STRING> be getMessage rl ResourceList rl setRefid Reference getProject <STRING> rl addFilterChain FilterChain fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testCircularReference Exception ResourceList rl1 ResourceList rl1 setProject getProject rl1 setRefid Reference getProject <STRING> ResourceList rl2 ResourceList rl2 setProject getProject getProject addReference <STRING> rl2 Union u Union u add rl1 u setProject getProject rl2 add u rl2 size fail <STRING> BuildException be assertEquals <STRING> be getMessage
public void testPropertyExpansion executeTarget <STRING> assertTrue <STRING> getLog indexOf <STRING> <INT> assertTrue <STRING> getLog indexOf <STRING> <INT>
public void testTaskdef executeTarget <STRING> assertTrue <STRING> getLog indexOf <STRING> <INT> assertTrue <STRING> getLog indexOf <STRING> <INT> assertTrue <STRING> getLog indexOf <STRING> <INT>
public void testCaseInsensitive executeTarget <STRING> assertTrue <STRING> getLog indexOf <STRING> <INT> assertTrue <STRING> getLog indexOf <STRING> <INT>
public void testFindClass Exception String testCaseURL getClass getClassLoader getResource <STRING> toExternalForm int pling testCaseURL indexOf <CHAR> String jarName testCaseURL substring <INT> pling File f File FileUtils getFileUtils fromURI jarName Path p Path null p createPathElement setLocation f AntClassLoader al null int i <INT> i <INT> i al AntClassLoader null null p false al findClass <STRING> al null al cleanup
public void setUp p Project p init root File File separator getAbsolutePath toUpperCase mbl MockBuildListener p
public void testDataTypes BuildException assertNull <STRING> p createDataType <STRING> Object o p createDataType <STRING> assertNotNull <STRING> o assertTrue <STRING> o FileSet assertTrue <STRING> p createDataType <STRING> PatternSet assertTrue <STRING> p createDataType <STRING> Path
public void testResolveFile Os isFamily <STRING> Os isFamily <STRING> assertEqualsIgnoreDriveCase localize File separator p resolveFile <STRING> null getPath assertEqualsIgnoreDriveCase localize File separator p resolveFile <STRING> null getPath String driveSpec <STRING> String driveSpecLower <STRING> assertEqualsIgnoreDriveCase driveSpecLower <STRING> p resolveFile driveSpec <STRING> null getPath assertEqualsIgnoreDriveCase driveSpecLower <STRING> p resolveFile driveSpec <STRING> null getPath assertEqualsIgnoreDriveCase driveSpecLower <STRING> p resolveFile driveSpecLower <STRING> null getPath assertEqualsIgnoreDriveCase driveSpecLower <STRING> p resolveFile driveSpecLower <STRING> null getPath assertEqualsIgnoreDriveCase driveSpec <STRING> p resolveFile driveSpec <STRING> null getPath assertEqualsIgnoreDriveCase driveSpec <STRING> p resolveFile driveSpec <STRING> null getPath assertEquals File separator p resolveFile <STRING> null getPath assertEquals File separator p resolveFile <STRING> null getPath String driveSpec <STRING> String udir System getProperty <STRING> File separatorChar assertEquals udir driveSpec p resolveFile driveSpec <STRING> null getPath assertEquals udir driveSpec p resolveFile driveSpec <STRING> null getPath String driveSpecLower <STRING> assertEquals udir driveSpecLower p resolveFile driveSpecLower <STRING> null getPath assertEquals udir driveSpecLower p resolveFile driveSpecLower <STRING> null getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath assertEquals localize <STRING> p resolveFile <STRING> File localize <STRING> getPath
private String localize String path path root path substring <INT> path replace <CHAR> File separatorChar replace <CHAR> File separatorChar
private void assertEqualsIgnoreDriveCase String s1 String s2 Os isFamily <STRING> Os isFamily <STRING> s1 length <INT> s2 length <INT> StringBuffer sb1 StringBuffer s1 StringBuffer sb2 StringBuffer s2 sb1 setCharAt <INT> Character toUpperCase s1 charAt <INT> sb2 setCharAt <INT> Character toUpperCase s2 charAt <INT> assertEquals sb1 toString sb2 toString assertEquals s1 s2
private void assertTaskDefFails final Class taskClass final String message final String dummyName <STRING> mbl addBuildEvent message Project MSG_ERR p addTaskDefinition dummyName taskClass fail <STRING> message <STRING> taskClass BuildException e assertEquals message e getMessage mbl assertEmpty assertTrue p getTaskDefinitions containsKey dummyName
public void testAddTaskDefinition p addBuildListener mbl p addTaskDefinition <STRING> DummyTaskOk assertEquals DummyTaskOk p getTaskDefinitions get <STRING> p addTaskDefinition <STRING> DummyTaskOkNonTask assertEquals DummyTaskOkNonTask p getTaskDefinitions get <STRING> mbl assertEmpty assertTaskDefFails DummyTaskPrivate DummyTaskPrivate <STRING> assertTaskDefFails DummyTaskProtected DummyTaskProtected <STRING> assertTaskDefFails DummyTaskPackage DummyTaskPackage <STRING> assertTaskDefFails DummyTaskAbstract DummyTaskAbstract <STRING> assertTaskDefFails DummyTaskInterface DummyTaskInterface <STRING> assertTaskDefFails DummyTaskWithoutDefaultConstructor <STRING> DummyTaskWithoutDefaultConstructor assertTaskDefFails DummyTaskWithoutPublicConstructor <STRING> DummyTaskWithoutPublicConstructor assertTaskDefFails DummyTaskWithoutExecute <STRING> DummyTaskWithoutExecute assertTaskDefFails DummyTaskWithNonPublicExecute <STRING> DummyTaskWithNonPublicExecute mbl addBuildEvent <STRING> DummyTaskWithNonVoidExecute Project MSG_WARN p addTaskDefinition <STRING> DummyTaskWithNonVoidExecute mbl assertEmpty assertEquals DummyTaskWithNonVoidExecute p getTaskDefinitions get <STRING>
public void testInputHandler InputHandler ih p getInputHandler assertNotNull ih assertTrue ih DefaultInputHandler InputHandler pfih PropertyFileInputHandler p setInputHandler pfih assertSame pfih p getInputHandler
public void testDuplicateTargets BFT bft BFT <STRING> <STRING> BuildException ex assertEquals <STRING> <STRING> ex getMessage return fail <STRING>
public void testOutputDuringMessageLoggedIsSwallowed InterruptedException final String FOO <STRING> BAR <STRING> p addBuildListener BuildListener public void buildStarted BuildEvent event public void buildFinished BuildEvent event public void targetStarted BuildEvent event public void targetFinished BuildEvent event public void taskStarted BuildEvent event public void taskFinished BuildEvent event public void messageLogged final BuildEvent actual assertEquals FOO actual getMessage System err println BAR System out println BAR p log BAR Project MSG_INFO final boolean done boolean false Thread t Thread public void run p log FOO Project MSG_INFO done <INT> true t start t join <INT> assertTrue <STRING> done <INT>
public void testDefaultFailure getProject null true executeTargets TARGET_NAMES fail <STRING> BuildException e assertTrue e getMessage equals <STRING> assertEquals <INT> targetCount
public void testSingleCheckFailure getProject SINGLE_CHECK true executeTargets TARGET_NAMES fail <STRING> BuildException e assertTrue e getMessage equals <STRING> assertEquals <INT> targetCount
public void testKeepGoingDefault getProject null true true executeTargets TARGET_NAMES fail <STRING> BuildException e assertTrue e getMessage equals <STRING> assertEquals <INT> targetCount
public void testKeepGoingSingleCheck getProject SINGLE_CHECK true true executeTargets TARGET_NAMES fail <STRING> BuildException e assertTrue e getMessage equals <STRING> assertEquals <INT> targetCount
public void testKeepGoingIgnoreDependencies Vector targetNames Vector TARGET_NAMES targetNames add <INT> <STRING> getProject IGNORE_DEPS true true executeTargets targetNames fail <STRING> BuildException e assertTrue e getMessage equals <STRING> assertEquals <INT> targetCount
public void testParseErrorInIncluding configureProject <STRING> fail <STRING> BuildException e assertTrue e getLocation toString <STRING> e getLocation toString indexOf <STRING> <INT>
public void testTaskErrorInIncluding configureProject <STRING> executeTarget <STRING> fail <STRING> BuildException e assertTrue e getMessage <STRING> e getMessage startsWith <STRING> assertTrue e getLocation toString <STRING> e getLocation toString endsWith <STRING>
public void testParseErrorInIncluded configureProject <STRING> fail <STRING> BuildException e assertTrue e getLocation toString <STRING> e getLocation toString indexOf <STRING> <INT>
public void testTaskErrorInIncluded configureProject <STRING> executeTarget <STRING> fail <STRING> BuildException e assertTrue e getMessage <STRING> e getMessage startsWith <STRING> assertTrue e getLocation toString <STRING> e getLocation toString endsWith <STRING>
public void testWithSpaceInclude configureProject <STRING> expectLog <STRING> <STRING> Throwable t AssertionFailedError t toString <STRING> getFullLog
public void testPlainTask executeTarget <STRING> Echo e Echo getProject getReference <STRING> assertFalse e getLocation Location UNKNOWN_LOCATION assertFalse e getLocation getLineNumber <INT>
public void testStandaloneType executeTarget <STRING> Echo e Echo getProject getReference <STRING> FileSet f FileSet getProject getReference <STRING> assertFalse f getLocation Location UNKNOWN_LOCATION assertEquals e getLocation getLineNumber <INT> f getLocation getLineNumber
public void testConditionTask executeTarget <STRING> TaskAdapter ta TaskAdapter getProject getReference <STRING> ConditionTask c ConditionTask ta getProxy assertFalse c getLocation Location UNKNOWN_LOCATION assertFalse c getLocation getLineNumber <INT>
public void testMacrodefWrappedTask executeTarget <STRING> Echo e Echo getProject getReference <STRING> assertTrue getLog indexOf <STRING> e getLocation getLineNumber <INT> <INT>
public void testPresetdefWrappedTask executeTarget <STRING> Echo e Echo getProject getReference <STRING> assertTrue getLog indexOf <STRING> e getLocation getLineNumber <INT> <INT>
void updateCRC int inCh int temp globalCrc <INT> inCh temp <INT> temp <INT> temp globalCrc globalCrc <INT> CRC crc32Table temp
void updateCRC int inCh int repeat int globalCrcShadow this globalCrc repeat <INT> int temp globalCrcShadow <INT> inCh globalCrcShadow globalCrcShadow <INT> crc32Table temp <INT> temp temp <INT> this globalCrc globalCrcShadow
protected static void hbMakeCodeLengths char len int freq int alphaSize int maxLen final int heap int MAX_ALPHA_SIZE <INT> final int weight int MAX_ALPHA_SIZE <INT> final int parent int MAX_ALPHA_SIZE <INT> int i alphaSize i <INT> weight i <INT> freq i <INT> <INT> freq i <INT> boolean tooLong true tooLong tooLong false int nNodes alphaSize int nHeap <INT> heap <INT> <INT> weight <INT> <INT> parent <INT> <INT> int i <INT> i alphaSize i parent i <INT> nHeap heap nHeap i int zz nHeap int tmp heap zz weight tmp weight heap zz <INT> heap zz heap zz <INT> zz <INT> heap zz tmp nHeap <INT> int n1 heap <INT> heap <INT> heap nHeap nHeap int yy <INT> int zz <INT> int tmp heap <INT> true yy zz <INT> yy nHeap break yy nHeap weight heap yy <INT> weight heap yy yy weight tmp weight heap yy break heap zz heap yy zz yy heap zz tmp int n2 heap <INT> heap <INT> heap nHeap nHeap yy <INT> zz <INT> tmp heap <INT> true yy zz <INT> yy nHeap break yy nHeap weight heap yy <INT> weight heap yy yy weight tmp weight heap yy break heap zz heap yy zz yy heap zz tmp nNodes parent n1 parent n2 nNodes final int weight_n1 weight n1 final int weight_n2 weight n2 weight nNodes weight_n1 <INT> weight_n2 <INT> <INT> weight_n1 <INT> weight_n2 <INT> weight_n1 <INT> weight_n2 <INT> parent nNodes <INT> nHeap heap nHeap nNodes tmp <INT> zz nHeap tmp heap zz final int weight_tmp weight tmp weight_tmp weight heap zz <INT> heap zz heap zz <INT> zz <INT> heap zz tmp int i <INT> i alphaSize i int j <INT> int k i int parent_k parent_k parent k <INT> k parent_k j len i <INT> char j j maxLen tooLong true tooLong int i <INT> i alphaSize i int j weight i <INT> j <INT> j <INT> weight i j <INT>
private static void hbMakeCodeLengths final byte len final int freq final Data dat final int alphaSize final int maxLen final int heap dat heap final int weight dat weight final int parent dat parent int i alphaSize i <INT> weight i <INT> freq i <INT> <INT> freq i <INT> boolean tooLong true tooLong tooLong false int nNodes alphaSize int nHeap <INT> heap <INT> <INT> weight <INT> <INT> parent <INT> <INT> int i <INT> i alphaSize i parent i <INT> nHeap heap nHeap i int zz nHeap int tmp heap zz weight tmp weight heap zz <INT> heap zz heap zz <INT> zz <INT> heap zz tmp nHeap <INT> int n1 heap <INT> heap <INT> heap nHeap nHeap int yy <INT> int zz <INT> int tmp heap <INT> true yy zz <INT> yy nHeap break yy nHeap weight heap yy <INT> weight heap yy yy weight tmp weight heap yy break heap zz heap yy zz yy heap zz tmp int n2 heap <INT> heap <INT> heap nHeap nHeap yy <INT> zz <INT> tmp heap <INT> true yy zz <INT> yy nHeap break yy nHeap weight heap yy <INT> weight heap yy yy weight tmp weight heap yy break heap zz heap yy zz yy heap zz tmp nNodes parent n1 parent n2 nNodes final int weight_n1 weight n1 final int weight_n2 weight n2 weight nNodes weight_n1 <INT> weight_n2 <INT> <INT> weight_n1 <INT> weight_n2 <INT> weight_n1 <INT> weight_n2 <INT> parent nNodes <INT> nHeap heap nHeap nNodes tmp <INT> zz nHeap tmp heap zz final int weight_tmp weight tmp weight_tmp weight heap zz <INT> heap zz heap zz <INT> zz <INT> heap zz tmp int i <INT> i alphaSize i int j <INT> int k i int parent_k parent_k parent k <INT> k parent_k j len i <INT> byte j j maxLen tooLong true tooLong int i <INT> i alphaSize i int j weight i <INT> j <INT> j <INT> weight i j <INT>
public CBZip2OutputStream final OutputStream out final int blockSize IOException super blockSize <INT> IllegalArgumentException <STRING> blockSize <STRING> blockSize <INT> IllegalArgumentException <STRING> blockSize <STRING> this blockSize100k blockSize this out out init
private void writeRun IOException final int lastShadow this last lastShadow this allowableBlockSize final int currentCharShadow this currentChar final Data dataShadow this data dataShadow inUse currentCharShadow true final byte ch byte currentCharShadow int runLengthShadow this runLength this crc updateCRC currentCharShadow runLengthShadow runLengthShadow <INT> dataShadow block lastShadow <INT> ch this last lastShadow <INT> break <INT> dataShadow block lastShadow <INT> ch dataShadow block lastShadow <INT> ch this last lastShadow <INT> break <INT> final byte block dataShadow block block lastShadow <INT> ch block lastShadow <INT> ch block lastShadow <INT> ch this last lastShadow <INT> break default runLengthShadow <INT> dataShadow inUse runLengthShadow true final byte block dataShadow block block lastShadow <INT> ch block lastShadow <INT> ch block lastShadow <INT> ch block lastShadow <INT> ch block lastShadow <INT> byte runLengthShadow this last lastShadow <INT> break endBlock initBlock writeRun
public void finish IOException out null this runLength <INT> writeRun this currentChar <INT> endBlock endCompression this out null this data null
private void init IOException this data Data this blockSize100k bsPutUByte <CHAR> bsPutUByte <CHAR> this blockSize100k this combinedCRC <INT> initBlock
private void initBlock this crc initialiseCRC this last <INT> boolean inUse this data inUse int i <INT> i <INT> inUse i false this allowableBlockSize this blockSize100k BZip2Constants baseBlockSize <INT>
private void endBlock IOException this blockCRC this crc getFinalCRC this combinedCRC this combinedCRC <INT> this combinedCRC <INT> this combinedCRC this blockCRC this last <INT> return blockSort bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutInt this blockCRC this blockRandomised bsW <INT> <INT> bsW <INT> <INT> moveToFrontCodeAndSend
private void endCompression IOException bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutUByte <INT> bsPutInt this combinedCRC bsFinishedWithStream
public void write final byte buf int offs final int len IOException offs <INT> IndexOutOfBoundsException <STRING> offs <STRING> len <INT> IndexOutOfBoundsException <STRING> len <STRING> offs len buf length IndexOutOfBoundsException <STRING> offs <STRING> len <STRING> buf length <STRING> this out null IOException <STRING> int hi offs len offs hi write0 buf offs
private void write0 int b IOException this currentChar <INT> b <INT> this currentChar b this runLength <INT> writeRun this currentChar <INT> this runLength <INT> writeRun this runLength <INT> this currentChar b this currentChar b <INT> this runLength
private static void hbAssignCodes final int code final byte length final int minLen final int maxLen final int alphaSize int vec <INT> int n minLen n maxLen n int i <INT> i alphaSize i length i <INT> n code i vec vec vec <INT>
private void bsFinishedWithStream IOException this bsLive <INT> int ch this bsBuff <INT> this out write ch this bsBuff <INT> this bsLive <INT>
private void bsW final int n final int v IOException final OutputStream outShadow this out int bsLiveShadow this bsLive int bsBuffShadow this bsBuff bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> this bsBuff bsBuffShadow v <INT> bsLiveShadow n this bsLive bsLiveShadow n
private void bsPutInt final int u IOException bsW <INT> u <INT> <INT> bsW <INT> u <INT> <INT> bsW <INT> u <INT> <INT> bsW <INT> u <INT>
private void sendMTFValues IOException final byte len this data sendMTFValues_len final int alphaSize this nInUse <INT> int t N_GROUPS t <INT> byte len_t len t int v alphaSize v <INT> len_t v GREATER_ICOST final int nGroups this nMTF <INT> <INT> this nMTF <INT> <INT> this nMTF <INT> <INT> this nMTF <INT> <INT> <INT> sendMTFValues0 nGroups alphaSize final int nSelectors sendMTFValues1 nGroups alphaSize sendMTFValues2 nGroups nSelectors sendMTFValues3 nGroups alphaSize sendMTFValues4 sendMTFValues5 nGroups nSelectors sendMTFValues6 nGroups alphaSize sendMTFValues7 nSelectors
private void sendMTFValues0 final int nGroups final int alphaSize final byte len this data sendMTFValues_len final int mtfFreq this data mtfFreq int remF this nMTF int gs <INT> int nPart nGroups nPart <INT> nPart final int tFreq remF nPart int ge gs <INT> int aFreq <INT> final int a alphaSize <INT> aFreq tFreq ge a aFreq mtfFreq ge ge gs nPart nGroups nPart <INT> nGroups nPart <INT> <INT> aFreq mtfFreq ge final byte len_np len nPart <INT> int v alphaSize v <INT> v gs v ge len_np v LESSER_ICOST len_np v GREATER_ICOST gs ge <INT> remF aFreq
private int sendMTFValues1 final int nGroups final int alphaSize final Data dataShadow this data final int rfreq dataShadow sendMTFValues_rfreq final int fave dataShadow sendMTFValues_fave final short cost dataShadow sendMTFValues_cost final char sfmap dataShadow sfmap final byte selector dataShadow selector final byte len dataShadow sendMTFValues_len final byte len_0 len <INT> final byte len_1 len <INT> final byte len_2 len <INT> final byte len_3 len <INT> final byte len_4 len <INT> final byte len_5 len <INT> final int nMTFShadow this nMTF int nSelectors <INT> int iter <INT> iter N_ITERS iter int t nGroups t <INT> fave t <INT> int rfreqt rfreq t int i alphaSize i <INT> rfreqt i <INT> nSelectors <INT> int gs <INT> gs this nMTF final int ge Math min gs G_SIZE <INT> nMTFShadow <INT> nGroups N_GROUPS short cost0 <INT> short cost1 <INT> short cost2 <INT> short cost3 <INT> short cost4 <INT> short cost5 <INT> int i gs i ge i final int icv sfmap i cost0 len_0 icv <INT> cost1 len_1 icv <INT> cost2 len_2 icv <INT> cost3 len_3 icv <INT> cost4 len_4 icv <INT> cost5 len_5 icv <INT> cost <INT> cost0 cost <INT> cost1 cost <INT> cost2 cost <INT> cost3 cost <INT> cost4 cost <INT> cost5 int t nGroups t <INT> cost t <INT> int i gs i ge i final int icv sfmap i int t nGroups t <INT> cost t len t icv <INT> int bt <INT> int t nGroups bc <INT> t <INT> final int cost_t cost t cost_t bc bc cost_t bt t fave bt selector nSelectors byte bt nSelectors final int rfreq_bt rfreq bt int i gs i ge i rfreq_bt sfmap i gs ge <INT> int t <INT> t nGroups t hbMakeCodeLengths len t rfreq t this data alphaSize <INT> nSelectors
private void sendMTFValues2 final int nGroups final int nSelectors final Data dataShadow this data byte pos dataShadow sendMTFValues2_pos int i nGroups i <INT> pos i byte i int i <INT> i nSelectors i final byte ll_i dataShadow selector i byte tmp pos <INT> int j <INT> ll_i tmp j byte tmp2 tmp tmp pos j pos j tmp2 pos <INT> tmp dataShadow selectorMtf i byte j
private void sendMTFValues3 final int nGroups final int alphaSize int code this data sendMTFValues_code byte len this data sendMTFValues_len int t <INT> t nGroups t int minLen <INT> int maxLen <INT> final byte len_t len t int i alphaSize i <INT> final int l len_t i <INT> l maxLen maxLen l l minLen minLen l hbAssignCodes code t len t minLen maxLen alphaSize
private void sendMTFValues4 IOException final boolean inUse this data inUse final boolean inUse16 this data sentMTFValues4_inUse16 int i <INT> i <INT> inUse16 i false final int i16 i <INT> int j <INT> j <INT> inUse i16 j inUse16 i true int i <INT> i <INT> i bsW <INT> inUse16 i <INT> <INT> final OutputStream outShadow this out int bsLiveShadow this bsLive int bsBuffShadow this bsBuff int i <INT> i <INT> i inUse16 i final int i16 i <INT> int j <INT> j <INT> j bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> inUse i16 j bsBuffShadow <INT> <INT> bsLiveShadow <INT> bsLiveShadow this bsBuff bsBuffShadow this bsLive bsLiveShadow
private void sendMTFValues5 final int nGroups final int nSelectors IOException bsW <INT> nGroups bsW <INT> nSelectors final OutputStream outShadow this out final byte selectorMtf this data selectorMtf int bsLiveShadow this bsLive int bsBuffShadow this bsBuff int i <INT> i nSelectors i int j <INT> hj selectorMtf i <INT> j hj j bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsBuffShadow <INT> <INT> bsLiveShadow <INT> bsLiveShadow bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsLiveShadow this bsBuff bsBuffShadow this bsLive bsLiveShadow
private void sendMTFValues6 final int nGroups final int alphaSize IOException final byte len this data sendMTFValues_len final OutputStream outShadow this out int bsLiveShadow this bsLive int bsBuffShadow this bsBuff int t <INT> t nGroups t byte len_t len t int curr len_t <INT> <INT> bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsBuffShadow curr <INT> bsLiveShadow <INT> bsLiveShadow <INT> int i <INT> i alphaSize i int lti len_t i <INT> curr lti bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsBuffShadow <INT> <INT> bsLiveShadow <INT> bsLiveShadow <INT> curr curr lti bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsBuffShadow <INT> <INT> bsLiveShadow <INT> bsLiveShadow <INT> curr bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> bsLiveShadow this bsBuff bsBuffShadow this bsLive bsLiveShadow
private void sendMTFValues7 final int nSelectors IOException final Data dataShadow this data final byte len dataShadow sendMTFValues_len final int code dataShadow sendMTFValues_code final OutputStream outShadow this out final byte selector dataShadow selector final char sfmap dataShadow sfmap final int nMTFShadow this nMTF int selCtr <INT> int bsLiveShadow this bsLive int bsBuffShadow this bsBuff int gs <INT> gs nMTFShadow final int ge Math min gs G_SIZE <INT> nMTFShadow <INT> final int selector_selCtr selector selCtr <INT> final int code_selCtr code selector_selCtr final byte len_selCtr len selector_selCtr gs ge final int sfmap_i sfmap gs bsLiveShadow <INT> outShadow write bsBuffShadow <INT> bsBuffShadow <INT> bsLiveShadow <INT> final int n len_selCtr sfmap_i <INT> bsBuffShadow code_selCtr sfmap_i <INT> bsLiveShadow n bsLiveShadow n gs gs ge <INT> selCtr this bsBuff bsBuffShadow this bsLive bsLiveShadow
private boolean mainSimpleSort final Data dataShadow final int lo final int hi final int d final int bigN hi lo <INT> bigN <INT> this firstAttempt this workDone this workLimit int hp <INT> INCS hp bigN hp final int fmap dataShadow fmap final char quadrant dataShadow quadrant final byte block dataShadow block final int lastShadow this last final int lastPlus1 lastShadow <INT> final boolean firstAttemptShadow this firstAttempt final int workLimitShadow this workLimit int workDoneShadow this workDone HP hp <INT> final int h INCS hp final int mj lo h <INT> int i lo h i hi int k <INT> i hi k <INT> i final int v fmap i final int vd v d int j i boolean onceRunned false int a <INT> HAMMER true onceRunned fmap j a j h mj HAMMER onceRunned true a fmap j h int i1 a d int i2 vd block i1 <INT> block i2 <INT> block i1 <INT> block i2 <INT> block i1 <INT> block i2 <INT> block i1 <INT> block i2 <INT> block i1 <INT> block i2 <INT> block i1 <INT> block i2 <INT> int x lastShadow X x <INT> x <INT> block i1 <INT> block i2 <INT> quadrant i1 quadrant i2 block i1 <INT> block i2 <INT> quadrant i1 <INT> quadrant i2 <INT> block i1 <INT> block i2 <INT> quadrant i1 <INT> quadrant i2 <INT> block i1 <INT> block i2 <INT> quadrant i1 <INT> quadrant i2 <INT> i1 <INT> lastPlus1 i1 lastPlus1 i2 <INT> lastPlus1 i2 lastPlus1 workDoneShadow X quadrant i1 <INT> quadrant i2 <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER quadrant i1 <INT> quadrant i2 <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER quadrant i1 <INT> quadrant i2 <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER quadrant i1 quadrant i2 HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER HAMMER block i1 <INT> block i2 <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER block i1 <INT> <INT> block i2 <INT> <INT> HAMMER HAMMER fmap j v firstAttemptShadow i hi workDoneShadow workLimitShadow HP this workDone workDoneShadow firstAttemptShadow workDoneShadow workLimitShadow
private static void vswap int fmap int p1 int p2 int n n p1 p1 n int t fmap p1 fmap p1 fmap p2 fmap p2 t
private static byte med3 byte a byte b byte c a b b c b a c c a b c b a c c a
private void blockSort this workLimit WORK_FACTOR this last this workDone <INT> this blockRandomised false this firstAttempt true mainSort this firstAttempt this workDone this workLimit randomiseBlock this workLimit this workDone <INT> this firstAttempt false mainSort int fmap this data fmap this origPtr <INT> int i <INT> lastShadow this last i lastShadow i fmap i <INT> this origPtr i break
private void mainQSort3 final Data dataShadow final int loSt final int hiSt final int dSt final int stack_ll dataShadow stack_ll final int stack_hh dataShadow stack_hh final int stack_dd dataShadow stack_dd final int fmap dataShadow fmap final byte block dataShadow block stack_ll <INT> loSt stack_hh <INT> hiSt stack_dd <INT> dSt int sp <INT> sp <INT> final int lo stack_ll sp final int hi stack_hh sp final int d stack_dd sp hi lo SMALL_THRESH d DEPTH_THRESH mainSimpleSort dataShadow lo hi d return final int d1 d <INT> final int med med3 block fmap lo d1 block fmap hi d1 block fmap lo hi <INT> d1 <INT> int unLo lo int unHi hi int ltLo lo int gtHi hi true unLo unHi final int n int block fmap unLo d1 <INT> med n <INT> final int temp fmap unLo fmap unLo fmap ltLo fmap ltLo temp n <INT> unLo break unLo unHi final int n int block fmap unHi d1 <INT> med n <INT> final int temp fmap unHi fmap unHi fmap gtHi fmap gtHi temp n <INT> unHi break unLo unHi final int temp fmap unLo fmap unLo fmap unHi fmap unHi temp break gtHi ltLo stack_ll sp lo stack_hh sp hi stack_dd sp d1 sp int n ltLo lo unLo ltLo ltLo lo unLo ltLo vswap fmap lo unLo n n int m hi gtHi gtHi unHi hi gtHi gtHi unHi vswap fmap unLo hi m <INT> m n lo unLo ltLo <INT> m hi gtHi unHi <INT> stack_ll sp lo stack_hh sp n stack_dd sp d sp stack_ll sp n <INT> stack_hh sp m <INT> stack_dd sp d1 sp stack_ll sp m stack_hh sp hi stack_dd sp d sp
private void mainSort final Data dataShadow this data final int runningOrder dataShadow mainSort_runningOrder final int copy dataShadow mainSort_copy final boolean bigDone dataShadow mainSort_bigDone final int ftab dataShadow ftab final byte block dataShadow block final int fmap dataShadow fmap final char quadrant dataShadow quadrant final int lastShadow this last final int workLimitShadow this workLimit final boolean firstAttemptShadow this firstAttempt int i <INT> i <INT> ftab i <INT> int i <INT> i NUM_OVERSHOOT_BYTES i block lastShadow i <INT> block i lastShadow <INT> <INT> int i lastShadow NUM_OVERSHOOT_BYTES <INT> i <INT> quadrant i <INT> block <INT> block lastShadow <INT> int c1 block <INT> <INT> int i <INT> i lastShadow i final int c2 block i <INT> <INT> ftab c1 <INT> c2 c1 c2 int i <INT> i <INT> i ftab i ftab i <INT> c1 block <INT> <INT> int i <INT> i lastShadow i final int c2 block i <INT> <INT> fmap ftab c1 <INT> c2 i c1 c2 fmap ftab block lastShadow <INT> <INT> <INT> block <INT> <INT> lastShadow int i <INT> i <INT> bigDone i false runningOrder i i int h <INT> h <INT> h <INT> int i h i <INT> i final int vv runningOrder i final int a ftab vv <INT> <INT> ftab vv <INT> final int b h <INT> int j i int ro runningOrder j h ftab ro <INT> <INT> ftab ro <INT> a ro runningOrder j h runningOrder j ro j h j b break runningOrder j vv int i <INT> i <INT> i final int ss runningOrder i int j <INT> j <INT> j final int sb ss <INT> j final int ftab_sb ftab sb ftab_sb SETMASK SETMASK final int lo ftab_sb CLEARMASK final int hi ftab sb <INT> CLEARMASK <INT> hi lo mainQSort3 dataShadow lo hi <INT> firstAttemptShadow this workDone workLimitShadow return ftab sb ftab_sb SETMASK int j <INT> j <INT> j copy j ftab j <INT> ss CLEARMASK int j ftab ss <INT> CLEARMASK hj ftab ss <INT> <INT> CLEARMASK j hj j final int fmap_j fmap j c1 block fmap_j <INT> bigDone c1 fmap copy c1 fmap_j <INT> lastShadow fmap_j <INT> copy c1 int j <INT> j <INT> ftab j <INT> ss SETMASK bigDone ss true i <INT> final int bbStart ftab ss <INT> CLEARMASK final int bbSize ftab ss <INT> <INT> CLEARMASK bbStart int shifts <INT> bbSize shifts <INT> shifts int j <INT> j bbSize j final int a2update fmap bbStart j final char qVal char j shifts quadrant a2update qVal a2update NUM_OVERSHOOT_BYTES quadrant a2update lastShadow <INT> qVal
private void randomiseBlock final boolean inUse this data inUse final byte block this data block final int lastShadow this last int i <INT> i <INT> inUse i false int rNToGo <INT> int rTPos <INT> int i <INT> j <INT> i lastShadow i j j rNToGo <INT> rNToGo char BZip2Constants rNums rTPos rTPos <INT> rTPos <INT> rNToGo block j rNToGo <INT> <INT> <INT> inUse block j <INT> true this blockRandomised true
private void generateMTFValues final int lastShadow this last final Data dataShadow this data final boolean inUse dataShadow inUse final byte block dataShadow block final int fmap dataShadow fmap final char sfmap dataShadow sfmap final int mtfFreq dataShadow mtfFreq final byte unseqToSeq dataShadow unseqToSeq final byte yy dataShadow generateMTFValues_yy int nInUseShadow <INT> int i <INT> i <INT> i inUse i unseqToSeq i byte nInUseShadow nInUseShadow this nInUse nInUseShadow final int eob nInUseShadow <INT> int i eob i <INT> i mtfFreq i <INT> int i nInUseShadow i <INT> yy i byte i int wr <INT> int zPend <INT> int i <INT> i lastShadow i final byte ll_i unseqToSeq block fmap i <INT> byte tmp yy <INT> int j <INT> ll_i tmp j byte tmp2 tmp tmp yy j yy j tmp2 yy <INT> tmp j <INT> zPend zPend <INT> zPend true zPend <INT> <INT> sfmap wr RUNA wr mtfFreq RUNA sfmap wr RUNB wr mtfFreq RUNB zPend <INT> zPend zPend <INT> <INT> break zPend <INT> sfmap wr char j <INT> wr mtfFreq j <INT> zPend <INT> zPend true zPend <INT> <INT> sfmap wr RUNA wr mtfFreq RUNA sfmap wr RUNB wr mtfFreq RUNB zPend <INT> zPend zPend <INT> <INT> break sfmap wr char eob mtfFreq eob this nMTF wr <INT>
private void makeMaps final boolean inUse this data inUse final byte seqToUnseq this data seqToUnseq int nInUseShadow <INT> int i <INT> i <INT> i inUse i seqToUnseq nInUseShadow byte i this nInUse nInUseShadow
public CBZip2InputStream final InputStream in IOException super this in in init
public int read final byte dest final int offs final int len IOException offs <INT> IndexOutOfBoundsException <STRING> offs <STRING> len <INT> IndexOutOfBoundsException <STRING> len <STRING> offs len dest length IndexOutOfBoundsException <STRING> offs <STRING> len <STRING> dest length <STRING> this in null IOException <STRING> final int hi offs len int destOffs offs int b destOffs hi b read0 <INT> dest destOffs byte b destOffs offs <INT> destOffs offs
private int read0 IOException final int retChar this currentChar this currentState EOF <INT> START_BLOCK_STATE IllegalStateException RAND_PART_A_STATE IllegalStateException RAND_PART_B_STATE setupRandPartB break RAND_PART_C_STATE setupRandPartC break NO_RAND_PART_A_STATE IllegalStateException NO_RAND_PART_B_STATE setupNoRandPartB break NO_RAND_PART_C_STATE setupNoRandPartC break default IllegalStateException retChar
private void init IOException null in IOException <STRING> in available <INT> IOException <STRING> int magic2 this in read magic2 <CHAR> IOException <STRING> <STRING> char magic2 <STRING> int blockSize this in read blockSize <CHAR> blockSize <CHAR> IOException <STRING> <STRING> char blockSize this blockSize100k blockSize <CHAR> initBlock setupBlock
private void initBlock IOException char magic0 bsGetUByte char magic1 bsGetUByte char magic2 bsGetUByte char magic3 bsGetUByte char magic4 bsGetUByte char magic5 bsGetUByte magic0 <INT> magic1 <INT> magic2 <INT> magic3 <INT> magic4 <INT> magic5 <INT> complete magic0 <INT> magic1 <INT> magic2 <INT> magic3 <INT> magic4 <INT> magic5 <INT> this currentState EOF IOException <STRING> this storedBlockCRC bsGetInt this blockRandomised bsR <INT> <INT> this data null this data Data this blockSize100k getAndMoveToFrontDecode this crc initialiseCRC this currentState START_BLOCK_STATE
private void endBlock IOException this computedBlockCRC this crc getFinalCRC this storedBlockCRC this computedBlockCRC this computedCombinedCRC this storedCombinedCRC <INT> this storedCombinedCRC <INT> this computedCombinedCRC this storedBlockCRC reportCRCError this computedCombinedCRC this computedCombinedCRC <INT> this computedCombinedCRC <INT> this computedCombinedCRC this computedBlockCRC
public void close IOException InputStream inShadow this in inShadow null inShadow System in inShadow close this data null this in null
private int bsR final int n IOException int bsLiveShadow this bsLive int bsBuffShadow this bsBuff bsLiveShadow n final InputStream inShadow this in int thech inShadow read thech <INT> IOException <STRING> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> bsLiveShadow n this bsBuff bsBuffShadow this bsLive bsLiveShadow n bsBuffShadow bsLiveShadow n <INT> n <INT>
private boolean bsGetBit IOException int bsLiveShadow this bsLive int bsBuffShadow this bsBuff bsLiveShadow <INT> int thech this in read thech <INT> IOException <STRING> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> this bsBuff bsBuffShadow this bsLive bsLiveShadow <INT> bsBuffShadow bsLiveShadow <INT> <INT> <INT>
private int bsGetInt IOException bsR <INT> <INT> bsR <INT> <INT> bsR <INT> <INT> bsR <INT>
private static void hbCreateDecodeTables final int limit final int base final int perm final char length final int minLen final int maxLen final int alphaSize int i minLen pp <INT> i maxLen i int j <INT> j alphaSize j length j i perm pp j int i MAX_CODE_LEN i <INT> base i <INT> limit i <INT> int i <INT> i alphaSize i base length i <INT> int i <INT> b base <INT> i MAX_CODE_LEN i b base i base i b int i minLen vec <INT> b base i i maxLen i final int nb base i <INT> vec nb b b nb limit i vec <INT> vec <INT> int i minLen <INT> i maxLen i base i limit i <INT> <INT> <INT> base i
private void recvDecodingTables IOException final Data dataShadow this data final boolean inUse dataShadow inUse final byte pos dataShadow recvDecodingTables_pos final byte selector dataShadow selector final byte selectorMtf dataShadow selectorMtf int inUse16 <INT> int i <INT> i <INT> i bsGetBit inUse16 <INT> i int i <INT> i <INT> inUse i false int i <INT> i <INT> i inUse16 <INT> i <INT> final int i16 i <INT> int j <INT> j <INT> j bsGetBit inUse i16 j true makeMaps final int alphaSize this nInUse <INT> final int nGroups bsR <INT> final int nSelectors bsR <INT> int i <INT> i nSelectors i int j <INT> bsGetBit j selectorMtf i byte j int v nGroups v <INT> pos v byte v int i <INT> i nSelectors i int v selectorMtf i <INT> final byte tmp pos v v <INT> pos v pos v <INT> v pos <INT> tmp selector i tmp final char len dataShadow temp_charArray2d int t <INT> t nGroups t int curr bsR <INT> final char len_t len t int i <INT> i alphaSize i bsGetBit curr bsGetBit <INT> <INT> len_t i char curr createHuffmanDecodingTables alphaSize nGroups
private void createHuffmanDecodingTables final int alphaSize final int nGroups final Data dataShadow this data final char len dataShadow temp_charArray2d final int minLens dataShadow minLens final int limit dataShadow limit final int base dataShadow base final int perm dataShadow perm int t <INT> t nGroups t int minLen <INT> int maxLen <INT> final char len_t len t int i alphaSize i <INT> final char lent len_t i lent maxLen maxLen lent lent minLen minLen lent hbCreateDecodeTables limit t base t perm t len t minLen maxLen alphaSize minLens t minLen
private void getAndMoveToFrontDecode IOException this origPtr bsR <INT> recvDecodingTables final InputStream inShadow this in final Data dataShadow this data final byte ll8 dataShadow ll8 final int unzftab dataShadow unzftab final byte selector dataShadow selector final byte seqToUnseq dataShadow seqToUnseq final char yy dataShadow getAndMoveToFrontDecode_yy final int minLens dataShadow minLens final int limit dataShadow limit final int base dataShadow base final int perm dataShadow perm final int limitLast this blockSize100k <INT> int i <INT> i <INT> yy i char i unzftab i <INT> int groupNo <INT> int groupPos G_SIZE <INT> final int eob this nInUse <INT> int nextSym getAndMoveToFrontDecode0 <INT> int bsBuffShadow this bsBuff int bsLiveShadow this bsLive int lastShadow <INT> int zt selector groupNo <INT> int base_zt base zt int limit_zt limit zt int perm_zt perm zt int minLens_zt minLens zt nextSym eob nextSym RUNA nextSym RUNB int s <INT> int n <INT> true n <INT> nextSym RUNA s n nextSym RUNB s n <INT> break groupPos <INT> groupPos G_SIZE <INT> zt selector groupNo <INT> base_zt base zt limit_zt limit zt perm_zt perm zt minLens_zt minLens zt groupPos int zn minLens_zt bsLiveShadow zn final int thech inShadow read thech <INT> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> continue IOException <STRING> int zvec bsBuffShadow bsLiveShadow zn <INT> zn <INT> bsLiveShadow zn zvec limit_zt zn zn bsLiveShadow <INT> final int thech inShadow read thech <INT> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> continue IOException <STRING> bsLiveShadow zvec zvec <INT> bsBuffShadow bsLiveShadow <INT> nextSym perm_zt zvec base_zt zn final byte ch seqToUnseq yy <INT> unzftab ch <INT> s <INT> s <INT> ll8 lastShadow ch lastShadow limitLast IOException <STRING> lastShadow limitLast IOException <STRING> final char tmp yy nextSym <INT> unzftab seqToUnseq tmp <INT> ll8 lastShadow seqToUnseq tmp nextSym <INT> int j nextSym <INT> j <INT> yy j yy j System arraycopy yy <INT> yy <INT> nextSym <INT> yy <INT> tmp groupPos <INT> groupPos G_SIZE <INT> zt selector groupNo <INT> base_zt base zt limit_zt limit zt perm_zt perm zt minLens_zt minLens zt groupPos int zn minLens_zt bsLiveShadow zn final int thech inShadow read thech <INT> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> continue IOException <STRING> int zvec bsBuffShadow bsLiveShadow zn <INT> zn <INT> bsLiveShadow zn zvec limit_zt zn zn bsLiveShadow <INT> final int thech inShadow read thech <INT> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> continue IOException <STRING> bsLiveShadow zvec zvec <INT> bsBuffShadow bsLiveShadow <INT> nextSym perm_zt zvec base_zt zn this last lastShadow this bsLive bsLiveShadow this bsBuff bsBuffShadow
private int getAndMoveToFrontDecode0 final int groupNo IOException final InputStream inShadow this in final Data dataShadow this data final int zt dataShadow selector groupNo <INT> final int limit_zt dataShadow limit zt int zn dataShadow minLens zt int zvec bsR zn int bsLiveShadow this bsLive int bsBuffShadow this bsBuff zvec limit_zt zn zn bsLiveShadow <INT> final int thech inShadow read thech <INT> bsBuffShadow bsBuffShadow <INT> thech bsLiveShadow <INT> continue IOException <STRING> bsLiveShadow zvec zvec <INT> bsBuffShadow bsLiveShadow <INT> this bsLive bsLiveShadow this bsBuff bsBuffShadow dataShadow perm zt zvec dataShadow base zt zn
private void setupBlock IOException this data null return final int cftab this data cftab final int tt this data initTT this last <INT> final byte ll8 this data ll8 cftab <INT> <INT> System arraycopy this data unzftab <INT> cftab <INT> <INT> int i <INT> c cftab <INT> i <INT> i c cftab i cftab i c int i <INT> lastShadow this last i lastShadow i tt cftab ll8 i <INT> i this origPtr <INT> this origPtr tt length IOException <STRING> this su_tPos tt this origPtr this su_count <INT> this su_i2 <INT> this su_ch2 <INT> this blockRandomised this su_rNToGo <INT> this su_rTPos <INT> setupRandPartA setupNoRandPartA
private void setupRandPartA IOException this su_i2 this last this su_chPrev this su_ch2 int su_ch2Shadow this data ll8 this su_tPos <INT> this su_tPos this data tt this su_tPos this su_rNToGo <INT> this su_rNToGo BZip2Constants rNums this su_rTPos <INT> this su_rTPos <INT> this su_rTPos <INT> this su_rNToGo this su_ch2 su_ch2Shadow this su_rNToGo <INT> <INT> <INT> this su_i2 this currentChar su_ch2Shadow this currentState RAND_PART_B_STATE this crc updateCRC su_ch2Shadow endBlock initBlock setupBlock
private void setupNoRandPartA IOException this su_i2 this last this su_chPrev this su_ch2 int su_ch2Shadow this data ll8 this su_tPos <INT> this su_ch2 su_ch2Shadow this su_tPos this data tt this su_tPos this su_i2 this currentChar su_ch2Shadow this currentState NO_RAND_PART_B_STATE this crc updateCRC su_ch2Shadow this currentState NO_RAND_PART_A_STATE endBlock initBlock setupBlock
private void setupRandPartB IOException this su_ch2 this su_chPrev this currentState RAND_PART_A_STATE this su_count <INT> setupRandPartA this su_count <INT> this su_z char this data ll8 this su_tPos <INT> this su_tPos this data tt this su_tPos this su_rNToGo <INT> this su_rNToGo BZip2Constants rNums this su_rTPos <INT> this su_rTPos <INT> this su_rTPos <INT> this su_rNToGo this su_j2 <INT> this currentState RAND_PART_C_STATE this su_rNToGo <INT> this su_z <INT> setupRandPartC this currentState RAND_PART_A_STATE setupRandPartA
private void setupRandPartC IOException this su_j2 this su_z this currentChar this su_ch2 this crc updateCRC this su_ch2 this su_j2 this currentState RAND_PART_A_STATE this su_i2 this su_count <INT> setupRandPartA
private void setupNoRandPartB IOException this su_ch2 this su_chPrev this su_count <INT> setupNoRandPartA this su_count <INT> this su_z char this data ll8 this su_tPos <INT> this su_tPos this data tt this su_tPos this su_j2 <INT> setupNoRandPartC setupNoRandPartA
private void setupNoRandPartC IOException this su_j2 this su_z int su_ch2Shadow this su_ch2 this currentChar su_ch2Shadow this crc updateCRC su_ch2Shadow this su_j2 this currentState NO_RAND_PART_C_STATE this su_i2 this su_count <INT> setupNoRandPartA
public TarOutputStream OutputStream os int blockSize int recordSize os this buffer TarBuffer os blockSize recordSize this debug false this assemLen <INT> this assemBuf byte recordSize this recordBuf byte recordSize this oneBuf byte <INT>
public void putNextEntry TarEntry entry IOException entry getName length TarConstants NAMELEN longFileMode LONGFILE_GNU TarEntry longLinkEntry TarEntry TarConstants GNU_LONGLINK TarConstants LF_GNUTYPE_LONGNAME longLinkEntry setSize entry getName length <INT> putNextEntry longLinkEntry write entry getName getBytes write <INT> closeEntry longFileMode LONGFILE_TRUNCATE RuntimeException <STRING> entry getName <STRING> TarConstants NAMELEN <STRING> entry writeEntryHeader recordBuf buffer writeRecord recordBuf currBytes <INT> entry isDirectory currSize <INT> currSize entry getSize currName entry getName
public void closeEntry IOException assemLen <INT> int i assemLen i assemBuf length i assemBuf i <INT> buffer writeRecord assemBuf currBytes assemLen assemLen <INT> currBytes currSize IOException <STRING> currName <STRING> currBytes <STRING> currSize <STRING>
public void write byte wBuf int wOffset int numToWrite IOException currBytes numToWrite currSize IOException <STRING> numToWrite <STRING> currSize <STRING> currName <STRING> assemLen <INT> assemLen numToWrite recordBuf length int aLen recordBuf length assemLen System arraycopy assemBuf <INT> recordBuf <INT> assemLen System arraycopy wBuf wOffset recordBuf assemLen aLen buffer writeRecord recordBuf currBytes recordBuf length wOffset aLen numToWrite aLen assemLen <INT> System arraycopy wBuf wOffset assemBuf assemLen numToWrite wOffset numToWrite assemLen numToWrite numToWrite <INT> numToWrite <INT> numToWrite recordBuf length System arraycopy wBuf wOffset assemBuf assemLen numToWrite assemLen numToWrite break buffer writeRecord wBuf wOffset int num recordBuf length currBytes num numToWrite num wOffset num
private void writeEOFRecord IOException int i <INT> i recordBuf length i recordBuf i <INT> buffer writeRecord recordBuf
private void initialize int blockSize int recordSize this debug false this blockSize blockSize this recordSize recordSize this recsPerBlock this blockSize this recordSize this blockBuffer byte this blockSize this inStream null this currBlkIdx <INT> this currRecIdx this recsPerBlock this currBlkIdx <INT> this currRecIdx <INT>
public boolean isEOFRecord byte record int i <INT> sz getRecordSize i sz i record i <INT> false true
public void skipRecord IOException debug System err println <STRING> currRecIdx <STRING> currBlkIdx inStream null IOException <STRING> currRecIdx recsPerBlock readBlock return currRecIdx
public byte readRecord IOException debug System err println <STRING> currRecIdx <STRING> currBlkIdx inStream null IOException <STRING> currRecIdx recsPerBlock readBlock null byte result byte recordSize System arraycopy blockBuffer currRecIdx recordSize result <INT> recordSize currRecIdx result
private boolean readBlock IOException debug System err println <STRING> currBlkIdx inStream null IOException <STRING> currRecIdx <INT> int offset <INT> int bytesNeeded blockSize bytesNeeded <INT> long numBytes inStream read blockBuffer offset bytesNeeded numBytes <INT> offset <INT> false Arrays fill blockBuffer offset offset bytesNeeded byte <INT> break offset numBytes bytesNeeded numBytes numBytes blockSize debug System err println <STRING> numBytes <STRING> blockSize <STRING> currBlkIdx true
public void writeRecord byte record IOException debug System err println <STRING> currRecIdx <STRING> currBlkIdx outStream null IOException <STRING> record length recordSize IOException <STRING> record length <STRING> recordSize <STRING> currRecIdx recsPerBlock writeBlock System arraycopy record <INT> blockBuffer currRecIdx recordSize recordSize currRecIdx
public void writeRecord byte buf int offset IOException debug System err println <STRING> currRecIdx <STRING> currBlkIdx outStream null IOException <STRING> offset recordSize buf length IOException <STRING> buf length <STRING> offset <STRING> recordSize <STRING> currRecIdx recsPerBlock writeBlock System arraycopy buf offset blockBuffer currRecIdx recordSize recordSize currRecIdx
private void writeBlock IOException debug System err println <STRING> currBlkIdx outStream null IOException <STRING> outStream write blockBuffer <INT> blockSize outStream flush currRecIdx <INT> currBlkIdx Arrays fill blockBuffer byte <INT>
void flushBlock IOException debug System err println <STRING> outStream null IOException <STRING> currRecIdx <INT> writeBlock
public void close IOException debug System err println <STRING> outStream null flushBlock outStream System out outStream System err outStream close outStream null inStream null inStream System in inStream close inStream null
public TarInputStream InputStream is int blockSize int recordSize is this buffer TarBuffer is blockSize recordSize this readBuf null this oneBuf byte <INT> this debug false this hasHitEOF false
public int available IOException entrySize entryOffset Integer MAX_VALUE Integer MAX_VALUE int entrySize entryOffset
public long skip long numToSkip IOException byte skipBuf byte BUFFER_SIZE long skip numToSkip skip <INT> int realSkip int skip skipBuf length skipBuf length skip int numRead read skipBuf <INT> realSkip numRead <INT> break skip numRead numToSkip skip
public TarEntry getNextEntry IOException hasHitEOF null currEntry null long numToSkip entrySize entryOffset debug System err println <STRING> currEntry getName <STRING> entrySize <STRING> entryOffset <STRING> numToSkip <STRING> numToSkip <INT> long skipped skip numToSkip skipped <INT> RuntimeException <STRING> <STRING> numToSkip skipped readBuf null byte headerBuf buffer readRecord headerBuf null debug System err println <STRING> hasHitEOF true buffer isEOFRecord headerBuf debug System err println <STRING> hasHitEOF true hasHitEOF currEntry null currEntry TarEntry headerBuf debug System err println <STRING> currEntry getName <STRING> currEntry getSize entryOffset <INT> entrySize currEntry getSize currEntry null currEntry isGNULongNameEntry StringBuffer longName StringBuffer byte buf byte SMALL_BUFFER_SIZE int length <INT> length read buf <INT> longName append String buf <INT> length getNextEntry currEntry null null longName length <INT> longName charAt longName length <INT> <INT> longName deleteCharAt longName length <INT> currEntry setName longName toString currEntry
public int read byte buf int offset int numToRead IOException int totalRead <INT> entryOffset entrySize <INT> numToRead entryOffset entrySize numToRead int entrySize entryOffset readBuf null int sz numToRead readBuf length readBuf length numToRead System arraycopy readBuf <INT> buf offset sz sz readBuf length readBuf null int newLen readBuf length sz byte newBuf byte newLen System arraycopy readBuf sz newBuf <INT> newLen readBuf newBuf totalRead sz numToRead sz offset sz numToRead <INT> byte rec buffer readRecord rec null IOException <STRING> numToRead <STRING> int sz numToRead int recLen rec length recLen sz System arraycopy rec <INT> buf offset sz readBuf byte recLen sz System arraycopy rec sz readBuf <INT> recLen sz sz recLen System arraycopy rec <INT> buf offset recLen totalRead sz numToRead sz offset sz entryOffset totalRead totalRead
public static long parseOctal byte header int offset int length long result <INT> boolean stillPadding true int end offset length int i offset i end i header i <INT> break header i byte <CHAR> header i <CHAR> stillPadding continue header i byte <CHAR> break stillPadding false result result <INT> header i <CHAR> result
public static StringBuffer parseName byte header int offset int length StringBuffer result StringBuffer length int end offset length int i offset i end i header i <INT> break result append char header i result
public static int getNameBytes StringBuffer name byte buf int offset int length int i i <INT> i length i name length i buf offset i byte name charAt i i length i buf offset i <INT> offset length
public static int getOctalBytes long value byte buf int offset int length int idx length <INT> buf offset idx <INT> idx buf offset idx byte <CHAR> idx value <INT> buf offset idx byte <CHAR> idx long val value idx <INT> val <INT> idx buf offset idx byte byte <CHAR> byte val <INT> val val <INT> idx <INT> idx buf offset idx byte <CHAR> offset length
public static int getLongOctalBytes long value byte buf int offset int length byte temp byte length <INT> getOctalBytes value temp <INT> length <INT> System arraycopy temp <INT> buf offset length offset length
public static int getCheckSumOctalBytes long value byte buf int offset int length getOctalBytes value buf offset length buf offset length <INT> byte <CHAR> buf offset length <INT> <INT> offset length
public static long computeCheckSum byte buf long sum <INT> int i <INT> i buf length i sum BYTE_MASK buf i sum
private TarEntry this magic StringBuffer TMAGIC this name StringBuffer this linkName StringBuffer String user System getProperty <STRING> <STRING> user length MAX_NAMELEN user user substring <INT> MAX_NAMELEN this userId <INT> this groupId <INT> this userName StringBuffer user this groupName StringBuffer <STRING> this file null
public TarEntry String name boolean preserveLeadingSlashes this name normalizeFileName name preserveLeadingSlashes boolean isDir name endsWith <STRING> this devMajor <INT> this devMinor <INT> this name StringBuffer name this mode isDir DEFAULT_DIR_MODE DEFAULT_FILE_MODE this linkFlag isDir LF_DIR LF_NORMAL this userId <INT> this groupId <INT> this size <INT> this modTime Date getTime MILLIS_PER_SECOND this linkName StringBuffer <STRING> this userName StringBuffer <STRING> this groupName StringBuffer <STRING> this devMajor <INT> this devMinor <INT>
public TarEntry File file this this file file String fileName normalizeFileName file getPath false this linkName StringBuffer <STRING> this name StringBuffer fileName file isDirectory this mode DEFAULT_DIR_MODE this linkFlag LF_DIR int nameLength name length nameLength <INT> name charAt nameLength <INT> <CHAR> this name append <STRING> this size <INT> this mode DEFAULT_FILE_MODE this linkFlag LF_NORMAL this size file length this modTime file lastModified MILLIS_PER_SECOND this devMajor <INT> this devMinor <INT>
public boolean isDirectory file null file isDirectory linkFlag LF_DIR true getName endsWith <STRING> true false
public TarEntry getDirectoryEntries file null file isDirectory TarEntry <INT> String list file list TarEntry result TarEntry list length int i <INT> i list length i result i TarEntry File file list i result
public void writeEntryHeader byte outbuf int offset <INT> offset TarUtils getNameBytes name outbuf offset NAMELEN offset TarUtils getOctalBytes mode outbuf offset MODELEN offset TarUtils getOctalBytes userId outbuf offset UIDLEN offset TarUtils getOctalBytes groupId outbuf offset GIDLEN offset TarUtils getLongOctalBytes size outbuf offset SIZELEN offset TarUtils getLongOctalBytes modTime outbuf offset MODTIMELEN int csOffset offset int c <INT> c CHKSUMLEN c outbuf offset byte <CHAR> outbuf offset linkFlag offset TarUtils getNameBytes linkName outbuf offset NAMELEN offset TarUtils getNameBytes magic outbuf offset MAGICLEN offset TarUtils getNameBytes userName outbuf offset UNAMELEN offset TarUtils getNameBytes groupName outbuf offset GNAMELEN offset TarUtils getOctalBytes devMajor outbuf offset DEVLEN offset TarUtils getOctalBytes devMinor outbuf offset DEVLEN offset outbuf length outbuf offset <INT> long chk TarUtils computeCheckSum outbuf TarUtils getCheckSumOctalBytes chk outbuf csOffset CHKSUMLEN
public void parseTarHeader byte header int offset <INT> name TarUtils parseName header offset NAMELEN offset NAMELEN mode int TarUtils parseOctal header offset MODELEN offset MODELEN userId int TarUtils parseOctal header offset UIDLEN offset UIDLEN groupId int TarUtils parseOctal header offset GIDLEN offset GIDLEN size TarUtils parseOctal header offset SIZELEN offset SIZELEN modTime TarUtils parseOctal header offset MODTIMELEN offset MODTIMELEN offset CHKSUMLEN linkFlag header offset linkName TarUtils parseName header offset NAMELEN offset NAMELEN magic TarUtils parseName header offset MAGICLEN offset MAGICLEN userName TarUtils parseName header offset UNAMELEN offset UNAMELEN groupName TarUtils parseName header offset GNAMELEN offset GNAMELEN devMajor int TarUtils parseOctal header offset DEVLEN offset DEVLEN devMinor int TarUtils parseOctal header offset DEVLEN
private static String normalizeFileName String fileName boolean preserveLeadingSlashes String osname System getProperty <STRING> toLowerCase Locale ENGLISH osname null osname startsWith <STRING> fileName length <INT> char ch1 fileName charAt <INT> char ch2 fileName charAt <INT> ch2 <CHAR> ch1 <CHAR> ch1 <CHAR> ch1 <CHAR> ch1 <CHAR> fileName fileName substring <INT> osname indexOf <STRING> <INT> int colon fileName indexOf <CHAR> colon <INT> fileName fileName substring colon <INT> fileName fileName replace File separatorChar <CHAR> preserveLeadingSlashes fileName startsWith <STRING> fileName fileName substring <INT> fileName
public ByteBuffer encode String name CharsetEncoder enc this charset newEncoder enc onMalformedInput CodingErrorAction REPORT enc onUnmappableCharacter CodingErrorAction REPORT CharBuffer cb CharBuffer wrap name ByteBuffer out ByteBuffer allocate name length name length <INT> <INT> cb remaining <INT> CoderResult res enc encode cb out true res isUnmappable res isMalformed res length <INT> out remaining out ZipEncodingHelper growBuffer out out position res length <INT> int i <INT> i res length i ZipEncodingHelper appendSurrogate out cb get res isOverflow out ZipEncodingHelper growBuffer out <INT> res isUnderflow enc flush out break out limit out position out rewind out
public String decode byte data IOException this charset newDecoder onMalformedInput CodingErrorAction REPORT onUnmappableCharacter CodingErrorAction REPORT decode ByteBuffer wrap data toString
public ZipOutputStream OutputStream out out
public ZipOutputStream File file IOException null raf RandomAccessFile file <STRING> raf setLength <INT> IOException e raf null raf close IOException inner raf null out FileOutputStream file
public void setUseLanguageEncodingFlag boolean b useUTF8Flag b ZipEncodingHelper isUTF8 encoding
public void finish IOException closeEntry cdOffset written Iterator i entries iterator i hasNext writeCentralFileHeader ZipEntry i next cdLength written cdOffset writeCentralDirectoryEnd offsets clear entries clear
public void closeEntry IOException entry null return long realCrc crc getValue crc reset entry getMethod DEFLATED def finish def finished deflate entry setSize adjustToLong def getTotalIn entry setCompressedSize adjustToLong def getTotalOut entry setCrc realCrc def reset written entry getCompressedSize raf null entry getCrc realCrc ZipException <STRING> entry getName <STRING> Long toHexString entry getCrc <STRING> Long toHexString realCrc entry getSize written dataStart ZipException <STRING> entry getName <STRING> entry getSize <STRING> written dataStart long size written dataStart entry setSize size entry setCompressedSize size entry setCrc realCrc raf null long save raf getFilePointer raf seek localDataStart writeOut ZipLong getBytes entry getCrc writeOut ZipLong getBytes entry getCompressedSize writeOut ZipLong getBytes entry getSize raf seek save writeDataDescriptor entry entry null
public void putNextEntry ZipEntry ze IOException closeEntry entry ze entries add entry entry getMethod <INT> entry setMethod method entry getTime <INT> entry setTime System currentTimeMillis entry getMethod STORED raf null entry getSize <INT> ZipException <STRING> <STRING> <STRING> entry getCrc <INT> ZipException <STRING> <STRING> entry setCompressedSize entry getSize entry getMethod DEFLATED hasCompressionLevelChanged def setLevel level hasCompressionLevelChanged false writeLocalFileHeader entry
public void setLevel int level level Deflater DEFAULT_COMPRESSION level Deflater BEST_COMPRESSION IllegalArgumentException <STRING> level hasCompressionLevelChanged this level level this level level
public void write byte b int offset int length IOException entry getMethod DEFLATED length <INT> def finished length DEFLATER_BLOCK_SIZE def setInput b offset length deflateUntilInputIsNeeded final int fullblocks length DEFLATER_BLOCK_SIZE int i <INT> i fullblocks i def setInput b offset i DEFLATER_BLOCK_SIZE DEFLATER_BLOCK_SIZE deflateUntilInputIsNeeded final int done fullblocks DEFLATER_BLOCK_SIZE done length def setInput b offset done length done deflateUntilInputIsNeeded writeOut b offset length written length crc update b offset length
public void close IOException finish raf null raf close out null out close
protected void writeLocalFileHeader ZipEntry ze IOException boolean encodable zipEncoding canEncode ze getName final ZipEncoding entryEncoding encodable fallbackToUTF8 entryEncoding ZipEncodingHelper UTF8_ZIP_ENCODING entryEncoding zipEncoding ByteBuffer name entryEncoding encode ze getName createUnicodeExtraFields UnicodeExtraFieldPolicy NEVER createUnicodeExtraFields UnicodeExtraFieldPolicy ALWAYS encodable ze addExtraField UnicodePathExtraField ze getName name array name arrayOffset name limit String comm ze getComment comm null <STRING> equals comm boolean commentEncodable this zipEncoding canEncode comm createUnicodeExtraFields UnicodeExtraFieldPolicy ALWAYS commentEncodable ByteBuffer commentB entryEncoding encode comm ze addExtraField UnicodeCommentExtraField comm commentB array commentB arrayOffset commentB limit offsets put ze ZipLong getBytes written writeOut LFH_SIG written WORD final int zipMethod ze getMethod writeVersionNeededToExtractAndGeneralPurposeBits zipMethod encodable fallbackToUTF8 written WORD writeOut ZipShort getBytes zipMethod written SHORT writeOut toDosTime ze getTime written WORD localDataStart written zipMethod DEFLATED raf null writeOut LZERO writeOut LZERO writeOut LZERO writeOut ZipLong getBytes ze getCrc writeOut ZipLong getBytes ze getSize writeOut ZipLong getBytes ze getSize written <INT> writeOut ZipShort getBytes name limit written SHORT byte extra ze getLocalFileDataExtra writeOut ZipShort getBytes extra length written SHORT writeOut name array name arrayOffset name limit written name limit writeOut extra written extra length dataStart written
protected void writeDataDescriptor ZipEntry ze IOException ze getMethod DEFLATED raf null return writeOut DD_SIG writeOut ZipLong getBytes entry getCrc writeOut ZipLong getBytes entry getCompressedSize writeOut ZipLong getBytes entry getSize written <INT>
protected void writeCentralFileHeader ZipEntry ze IOException writeOut CFH_SIG written WORD writeOut ZipShort getBytes ze getPlatform <INT> <INT> written SHORT final int zipMethod ze getMethod final boolean encodable zipEncoding canEncode ze getName writeVersionNeededToExtractAndGeneralPurposeBits zipMethod encodable fallbackToUTF8 written WORD writeOut ZipShort getBytes zipMethod written SHORT writeOut toDosTime ze getTime written WORD writeOut ZipLong getBytes ze getCrc writeOut ZipLong getBytes ze getCompressedSize writeOut ZipLong getBytes ze getSize written <INT> final ZipEncoding entryEncoding encodable fallbackToUTF8 entryEncoding ZipEncodingHelper UTF8_ZIP_ENCODING entryEncoding zipEncoding ByteBuffer name entryEncoding encode ze getName writeOut ZipShort getBytes name limit written SHORT byte extra ze getCentralDirectoryExtra writeOut ZipShort getBytes extra length written SHORT String comm ze getComment comm null comm <STRING> ByteBuffer commentB entryEncoding encode comm writeOut ZipShort getBytes commentB limit written SHORT writeOut ZERO written SHORT writeOut ZipShort getBytes ze getInternalAttributes written SHORT writeOut ZipLong getBytes ze getExternalAttributes written WORD writeOut byte offsets get ze written WORD writeOut name array name arrayOffset name limit written name limit writeOut extra written extra length writeOut commentB array commentB arrayOffset commentB limit written commentB limit
protected void writeCentralDirectoryEnd IOException writeOut EOCD_SIG writeOut ZERO writeOut ZERO byte num ZipShort getBytes entries size writeOut num writeOut num writeOut ZipLong getBytes cdLength writeOut ZipLong getBytes cdOffset ByteBuffer data this zipEncoding encode comment writeOut ZipShort getBytes data limit writeOut data array data arrayOffset data limit
protected static byte toDosTime long t Date time Date t int year time getYear <INT> year <INT> DOS_TIME_MIN int month time getMonth <INT> long value year <INT> <INT> month <INT> time getDate <INT> time getHours <INT> time getMinutes <INT> time getSeconds <INT> ZipLong getBytes value
protected byte getBytes String name ZipException ByteBuffer b ZipEncodingHelper getZipEncoding encoding encode name byte result byte b limit System arraycopy b array b arrayOffset result <INT> result length result IOException ex ZipException <STRING> ex getMessage
protected final void writeOut byte data int offset int length IOException raf null raf write data offset length out write data offset length
private void writeVersionNeededToExtractAndGeneralPurposeBits final int zipMethod final boolean utfFallback IOException int versionNeededToExtract <INT> int generalPurposeFlag useUTF8Flag utfFallback UFT8_NAMES_FLAG <INT> zipMethod DEFLATED raf null versionNeededToExtract <INT> generalPurposeFlag <INT> writeOut ZipShort getBytes versionNeededToExtract writeOut ZipShort getBytes generalPurposeFlag
public static void register Class c ZipExtraField ze ZipExtraField c newInstance implementations put ze getHeaderId c ClassCastException cc RuntimeException c <STRING> InstantiationException ie RuntimeException c <STRING> IllegalAccessException ie RuntimeException c <STRING>
public static ZipExtraField createExtraField ZipShort headerId InstantiationException IllegalAccessException Class c Class implementations get headerId c null ZipExtraField c newInstance UnrecognizedExtraField u UnrecognizedExtraField u setHeaderId headerId u
public static ZipExtraField parse byte data boolean local UnparseableExtraField onUnparseableData ZipException List v ArrayList int start <INT> LOOP start data length WORD ZipShort headerId ZipShort data start int length ZipShort data start <INT> getValue start WORD length data length onUnparseableData getKey UnparseableExtraField THROW_KEY ZipException <STRING> start <STRING> length <STRING> <STRING> data length start WORD <STRING> UnparseableExtraField READ_KEY UnparseableExtraFieldData field UnparseableExtraFieldData local field parseFromLocalFileData data start data length start field parseFromCentralDirectoryData data start data length start v add field UnparseableExtraField SKIP_KEY LOOP default ZipException <STRING> onUnparseableData getKey ZipExtraField ze createExtraField headerId local ze CentralDirectoryParsingZipExtraField ze parseFromLocalFileData data start WORD length CentralDirectoryParsingZipExtraField ze parseFromCentralDirectoryData data start WORD length v add ze InstantiationException ie ZipException ie getMessage IllegalAccessException iae ZipException iae getMessage start length WORD ZipExtraField result ZipExtraField v size ZipExtraField v toArray result
public static byte mergeLocalFileDataData ZipExtraField data final boolean lastIsUnparseableHolder data length <INT> data data length <INT> UnparseableExtraFieldData int regularExtraFieldCount lastIsUnparseableHolder data length <INT> data length int sum WORD regularExtraFieldCount int i <INT> i data length i sum data i getLocalFileDataLength getValue byte result byte sum int start <INT> int i <INT> i regularExtraFieldCount i System arraycopy data i getHeaderId getBytes <INT> result start <INT> System arraycopy data i getLocalFileDataLength getBytes <INT> result start <INT> <INT> byte local data i getLocalFileDataData System arraycopy local <INT> result start WORD local length start local length WORD lastIsUnparseableHolder byte local data data length <INT> getLocalFileDataData System arraycopy local <INT> result start local length result
public static byte mergeCentralDirectoryData ZipExtraField data final boolean lastIsUnparseableHolder data length <INT> data data length <INT> UnparseableExtraFieldData int regularExtraFieldCount lastIsUnparseableHolder data length <INT> data length int sum WORD regularExtraFieldCount int i <INT> i data length i sum data i getCentralDirectoryLength getValue byte result byte sum int start <INT> int i <INT> i regularExtraFieldCount i System arraycopy data i getHeaderId getBytes <INT> result start <INT> System arraycopy data i getCentralDirectoryLength getBytes <INT> result start <INT> <INT> byte local data i getCentralDirectoryData System arraycopy local <INT> result start WORD local length start local length WORD lastIsUnparseableHolder byte local data data length <INT> getCentralDirectoryData System arraycopy local <INT> result start local length result
public void parseFromCentralDirectoryData byte buffer int offset int length centralDirectoryData byte length System arraycopy buffer offset centralDirectoryData <INT> length localFileData null parseFromLocalFileData buffer offset length
public void parseFromCentralDirectoryData byte data int offset int length byte tmp byte length System arraycopy data offset tmp <INT> length setCentralDirectoryData tmp localData null setLocalFileDataData tmp
public AsiExtraField
public byte getLocalFileDataData byte data byte getLocalFileDataLength getValue WORD System arraycopy ZipShort getBytes getMode <INT> data <INT> <INT> byte linkArray getLinkedFile getBytes System arraycopy ZipLong getBytes linkArray length <INT> data <INT> WORD System arraycopy ZipShort getBytes getUserId <INT> data <INT> <INT> System arraycopy ZipShort getBytes getGroupId <INT> data <INT> <INT> System arraycopy linkArray <INT> data <INT> linkArray length crc reset crc update data long checksum crc getValue byte result byte data length WORD System arraycopy ZipLong getBytes checksum <INT> result <INT> WORD System arraycopy data <INT> result WORD data length result
public void parseFromLocalFileData byte data int offset int length ZipException long givenChecksum ZipLong getValue data offset byte tmp byte length WORD System arraycopy data offset WORD tmp <INT> length WORD crc reset crc update tmp long realChecksum crc getValue givenChecksum realChecksum ZipException <STRING> Long toHexString givenChecksum <STRING> Long toHexString realChecksum int newMode ZipShort getValue tmp <INT> byte linkArray byte int ZipLong getValue tmp <INT> uid ZipShort getValue tmp <INT> gid ZipShort getValue tmp <INT> linkArray length <INT> link <STRING> System arraycopy tmp <INT> linkArray <INT> linkArray length link String linkArray setDirectory newMode DIR_FLAG <INT> setMode newMode
protected int getMode int mode int type FILE_FLAG isLink type LINK_FLAG isDirectory type DIR_FLAG type mode PERM_MASK
public Object clone AsiExtraField cloned AsiExtraField clone cloned crc CRC32 cloned CloneNotSupportedException cnfe RuntimeException cnfe
public byte getBytes byte result byte <INT> result <INT> byte value BYTE_MASK result <INT> byte value BYTE_1_MASK BYTE_1_SHIFT result
public boolean equals Object o o null o ZipShort false value ZipShort o getValue
public ZipFile File f String encoding boolean useUnicodeExtraFields IOException this encoding encoding this zipEncoding ZipEncodingHelper getZipEncoding encoding this useUnicodeExtraFields useUnicodeExtraFields archive RandomAccessFile f <STRING> boolean success false Map entriesWithoutUTF8Flag populateFromCentralDirectory resolveLocalFileHeaderData entriesWithoutUTF8Flag success true success archive close IOException e2
public InputStream getInputStream ZipEntry ze IOException ZipException OffsetEntry offsetEntry OffsetEntry entries get ze offsetEntry null null long start offsetEntry dataOffset BoundedInputStream bis BoundedInputStream start ze getCompressedSize ze getMethod ZipEntry STORED bis ZipEntry DEFLATED bis addDummy InflaterInputStream bis Inflater true default ZipException <STRING> ze getMethod
private Map populateFromCentralDirectory IOException HashMap noUTF8Flag HashMap positionAtCentralDirectory byte cfh byte CFH_LEN byte signatureBytes byte WORD archive readFully signatureBytes long sig ZipLong getValue signatureBytes final long cfhSig ZipLong getValue ZipOutputStream CFH_SIG sig cfhSig startsWithLocalFileHeader IOException <STRING> <STRING> sig cfhSig archive readFully cfh int off <INT> ZipEntry ze ZipEntry int versionMadeBy ZipShort getValue cfh off off SHORT ze setPlatform versionMadeBy BYTE_SHIFT NIBLET_MASK off SHORT final int generalPurposeFlag ZipShort getValue cfh off final boolean hasUTF8Flag generalPurposeFlag ZipOutputStream UFT8_NAMES_FLAG <INT> final ZipEncoding entryEncoding hasUTF8Flag ZipEncodingHelper UTF8_ZIP_ENCODING zipEncoding off SHORT ze setMethod ZipShort getValue cfh off off SHORT long time dosToJavaTime ZipLong getValue cfh off ze setTime time off WORD ze setCrc ZipLong getValue cfh off off WORD ze setCompressedSize ZipLong getValue cfh off off WORD ze setSize ZipLong getValue cfh off off WORD int fileNameLen ZipShort getValue cfh off off SHORT int extraLen ZipShort getValue cfh off off SHORT int commentLen ZipShort getValue cfh off off SHORT off SHORT ze setInternalAttributes ZipShort getValue cfh off off SHORT ze setExternalAttributes ZipLong getValue cfh off off WORD byte fileName byte fileNameLen archive readFully fileName ze setName entryEncoding decode fileName OffsetEntry offset OffsetEntry offset headerOffset ZipLong getValue cfh off entries put ze offset nameMap put ze getName ze byte cdExtraData byte extraLen archive readFully cdExtraData ze setCentralDirectoryExtra cdExtraData byte comment byte commentLen archive readFully comment ze setComment entryEncoding decode comment archive readFully signatureBytes sig ZipLong getValue signatureBytes hasUTF8Flag useUnicodeExtraFields noUTF8Flag put ze NameAndComment fileName comment noUTF8Flag
private void positionAtCentralDirectory IOException boolean found false long off archive length MIN_EOCD_SIZE long stopSearching Math max <INT> archive length MAX_EOCD_SIZE off <INT> archive seek off byte sig ZipOutputStream EOCD_SIG int curr archive read off stopSearching curr <INT> curr sig POS_0 curr archive read curr sig POS_1 curr archive read curr sig POS_2 curr archive read curr sig POS_3 found true break archive seek off curr archive read found ZipException <STRING> archive seek off CFD_LOCATOR_OFFSET byte cfdOffset byte WORD archive readFully cfdOffset archive seek ZipLong getValue cfdOffset
private void resolveLocalFileHeaderData Map entriesWithoutUTF8Flag IOException Enumeration e getEntries e hasMoreElements ZipEntry ze ZipEntry e nextElement OffsetEntry offsetEntry OffsetEntry entries get ze long offset offsetEntry headerOffset archive seek offset LFH_OFFSET_FOR_FILENAME_LENGTH byte b byte SHORT archive readFully b int fileNameLen ZipShort getValue b archive readFully b int extraFieldLen ZipShort getValue b int lenToSkip fileNameLen lenToSkip <INT> int skipped archive skipBytes lenToSkip skipped <INT> RuntimeException <STRING> <STRING> lenToSkip skipped byte localExtraData byte extraFieldLen archive readFully localExtraData ze setExtra localExtraData offsetEntry dataOffset offset LFH_OFFSET_FOR_FILENAME_LENGTH SHORT SHORT fileNameLen extraFieldLen entriesWithoutUTF8Flag containsKey ze setNameAndCommentFromExtraFields ze NameAndComment entriesWithoutUTF8Flag get ze
private static long dosToJavaTime long dosTime Calendar cal Calendar getInstance cal set Calendar YEAR int dosTime <INT> <INT> <INT> cal set Calendar MONTH int dosTime <INT> <INT> <INT> cal set Calendar DATE int dosTime <INT> <INT> cal set Calendar HOUR_OF_DAY int dosTime <INT> <INT> cal set Calendar MINUTE int dosTime <INT> <INT> cal set Calendar SECOND int dosTime <INT> <INT> cal getTime getTime
protected String getString byte bytes ZipException ZipEncodingHelper getZipEncoding encoding decode bytes IOException ex ZipException <STRING> ex getMessage
private boolean startsWithLocalFileHeader IOException archive seek <INT> final byte start byte WORD archive readFully start int i <INT> i start length i start i ZipOutputStream LFH_SIG i false true
private void setNameAndCommentFromExtraFields ZipEntry ze NameAndComment nc UnicodePathExtraField name UnicodePathExtraField ze getExtraField UnicodePathExtraField UPATH_ID String originalName ze getName String newName getUnicodeStringIfOriginalMatches name nc name newName null originalName equals newName ze setName newName nameMap remove originalName nameMap put newName ze nc comment null nc comment length <INT> UnicodeCommentExtraField cmt UnicodeCommentExtraField ze getExtraField UnicodeCommentExtraField UCOM_ID String newComment getUnicodeStringIfOriginalMatches cmt nc comment newComment null ze setComment newComment
private String getUnicodeStringIfOriginalMatches AbstractUnicodeExtraField f byte orig f null CRC32 crc32 CRC32 crc32 update orig long origCRC32 crc32 getValue origCRC32 f getNameCRC32 ZipEncodingHelper UTF8_ZIP_ENCODING decode f getUnicodeName IOException ex null null
public Simple8BitZipEncoding char highChars this highChars highChars this reverseMapping ArrayList this highChars length byte code <INT> int i <INT> i this highChars length i this reverseMapping add Simple8BitChar code this highChars i Collections sort this reverseMapping
public boolean pushEncodedChar ByteBuffer bb char c c <INT> c <INT> bb put byte c true Simple8BitChar r this encodeHighChar c r null false bb put r code true
private Simple8BitChar encodeHighChar char c int i0 <INT> int i1 this reverseMapping size i1 i0 int i i0 i1 i0 <INT> Simple8BitChar m Simple8BitChar this reverseMapping get i m unicode c m m unicode c i0 i <INT> i1 i i0 this reverseMapping size null Simple8BitChar r Simple8BitChar this reverseMapping get i0 r unicode c null r
public boolean canEncode String name int i <INT> i name length i char c name charAt i this canEncodeChar c false true
public ByteBuffer encode String name ByteBuffer out ByteBuffer allocate name length <INT> name length <INT> <INT> int i <INT> i name length i char c name charAt i out remaining <INT> out ZipEncodingHelper growBuffer out out position <INT> this pushEncodedChar out c ZipEncodingHelper appendSurrogate out c out limit out position out rewind out
public String decode byte data IOException char ret char data length int i <INT> i data length i ret i this decodeByte data i String ret
public ZipEntry java util zip ZipEntry entry ZipException entry byte extra entry getExtra extra null setExtraFields ExtraFieldUtils parse extra true ExtraFieldUtils UnparseableExtraField READ setExtra
public void setUnixMode int mode setExternalAttributes mode SHORT_SHIFT mode <INT> <INT> <INT> <INT> isDirectory <INT> <INT> platform PLATFORM_UNIX
public void setExtraFields ZipExtraField fields extraFields LinkedHashMap int i <INT> i fields length i fields i UnparseableExtraFieldData unparseableExtra UnparseableExtraFieldData fields i extraFields put fields i getHeaderId fields i setExtra
public ZipExtraField getExtraFields boolean includeUnparseable extraFields null includeUnparseable unparseableExtra null ZipExtraField <INT> ZipExtraField unparseableExtra List result ArrayList extraFields values includeUnparseable unparseableExtra null result add unparseableExtra ZipExtraField result toArray ZipExtraField <INT>
public void addExtraField ZipExtraField ze ze UnparseableExtraFieldData unparseableExtra UnparseableExtraFieldData ze extraFields null extraFields LinkedHashMap extraFields put ze getHeaderId ze setExtra
public void addAsFirstExtraField ZipExtraField ze ze UnparseableExtraFieldData unparseableExtra UnparseableExtraFieldData ze LinkedHashMap copy extraFields extraFields LinkedHashMap extraFields put ze getHeaderId ze copy null copy remove ze getHeaderId extraFields putAll copy setExtra
public void removeExtraField ZipShort type extraFields null java util NoSuchElementException extraFields remove type null java util NoSuchElementException setExtra
public void setExtra byte extra RuntimeException ZipExtraField local ExtraFieldUtils parse extra true ExtraFieldUtils UnparseableExtraField READ mergeExtraFields local true Exception e RuntimeException <STRING> getName <STRING> e getMessage e
public void setCentralDirectoryExtra byte b ZipExtraField central ExtraFieldUtils parse b false ExtraFieldUtils UnparseableExtraField READ mergeExtraFields central false Exception e RuntimeException e getMessage e
private void mergeExtraFields ZipExtraField f boolean local ZipException extraFields null setExtraFields f int i <INT> i f length i ZipExtraField existing f i UnparseableExtraFieldData existing unparseableExtra existing getExtraField f i getHeaderId existing null addExtraField f i local existing CentralDirectoryParsingZipExtraField byte b f i getLocalFileDataData existing parseFromLocalFileData b <INT> b length byte b f i getCentralDirectoryData CentralDirectoryParsingZipExtraField existing parseFromCentralDirectoryData b <INT> b length setExtra
public ByteBuffer encode String name IOException this charset null ByteBuffer wrap name getBytes ByteBuffer wrap name getBytes this charset
public String decode byte data IOException this charset null String data String data this charset
public static byte getBytes long value byte result byte WORD result <INT> byte value BYTE_MASK result BYTE_1 byte value BYTE_1_MASK BYTE_1_SHIFT result BYTE_2 byte value BYTE_2_MASK BYTE_2_SHIFT result BYTE_3 byte value BYTE_3_MASK BYTE_3_SHIFT result
public static long getValue byte bytes int offset long value bytes offset BYTE_3 BYTE_3_SHIFT BYTE_3_MASK value bytes offset BYTE_2 BYTE_2_SHIFT BYTE_2_MASK value bytes offset BYTE_1 BYTE_1_SHIFT BYTE_1_MASK value bytes offset BYTE_MASK value
public boolean equals Object o o null o ZipLong false value ZipLong o getValue
public SmtpResponseReader InputStream in reader BufferedReader InputStreamReader in
public String getResponse IOException result setLength <INT> String line reader readLine line null line length <INT> result append line substring <INT> <INT> result append <STRING> line null append line hasMoreLines line break line reader readLine result toString trim
public MailMessage String host int port IOException this port port this host host replyto Vector to Vector cc Vector headersKeys Vector headersValues Vector connect sendHelo
String vectorToList Vector v StringBuffer buf StringBuffer Enumeration e v elements e hasMoreElements buf append e nextElement e hasMoreElements buf append <STRING> buf toString
void flushHeaders IOException int i <INT> i headersKeys size i String name String headersKeys elementAt i String value String headersValues elementAt i out println name <STRING> value out println out flush
static String sanitizeAddress String s int paramDepth <INT> int start <INT> int end <INT> int len s length int i <INT> i len i char c s charAt i c <CHAR> paramDepth start <INT> end i c <CHAR> paramDepth end <INT> start i <INT> paramDepth <INT> c <CHAR> start i <INT> paramDepth <INT> c <CHAR> end i end <INT> end len s substring start end
void connect IOException socket Socket host port out MailPrintStream BufferedOutputStream socket getOutputStream in SmtpResponseReader socket getInputStream getReady
void getReady IOException String response in getResponse int ok OK_READY isResponseOK response ok IOException <STRING> response
void sendHelo IOException String local InetAddress getLocalHost getHostName int ok OK_HELO send <STRING> local ok
void sendFrom String from IOException int ok OK_FROM send <STRING> <STRING> sanitizeAddress from <STRING> ok
void sendRcpt String rcpt IOException int ok OK_RCPT_1 OK_RCPT_2 send <STRING> <STRING> sanitizeAddress rcpt <STRING> ok
void sendQuit IOException int ok OK_QUIT send <STRING> ok IOException e ErrorInQuitException e
void send String msg int ok IOException out rawPrint msg <STRING> String response in getResponse isResponseOK response ok IOException <STRING> msg <STRING> response
boolean isResponseOK String response int ok int i <INT> i ok length i response startsWith <STRING> ok i true false
void disconnect IOException out null out close in null in close IOException e socket null socket close IOException e
public void write int b b <CHAR> lastChar <CHAR> rawWrite <CHAR> rawWrite b b <CHAR> lastChar <CHAR> rawWrite <CHAR> rawWrite b rawWrite b lastChar b
public void write byte buf int off int len int i <INT> i len i write buf off i
public void parse Project project Object source BuildException BuildException <STRING> <STRING> this getClass getName
public static void configure Object target AttributeList attrs Project project BuildException target TypeAdapter target TypeAdapter target getProxy IntrospectionHelper ih IntrospectionHelper getHelper project target getClass int i <INT> length attrs getLength i length i String value replaceProperties project attrs getValue i project getProperties ih setAttribute project target attrs getName i toLowerCase Locale ENGLISH value BuildException be attrs getName i equals <STRING> be
public static void addText Project project Object target String text BuildException text null return target TypeAdapter target TypeAdapter target getProxy IntrospectionHelper getHelper project target getClass addText project target text
public static String genComponentName String uri String name uri null uri equals <STRING> uri equals ANT_CORE_URI name uri <STRING> name
public static BuildException addLocationToBuildException BuildException ex Location newLocation ex getLocation null ex getMessage null ex String errorMessage <STRING> System getProperty <STRING> ex getLocation toString ex getMessage newLocation null BuildException errorMessage ex BuildException errorMessage ex newLocation
public AntClassLoader ClassLoader parent Project project Path classpath setParent parent setClassPath classpath setProject project
public AntClassLoader setParent null
public AntClassLoader Project project Path classpath setParent null setProject project setClassPath classpath
public AntClassLoader ClassLoader parent Project project Path classpath boolean parentFirst project classpath parent null setParent parent setParentFirst parentFirst addJavaLibraries
public AntClassLoader ClassLoader parent boolean parentFirst setParent parent project null this parentFirst parentFirst
public void setClassPath Path classpath pathComponents removeAllElements classpath null Path actualClasspath classpath concatSystemClasspath <STRING> String pathElements actualClasspath list int i <INT> i pathElements length i addPathElement pathElements i BuildException e
public void setThreadContextLoader isContextLoaderSaved BuildException <STRING> LoaderUtils isContextLoaderAvailable savedContextLoader LoaderUtils getContextClassLoader ClassLoader loader this project null <STRING> equals project getProperty <STRING> loader this getClass getClassLoader LoaderUtils setContextClassLoader loader isContextLoaderSaved true
public void addPathElement String pathElement BuildException File pathComponent project null project resolveFile pathElement File pathElement addPathFile pathComponent IOException e BuildException e
protected void addPathFile File pathComponent IOException pathComponents contains pathComponent pathComponents addElement pathComponent pathComponent isDirectory return String absPathPlusTimeAndLength pathComponent getAbsolutePath pathComponent lastModified <STRING> pathComponent length String classpath String pathMap get absPathPlusTimeAndLength classpath null JarFile jarFile null jarFile JarFile pathComponent Manifest manifest jarFile getManifest manifest null return classpath manifest getMainAttributes getValue Attributes Name CLASS_PATH jarFile null jarFile close classpath null classpath <STRING> pathMap put absPathPlusTimeAndLength classpath <STRING> equals classpath URL baseURL FILE_UTILS getFileURL pathComponent StringTokenizer st StringTokenizer classpath st hasMoreTokens String classpathElement st nextToken URL libraryURL URL baseURL classpathElement libraryURL getProtocol equals <STRING> log <STRING> classpathElement <STRING> <STRING> Project MSG_VERBOSE continue String decodedPath Locator decodeUri libraryURL getFile File libraryFile File decodedPath libraryFile exists isInPath libraryFile addPathFile libraryFile
public String getClasspath StringBuffer sb StringBuffer boolean firstPass true Enumeration componentEnum pathComponents elements componentEnum hasMoreElements firstPass sb append System getProperty <STRING> firstPass false sb append File componentEnum nextElement getAbsolutePath sb toString
public static void initializeClass Class theClass final Constructor cons theClass getDeclaredConstructors cons null cons length <INT> cons <INT> null final String strs String NUMBER_OF_STRINGS cons <INT> newInstance Object strs Exception e
public void addSystemPackageRoot String packageRoot systemPackages addElement packageRoot packageRoot endsWith <STRING> <STRING> <STRING>
public void addLoaderPackageRoot String packageRoot loaderPackages addElement packageRoot packageRoot endsWith <STRING> <STRING> <STRING>
public Class forceLoadClass String classname ClassNotFoundException log <STRING> classname Project MSG_DEBUG Class theClass findLoadedClass classname theClass null theClass findClass classname theClass
public Class forceLoadSystemClass String classname ClassNotFoundException log <STRING> classname Project MSG_DEBUG Class theClass findLoadedClass classname theClass null theClass findBaseClass classname theClass
public InputStream getResourceAsStream String name InputStream resourceStream null isParentFirst name resourceStream loadBaseResource name resourceStream null log <STRING> name <STRING> Project MSG_DEBUG resourceStream loadResource name resourceStream null log <STRING> name <STRING> Project MSG_DEBUG resourceStream null isParentFirst name ignoreBase resourceStream getRootLoader null null getRootLoader getResourceAsStream name resourceStream loadBaseResource name resourceStream null log <STRING> name <STRING> Project MSG_DEBUG resourceStream null log <STRING> name Project MSG_DEBUG resourceStream
private InputStream loadResource String name InputStream stream null Enumeration e pathComponents elements e hasMoreElements stream null File pathComponent File e nextElement stream getResourceStream pathComponent name stream
private InputStream getResourceStream File file String resourceName JarFile jarFile JarFile jarFiles get file jarFile null file isDirectory File resource File file resourceName resource exists FileInputStream resource jarFile null file exists jarFile JarFile file jarFiles put file jarFile null jarFile JarFile jarFiles get file JarEntry entry jarFile getJarEntry resourceName entry null jarFile getInputStream entry Exception e log <STRING> e getClass getName <STRING> e getMessage <STRING> resourceName <STRING> file Project MSG_VERBOSE null
private boolean isParentFirst String resourceName boolean useParentFirst parentFirst Enumeration e systemPackages elements e hasMoreElements String packageName String e nextElement resourceName startsWith packageName useParentFirst true break Enumeration e loaderPackages elements e hasMoreElements String packageName String e nextElement resourceName startsWith packageName useParentFirst false break useParentFirst
public URL getResource String name URL url null isParentFirst name url parent null getResource name parent getResource name url null log <STRING> name <STRING> Project MSG_DEBUG Enumeration e pathComponents elements e hasMoreElements url null File pathComponent File e nextElement url getResourceURL pathComponent name url null log <STRING> name <STRING> Project MSG_DEBUG url null isParentFirst name ignoreBase url getRootLoader null null getRootLoader getResource name url parent null getResource name parent getResource name url null log <STRING> name <STRING> Project MSG_DEBUG url null log <STRING> name Project MSG_DEBUG url
protected Enumeration findResources String name boolean parentHasBeenSearched IOException Enumeration mine ResourceEnumeration name Enumeration base parent null parentHasBeenSearched parent getParent base parent getResources name base CollectionUtils EmptyEnumeration isParentFirst name CollectionUtils append base mine ignoreBase getRootLoader null mine CollectionUtils append mine getRootLoader getResources name CollectionUtils append mine base
protected URL getResourceURL File file String resourceName JarFile jarFile JarFile jarFiles get file jarFile null file isDirectory File resource File file resourceName resource exists FILE_UTILS getFileURL resource MalformedURLException ex null jarFile null file exists jarFile JarFile file jarFiles put file jarFile null jarFile JarFile jarFiles get file JarEntry entry jarFile getJarEntry resourceName entry null URL <STRING> FILE_UTILS getFileURL file <STRING> entry MalformedURLException ex null Exception e String msg <STRING> file <STRING> log msg e Project MSG_WARN System err println msg e printStackTrace null
protected synchronized Class loadClass String classname boolean resolve ClassNotFoundException Class theClass findLoadedClass classname theClass null theClass isParentFirst classname theClass findBaseClass classname log <STRING> classname <STRING> <STRING> Project MSG_DEBUG ClassNotFoundException cnfe theClass findClass classname log <STRING> classname <STRING> <STRING> Project MSG_DEBUG theClass findClass classname log <STRING> classname <STRING> Project MSG_DEBUG ClassNotFoundException cnfe ignoreBase cnfe theClass findBaseClass classname log <STRING> classname <STRING> Project MSG_DEBUG resolve resolveClass theClass theClass
protected Class defineClassFromData File container byte classData String classname IOException definePackage container classname ProtectionDomain currentPd Project getProtectionDomain String classResource getClassFilename classname CodeSource src CodeSource FILE_UTILS getFileURL container getCertificates container classResource ProtectionDomain classesPd ProtectionDomain src currentPd getPermissions this currentPd getPrincipals defineClass classname classData <INT> classData length classesPd
protected void definePackage File container String className IOException int classIndex className lastIndexOf <CHAR> classIndex <INT> return String packageName className substring <INT> classIndex getPackage packageName null return Manifest manifest getJarManifest container manifest null definePackage packageName null null null null null null null definePackage container packageName manifest
private Manifest getJarManifest File container IOException container isDirectory null JarFile jarFile JarFile jarFiles get container jarFile null null jarFile getManifest
private Certificate getCertificates File container String entry IOException container isDirectory null JarFile jarFile JarFile jarFiles get container jarFile null null JarEntry ent jarFile getJarEntry entry ent null null ent getCertificates
protected void definePackage File container String packageName Manifest manifest String sectionName packageName replace <CHAR> <CHAR> <STRING> String specificationTitle null String specificationVendor null String specificationVersion null String implementationTitle null String implementationVendor null String implementationVersion null String sealedString null URL sealBase null Attributes sectionAttributes manifest getAttributes sectionName sectionAttributes null specificationTitle sectionAttributes getValue Name SPECIFICATION_TITLE specificationVendor sectionAttributes getValue Name SPECIFICATION_VENDOR specificationVersion sectionAttributes getValue Name SPECIFICATION_VERSION implementationTitle sectionAttributes getValue Name IMPLEMENTATION_TITLE implementationVendor sectionAttributes getValue Name IMPLEMENTATION_VENDOR implementationVersion sectionAttributes getValue Name IMPLEMENTATION_VERSION sealedString sectionAttributes getValue Name SEALED Attributes mainAttributes manifest getMainAttributes mainAttributes null specificationTitle null specificationTitle mainAttributes getValue Name SPECIFICATION_TITLE specificationVendor null specificationVendor mainAttributes getValue Name SPECIFICATION_VENDOR specificationVersion null specificationVersion mainAttributes getValue Name SPECIFICATION_VERSION implementationTitle null implementationTitle mainAttributes getValue Name IMPLEMENTATION_TITLE implementationVendor null implementationVendor mainAttributes getValue Name IMPLEMENTATION_VENDOR implementationVersion null implementationVersion mainAttributes getValue Name IMPLEMENTATION_VERSION sealedString null sealedString mainAttributes getValue Name SEALED sealedString null sealedString equalsIgnoreCase <STRING> sealBase URL FileUtils getFileUtils toURI container getAbsolutePath MalformedURLException e definePackage packageName specificationTitle specificationVersion specificationVendor implementationTitle implementationVersion implementationVendor sealBase
private Class getClassFromStream InputStream stream String classname File container IOException SecurityException ByteArrayOutputStream baos ByteArrayOutputStream int bytesRead <INT> byte buffer byte BUFFER_SIZE bytesRead stream read buffer <INT> BUFFER_SIZE <INT> baos write buffer <INT> bytesRead byte classData baos toByteArray defineClassFromData container classData classname
private Class findClassInComponents String name ClassNotFoundException InputStream stream null String classFilename getClassFilename name Enumeration e pathComponents elements e hasMoreElements File pathComponent File e nextElement stream getResourceStream pathComponent classFilename stream null log <STRING> pathComponent <STRING> classFilename Project MSG_DEBUG getClassFromStream stream name pathComponent SecurityException se se IOException ioe log <STRING> pathComponent <STRING> ioe getMessage <STRING> Project MSG_VERBOSE ClassNotFoundException name FileUtils close stream
public synchronized void cleanup Enumeration e jarFiles elements e hasMoreElements JarFile jarFile JarFile e nextElement jarFile close IOException ioe jarFiles Hashtable project null project removeBuildListener this project null
public static AntClassLoader newAntClassLoader ClassLoader parent Project project Path path boolean parentFirst subClassToLoad null AntClassLoader ReflectUtil newInstance subClassToLoad CONSTRUCTOR_ARGS Object parent project path Boolean valueOf parentFirst AntClassLoader parent project path parentFirst
protected PropertyHelper add FROM_REF add TO_STRING add SKIP_DOUBLE_DOLLAR add DEFAULT_EXPANDER
public static synchronized PropertyHelper getPropertyHelper Project project PropertyHelper helper null project null helper PropertyHelper project getReference MagicNames REFID_PROPERTY_HELPER helper null helper helper PropertyHelper helper setProject project project null project addReference MagicNames REFID_PROPERTY_HELPER helper helper
public boolean setPropertyHook String ns String name Object value boolean inherited boolean user boolean isNew getNext null boolean subst getNext setPropertyHook ns name value inherited user isNew subst true false
public Object getPropertyHook String ns String name boolean user getNext null Object o getNext getPropertyHook ns name user o null o project null name startsWith <STRING> name name substring <STRING> length Object v project getReference name v null null v toString null
public boolean setProperty String name Object value boolean verbose Iterator iter getDelegates PropertySetter iterator iter hasNext PropertySetter setter PropertySetter iter next setter set name value this true this userProperties containsKey name project null verbose project log <STRING> name <STRING> Project MSG_VERBOSE false project null verbose properties containsKey name project log <STRING> name <STRING> Project MSG_VERBOSE project log <STRING> name <STRING> value Project MSG_DEBUG name null value null properties put name value true
public void setNewProperty String name Object value Iterator iter getDelegates PropertySetter iterator iter hasNext PropertySetter setter PropertySetter iter next setter setNew name value this return this project null properties containsKey name project log <STRING> name <STRING> Project MSG_VERBOSE return project null project log <STRING> name <STRING> value Project MSG_DEBUG name null value null properties put name value
public void setUserProperty String name Object value project null project log <STRING> name <STRING> value Project MSG_DEBUG this userProperties put name value properties put name value
public void setInheritedProperty String name Object value project null project log <STRING> name <STRING> value Project MSG_DEBUG this inheritedProperties put name value userProperties put name value properties put name value
public Object getProperty String name name null null Iterator iter getDelegates PropertyEvaluator iterator iter hasNext Object o PropertyEvaluator iter next evaluate name this o null o NullReturn null o properties get name
public Hashtable getProperties properties Hashtable properties
public Hashtable getUserProperties userProperties Hashtable userProperties
public Hashtable getInheritedProperties inheritedProperties Hashtable inheritedProperties
public void copyInheritedProperties Project other inheritedProperties Enumeration e inheritedProperties keys e hasMoreElements String arg e nextElement toString other getUserProperty arg null continue Object value inheritedProperties get arg other setInheritedProperty arg value toString
public void copyUserProperties Project other userProperties Enumeration e userProperties keys e hasMoreElements Object arg e nextElement inheritedProperties containsKey arg continue Object value userProperties get arg other setUserProperty arg toString value toString
static void parsePropertyStringDefault String value Vector fragments Vector propertyRefs BuildException int prev <INT> int pos pos value indexOf <STRING> prev <INT> pos <INT> fragments addElement value substring prev pos pos value length <INT> fragments addElement <STRING> prev pos <INT> value charAt pos <INT> <CHAR> value charAt pos <INT> <CHAR> fragments addElement <STRING> prev pos <INT> fragments addElement value substring pos pos <INT> prev pos <INT> int endName value indexOf <CHAR> pos endName <INT> BuildException <STRING> value String propertyName value substring pos <INT> endName fragments addElement null propertyRefs addElement propertyName prev endName <INT> prev value length fragments addElement value substring prev
public void add Delegate delegate delegates Iterator iter getDelegateInterfaces delegate iterator iter hasNext Object key iter next List list List delegates get key list null list ArrayList list ArrayList list list remove delegate list add <INT> delegate delegates put key Collections unmodifiableList list
protected static Set getDelegateInterfaces Delegate d HashSet result HashSet Class c d getClass c null Class ifs c getInterfaces int i <INT> i ifs length i Delegate isAssignableFrom ifs i result add ifs i c c getSuperclass result remove Delegate result
public static Boolean toBoolean Object value value Boolean Boolean value value String String s String value Project toBoolean s Boolean TRUE <STRING> equalsIgnoreCase s <STRING> equalsIgnoreCase s <STRING> equalsIgnoreCase s Boolean FALSE null
private boolean evalAsBooleanOrPropertyName Object value Boolean b toBoolean value b null b booleanValue getProperty String valueOf value null
public Target
public Target Target other this name other name this ifCondition other ifCondition this unlessCondition other unlessCondition this dependencies other dependencies this location other location this project other project this description other description this children other children
public void setDepends String depS Iterator iter parseDepends depS getName <STRING> iterator iter hasNext addDependency String iter next
public static List parseDepends String depends String targetName String attributeName ArrayList list ArrayList depends length <INT> StringTokenizer tok StringTokenizer depends <STRING> true tok hasMoreTokens String token tok nextToken trim <STRING> equals token <STRING> equals token BuildException <STRING> attributeName <STRING> targetName <STRING> list add token tok hasMoreTokens token tok nextToken tok hasMoreTokens <STRING> equals token BuildException <STRING> attributeName <STRING> targetName <STRING> <STRING> list
